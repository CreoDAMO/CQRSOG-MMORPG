{
	"id": "349b6770f47943c06b3a5a6943368476",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\n// Define interfaces for the other contracts\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    // Add other ERC20 functions you need\n}\n\ninterface IERC721 {\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n    // Add other ERC721 functions you need\n}\n\ninterface IERC1155 {\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n    // Add other ERC1155 functions you need\n}\n\ninterface IDAO {\n    // Define DAO functions you need\n}\n\ninterface IStaking {\n    // Define Staking functions you need\n}\n\ninterface IFarming {\n    // Define Farming functions you need\n}\n\n/// @custom:security-contact jacquedegraff@creodamo.com\ncontract CryptoQuestTheShardsOfGenesisMMPORPG is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n    bytes32 public constant GAME_ADMIN_ROLE = keccak256(\"GAME_ADMIN_ROLE\");\n\n    IERC20 public erc20Token;\n    IERC721 public erc721Token;\n    IERC1155 public erc1155Token;\n    IDAO public daoContract;\n    IStaking public stakingContract;\n    IFarming public farmingContract;\n\n    struct Player {\n        uint level;\n        uint experience;\n        uint health;\n        uint mana;\n        uint attackDamage;\n        uint defense;\n        uint agility;\n        uint luck;\n        uint[] inventory;\n        uint[] skills;\n    }\n\n    struct Item {\n        uint id;\n        string name;\n        uint attackBonus;\n        uint defenseBonus;\n        uint manaBonus;\n        uint healthBonus;\n    }\n\n    struct Quest {\n        string title;\n        string description;\n        uint rewardXP;\n        bool completed;\n    }\n\n    struct Guild {\n        string name;\n        address leader;\n        address[] members;\n    }\n\n    struct Recipe {\n        uint[] itemIds;\n        uint resultItemId;\n    }\n\n    uint private nextItemId = 1;\n    uint private nextRecipeId = 1;\n\n    mapping(uint => Item) public items;\n    mapping(address => Player) public players;\n    mapping(address => Quest[]) public playerQuests;\n    mapping(address => Guild) public guilds;\n    mapping(string => address) guildNameToLeader;\n    mapping(uint => Recipe) public recipes;\n\n    event QuestCompleted(address indexed player, string questTitle);\n    event PlayerCreated(address indexed player);\n    event ItemAdded(uint itemId, string itemName);\n    event GuildCreated(string name, address leader);\n    event RecipeAdded(uint recipeId, uint resultItemId);\n\n    function initialize(\n        address defaultAdmin,\n        address pauser,\n        address upgrader,\n        address _erc20Address,\n        address _erc721Address,\n        address _erc1155Address,\n        address _daoAddress,\n        address _stakingAddress,\n        address _farmingAddress\n    ) initializer public {\n        __Pausable_init();\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n        _grantRole(PAUSER_ROLE, pauser);\n        _grantRole(UPGRADER_ROLE, upgrader);\n        _grantRole(GAME_ADMIN_ROLE, defaultAdmin);\n\n        erc20Token = IERC20(_erc20Address);\n        erc721Token = IERC721(_erc721Address);\n        erc1155Token = IERC1155(_erc1155Address);\n        daoContract = IDAO(_daoAddress);\n        stakingContract = IStaking(_stakingAddress);\n        farmingContract = IFarming(_farmingAddress);\n    }\n\n    function setERC20Address(address _erc20Address) external onlyRole(GAME_ADMIN_ROLE) {\n        erc20Token = IERC20(_erc20Address);\n    }\n\n    function setERC721Address(address _erc721Address) external onlyRole(GAME_ADMIN_ROLE) {\n        erc721Token = IERC721(_erc721Address);\n    }\n\n    function setERC1155Address(address _erc1155Address) external onlyRole(GAME_ADMIN_ROLE) {\n        erc1155Token = IERC1155(_erc1155Address);\n    }\n\n    function setDAOAddress(address _daoAddress) external onlyRole(GAME_ADMIN_ROLE) {\n        daoContract = IDAO(_daoAddress);\n    }\n\n    function setStakingAddress(address _stakingAddress) external onlyRole(GAME_ADMIN_ROLE) {\n        stakingContract = IStaking(_stakingAddress);\n    }\n\n    function setFarmingAddress(address _farmingAddress) external onlyRole(GAME_ADMIN_ROLE) {\n        farmingContract = IFarming(_farmingAddress);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {}\n\n    function createPlayer() public {\n        require(players[msg.sender].level == 0, \"Player already exists\");\n        players[msg.sender] = Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0));\n        emit PlayerCreated(msg.sender);\n    }\n\n    function addItem(string memory name, uint attackBonus, uint defenseBonus, uint manaBonus, uint healthBonus) public onlyRole(GAME_ADMIN_ROLE) {\n        items[nextItemId] = Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus);\n        emit ItemAdded(nextItemId, name);\n        nextItemId++;\n    }\n\n    function startQuest(string memory title, string memory description, uint rewardXP) public onlyRole(GAME_ADMIN_ROLE) {\n        playerQuests[msg.sender].push(Quest(title, description, rewardXP, false));\n    }\n\n    function completeQuest(string memory questTitle) public {\n        for (uint i = 0; i < playerQuests[msg.sender].length; i++) {\n            Quest storage quest = playerQuests[msg.sender][i];\n            if (keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) && !quest.completed) {\n                quest.completed = true;\n                players[msg.sender].experience += quest.rewardXP;\n                emit QuestCompleted(msg.sender, questTitle);\n                break;\n            }\n        }\n    }\n\n    function createGuild(string memory name, address leader) public onlyRole(GAME_ADMIN_ROLE) {\n        require(guildNameToLeader[name] == address(0), \"Guild already exists\");\n        guilds[leader] = Guild(name, leader, new address[](1));\n        guilds[leader].members[0] = leader;\n        guildNameToLeader[name] = leader;\n        emit GuildCreated(name, leader);\n    }\n\n    function joinGuild(string memory guildName) public {\n        address leader = guildNameToLeader[guildName];\n        require(leader != address(0), \"Guild does not exist\");\n\n        // Adding a check to ensure the sender is not already a member of the guild\n        Guild storage guild = guilds[leader];\n        for (uint i = 0; i < guild.members.length; i++) {\n            require(guild.members[i] != msg.sender, \"Sender is already a member of the guild\");\n        }\n\n        guild.members.push(msg.sender);\n    }\n\n    function addRecipe(uint[] memory itemIds, uint resultItemId) public onlyRole(GAME_ADMIN_ROLE) {\n        recipes[nextRecipeId] = Recipe(itemIds, resultItemId);\n        emit RecipeAdded(nextRecipeId, resultItemId);\n        nextRecipeId++;\n    }\n\n    function craftItem(uint recipeId) public {\n        Recipe memory recipe = recipes[recipeId];\n        require(recipe.itemIds.length > 0, \"Invalid recipe\");\n\n        // Check if the player has all the required items\n        for (uint i = 0; i < recipe.itemIds.length; i++) {\n            bool hasItem = false;\n            for (uint j = 0; j < players[msg.sender].inventory.length; j++) {\n                if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {\n                    hasItem = true;\n                    break;\n                }\n            }\n            require(hasItem, \"Player does not have all required items\");\n        }\n\n        // Remove required items from the player's inventory\n        for (uint i = 0; i < recipe.itemIds.length; i++) {\n            for (uint j = 0; j < players[msg.sender].inventory.length; j++) {\n                if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {\n                    players[msg.sender].inventory[j] = players[msg.sender].inventory[players[msg.sender].inventory.length - 1];\n                    players[msg.sender].inventory.pop();\n                    break;\n                }\n            }\n        }\n\n        // Add the crafted item to the player's inventory\n        players[msg.sender].inventory.push(recipe.resultItemId);\n    }\n\n    // Add more functions to interact with ERC20, ERC721, ERC1155, DAO, Staking, and Farming contracts as needed\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol": {
				"CryptoQuestTheShardsOfGenesisMMPORPG": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "leader",
									"type": "address"
								}
							],
							"name": "GuildCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "itemName",
									"type": "string"
								}
							],
							"name": "ItemAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "PlayerCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "questTitle",
									"type": "string"
								}
							],
							"name": "QuestCompleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "recipeId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "resultItemId",
									"type": "uint256"
								}
							],
							"name": "RecipeAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GAME_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "attackBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "defenseBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "manaBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthBonus",
									"type": "uint256"
								}
							],
							"name": "addItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "itemIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "resultItemId",
									"type": "uint256"
								}
							],
							"name": "addRecipe",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "questTitle",
									"type": "string"
								}
							],
							"name": "completeQuest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "recipeId",
									"type": "uint256"
								}
							],
							"name": "craftItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "leader",
									"type": "address"
								}
							],
							"name": "createGuild",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createPlayer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "daoContract",
							"outputs": [
								{
									"internalType": "contract IDAO",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc1155Token",
							"outputs": [
								{
									"internalType": "contract IERC1155",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20Token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc721Token",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "farmingContract",
							"outputs": [
								{
									"internalType": "contract IFarming",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "guilds",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "leader",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "defaultAdmin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pauser",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "upgrader",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_erc20Address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_erc721Address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_erc1155Address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_daoAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_farmingAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "items",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "attackBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "defenseBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "manaBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthBonus",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "guildName",
									"type": "string"
								}
							],
							"name": "joinGuild",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "playerQuests",
							"outputs": [
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "description",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "rewardXP",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "completed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "players",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "experience",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "health",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "mana",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "attackDamage",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "defense",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "agility",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "luck",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "recipes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "resultItemId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_daoAddress",
									"type": "address"
								}
							],
							"name": "setDAOAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_erc1155Address",
									"type": "address"
								}
							],
							"name": "setERC1155Address",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_erc20Address",
									"type": "address"
								}
							],
							"name": "setERC20Address",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_erc721Address",
									"type": "address"
								}
							],
							"name": "setERC721Address",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_farmingAddress",
									"type": "address"
								}
							],
							"name": "setFarmingAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingAddress",
									"type": "address"
								}
							],
							"name": "setStakingAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "contract IStaking",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "description",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "rewardXP",
									"type": "uint256"
								}
							],
							"name": "startQuest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "jacquedegraff@creodamo.com",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1186:9000  contract CryptoQuestTheShardsOfGenesisMMPORPG is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2478:2479  1 */\n  0x01\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2452:2479  uint private nextItemId = 1 */\n  0x06\n  dup2\n  swap1\n  sstore\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2485:2514  uint private nextRecipeId = 1 */\n  0x07\n  sstore\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1186:9000  contract CryptoQuestTheShardsOfGenesisMMPORPG is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1186:9000  contract CryptoQuestTheShardsOfGenesisMMPORPG is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8a13eea7\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xbfb231d2\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xe551ba4b\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xe551ba4b\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xee99205c\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf4e0d9ac\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf5e95acb\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xf72c0d8b\n      eq\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup1\n      0xbfb231d2\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd3dcff7c\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd836fc6f\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xe2eb41ff\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0xa75859e1\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xa75859e1\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa9834b67\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xb001f618\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xbe22d27d\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup1\n      0x8a13eea7\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x965afa89\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9a03d9a3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x41bec0d2\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x52d1902d\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5f2d6bcd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x6f347a78\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x7309cbbd\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup1\n      0x41bec0d2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x443c227c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4a7ffcbc\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4fa4a1bb\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x31fee8be\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3fa9fcf8\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x02eec568\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x17435e1a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x21f42268\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1698:1729  IFarming public farmingContract */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      sload(0x05)\n      tag_59\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_59:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":678:710   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":660:711   */\n      dup2\n      mstore\n        /* \"#utility.yul\":648:650   */\n      0x20\n        /* \"#utility.yul\":633:651   */\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1698:1729  IFarming public farmingContract */\n      tag_56\n        /* \"#utility.yul\":497:717   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5907:6439  function completeQuest(string memory questTitle) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1598:1626  IERC1155 public erc1155Token */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      sload(0x02)\n      tag_59\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n        /* \"#utility.yul\":2745:2770   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2733:2735   */\n      0x20\n        /* \"#utility.yul\":2718:2736   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      tag_56\n        /* \"#utility.yul\":2599:2776   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_64\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5374:5689  function addItem(string memory name, uint attackBonus, uint defenseBonus, uint manaBonus, uint healthBonus) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_64\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_64\n      tag_92\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4935:5010  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_64\n      tag_96\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5120:5368  function createPlayer() public {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_64\n      tag_99\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3984:4118  function setERC20Address(address _erc20Address) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_64\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2756:2794  mapping(uint => Recipe) public recipes */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_74\n      tag_107\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_107:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      0x01\n      add\n      sload\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1632:1655  IDAO public daoContract */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      sload(0x03)\n      tag_59\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_15:\n      tag_64\n      tag_118\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6445:6813  function createGuild(string memory name, address leader) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_64\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_74\n      tag_128\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      jump(tag_52)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1566:1592  IERC721 public erc721Token */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      sload(0x01)\n      tag_59\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5695:5901  function startQuest(string memory title, string memory description, uint rewardXP) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_64\n      tag_141\n      calldatasize\n      0x04\n      tag_142\n      jump\t// in\n    tag_141:\n      tag_143\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7585:8884  function craftItem(uint recipeId) public {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_64\n      tag_146\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4858:4929  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_64\n      tag_150\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1536:1560  IERC20 public erc20Token */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      sload(0x00)\n      tag_59\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_52\n      tag_158\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4419:4546  function setDAOAddress(address _daoAddress) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_64\n      tag_163\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_163:\n      tag_164\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4124:4263  function setERC721Address(address _erc721Address) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_64\n      tag_167\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2661:2700  mapping(address => Guild) public guilds */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      tag_174\n      tag_175\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_175:\n      tag_176\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7337:7579  function addRecipe(uint[] memory itemIds, uint resultItemId) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      tag_64\n      tag_181\n      calldatasize\n      0x04\n      tag_182\n      jump\t// in\n    tag_181:\n      tag_183\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      tag_185\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_185:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4705:4852  function setFarmingAddress(address _farmingAddress) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      tag_64\n      tag_191\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_191:\n      tag_192\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1459:1529  bytes32 public constant GAME_ADMIN_ROLE = keccak256(\"GAME_ADMIN_ROLE\") */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      tag_74\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2521:2555  mapping(uint => Item) public items */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      tag_198\n      tag_199\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_199:\n      tag_200\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      tag_56\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2608:2655  mapping(address => Quest[]) public playerQuests */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      tag_204\n      tag_205\n      calldatasize\n      0x04\n      tag_206\n      jump\t// in\n    tag_205:\n      tag_207\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      tag_56\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      tag_64\n      tag_212\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_212:\n      tag_213\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4269:4413  function setERC1155Address(address _erc1155Address) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      tag_64\n      tag_216\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_216:\n      tag_217\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2561:2602  mapping(address => Player) public players */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      tag_219\n      tag_220\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_220:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      dup7\n      add\n      sload\n      0x06\n      dup8\n      add\n      sload\n      0x07\n      swap1\n      swap8\n      add\n      sload\n      swap6\n      swap7\n      swap5\n      swap6\n      swap4\n      swap5\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      dup9\n      jump\n    tag_219:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10736:10761   */\n      swap9\n      dup10\n      mstore\n        /* \"#utility.yul\":10792:10794   */\n      0x20\n        /* \"#utility.yul\":10777:10795   */\n      dup10\n      add\n        /* \"#utility.yul\":10770:10804   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":10820:10838   */\n      swap6\n      dup8\n      add\n        /* \"#utility.yul\":10813:10847   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":10878:10880   */\n      0x60\n        /* \"#utility.yul\":10863:10881   */\n      dup7\n      add\n        /* \"#utility.yul\":10856:10890   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10921:10924   */\n      0x80\n        /* \"#utility.yul\":10906:10925   */\n      dup6\n      add\n        /* \"#utility.yul\":10899:10934   */\n      mstore\n        /* \"#utility.yul\":10965:10968   */\n      0xa0\n        /* \"#utility.yul\":10950:10969   */\n      dup5\n      add\n        /* \"#utility.yul\":10943:10978   */\n      mstore\n        /* \"#utility.yul\":11009:11012   */\n      0xc0\n        /* \"#utility.yul\":10994:11013   */\n      dup4\n      add\n        /* \"#utility.yul\":10987:11022   */\n      mstore\n        /* \"#utility.yul\":11053:11056   */\n      0xe0\n        /* \"#utility.yul\":11038:11057   */\n      dup3\n      add\n        /* \"#utility.yul\":11031:11066   */\n      mstore\n        /* \"#utility.yul\":10723:10726   */\n      0x0100\n        /* \"#utility.yul\":10708:10727   */\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2561:2602  mapping(address => Player) public players */\n      tag_56\n        /* \"#utility.yul\":10393:11072   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6819:7331  function joinGuild(string memory guildName) public {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      pop\n      tag_64\n      tag_226\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_226:\n      tag_227\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1319:1381  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_228\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_228:\n      pop\n      tag_74\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1661:1692  IStaking public stakingContract */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      pop\n      sload(0x04)\n      tag_59\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4552:4699  function setStakingAddress(address _stakingAddress) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_237\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_237:\n      pop\n      tag_64\n      tag_239\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_239:\n      tag_240\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3081:3978  function initialize(... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_241\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_241:\n      pop\n      tag_64\n      tag_243\n      calldatasize\n      0x04\n      tag_244\n      jump\t// in\n    tag_243:\n      tag_245\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1387:1453  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_246\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_246:\n      pop\n      tag_74\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1427:1453  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1387:1453  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3528:3532  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_252\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1173  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3544:3638  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5907:6439  function completeQuest(string memory questTitle) public {... */\n    tag_67:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5978:5984  uint i */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5973:6433  for (uint i = 0; i < playerQuests[msg.sender].length; i++) {... */\n    tag_255:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6007:6017  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5994:6018  playerQuests[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5994:6006  playerQuests */\n      0x0a\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5994:6018  playerQuests[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5994:6025  playerQuests[msg.sender].length */\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5990:6025  i < playerQuests[msg.sender].length */\n      dup2\n      lt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5973:6433  for (uint i = 0; i < playerQuests[msg.sender].length; i++) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6081:6091  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6046:6065  Quest storage quest */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6068:6092  playerQuests[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6068:6080  playerQuests */\n      0x0a\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6068:6092  playerQuests[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6068:6095  playerQuests[msg.sender][i] */\n      dup1\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6093:6094  i */\n      dup4\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6068:6095  playerQuests[msg.sender][i] */\n      dup2\n      lt\n      tag_259\n      jumpi\n      tag_259\n      tag_260\n      jump\t// in\n    tag_259:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6046:6095  Quest storage quest = playerQuests[msg.sender][i] */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6184:6194  questTitle */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6167:6195  abi.encodePacked(questTitle) */\n      add(0x20, mload(0x40))\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6157:6196  keccak256(abi.encodePacked(questTitle)) */\n      dup1\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6167:6195  abi.encodePacked(questTitle) */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6157:6196  keccak256(abi.encodePacked(questTitle)) */\n      swap2\n      dup3\n      add\n      keccak256\n      swap2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6123:6152  abi.encodePacked(quest.title) */\n      tag_264\n      swap2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6140:6145  quest */\n      dup5\n      swap2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6123:6152  abi.encodePacked(quest.title) */\n      add\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6113:6153  keccak256(abi.encodePacked(quest.title)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6113:6196  keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) */\n      eq\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6113:6216  keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) && !quest.completed */\n      dup1\n      iszero\n      tag_266\n      jumpi\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6201:6216  quest.completed */\n      0x03\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6200:6216  !quest.completed */\n      iszero\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6113:6216  keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) && !quest.completed */\n    tag_266:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6109:6423  if (keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) && !quest.completed) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6236:6251  quest.completed */\n      0x03\n      dup2\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6236:6258  quest.completed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6254:6258  true */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6236:6258  quest.completed = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6310:6324  quest.rewardXP */\n      0x02\n      dup3\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6284:6294  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6236:6251  quest.completed */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6276:6295  players[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6276:6283  players */\n      0x09\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6276:6295  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6276:6306  players[msg.sender].experience */\n      swap1\n      swap3\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6276:6324  players[msg.sender].experience += quest.rewardXP */\n      dup1\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6310:6324  quest.rewardXP */\n      swap2\n      swap3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6276:6306  players[msg.sender].experience */\n      swap1\n      swap2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6276:6324  players[msg.sender].experience += quest.rewardXP */\n      tag_268\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6310:6324  quest.rewardXP */\n      dup5\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6276:6324  players[msg.sender].experience += quest.rewardXP */\n      tag_269\n      jump\t// in\n    tag_268:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6347:6385  QuestCompleted(msg.sender, questTitle) */\n      mload(0x40)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6362:6372  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6347:6385  QuestCompleted(msg.sender, questTitle) */\n      0xbe21664565742a9f42cbb6d005f92db59c7bcad35b12ef5b57b79e75676b247a\n      swap1\n      tag_270\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6374:6384  questTitle */\n      dup7\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6347:6385  QuestCompleted(msg.sender, questTitle) */\n      tag_188\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6403:6408  break */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5973:6433  for (uint i = 0; i < playerQuests[msg.sender].length; i++) {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5907:6439  function completeQuest(string memory questTitle) public {... */\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6109:6423  if (keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) && !quest.completed) {... */\n    tag_267:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6027:6030  i++ */\n      0x01\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5973:6433  for (uint i = 0; i < playerQuests[msg.sender].length; i++) {... */\n      jump(tag_255)\n    tag_256:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5907:6439  function completeQuest(string memory questTitle) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4824:4831  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      swap1\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_274\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5333:5337  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5332  getRoleAdmin */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5361:5365  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5367:5374  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5360  _grantRole */\n      tag_280\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      jump\t// in\n    tag_279:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5374:5689  function addItem(string memory name, uint attackBonus, uint defenseBonus, uint manaBonus, uint healthBonus) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_89:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_282:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5545:5618  Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus) */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5550:5560  nextItemId */\n      sload(0x06)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5545:5618  Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup11\n      dup2\n      mstore\n      dup4\n      dup6\n      add\n      dup11\n      swap1\n      mstore\n      0x60\n      dup5\n      add\n      dup10\n      swap1\n      mstore\n      0x80\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0xa0\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5525:5542  items[nextItemId] */\n      swap3\n      dup4\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5525:5530  items */\n      0x08\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5525:5542  items[nextItemId] */\n      swap1\n      swap2\n      mstore\n      swap3\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5525:5618  items[nextItemId] = Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus) */\n      dup2\n      mload\n      dup2\n      sstore\n      swap2\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5545:5618  Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus) */\n      swap1\n      swap2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5525:5542  items[nextItemId] */\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5525:5618  items[nextItemId] = Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus) */\n      0x01\n      dup3\n      add\n      swap1\n      tag_284\n      swap1\n      dup3\n      tag_285\n      jump\t// in\n    tag_284:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5633:5660  ItemAdded(nextItemId, name) */\n      0x78d68ba0e8c23b92e7c700d99efed2719520cbd4af845b2c03ae251f9cdf3d52\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5643:5653  nextItemId */\n      sload(0x06)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5655:5659  name */\n      dup8\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5633:5660  ItemAdded(nextItemId, name) */\n      mload(0x40)\n      tag_286\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5670:5680  nextItemId */\n      0x06\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5670:5682  nextItemId++ */\n      dup1\n      sload\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5670:5680  nextItemId */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5670:5682  nextItemId++ */\n      tag_288\n      dup4\n      tag_289\n      jump\t// in\n    tag_288:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5374:5689  function addItem(string memory name, uint attackBonus, uint defenseBonus, uint manaBonus, uint healthBonus) public onlyRole(GAME_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6585  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_295\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_294:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4935:5010  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_96:\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_297:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4993:5003  _unpause() */\n      tag_299\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4993:5001  _unpause */\n      tag_300\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4993:5003  _unpause() */\n      jump\t// in\n    tag_299:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4935:5010  function unpause() public onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5120:5368  function createPlayer() public {... */\n    tag_99:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5177:5187  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5169:5188  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5169:5176  players */\n      0x09\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5169:5188  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5169:5194  players[msg.sender].level */\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5169:5199  players[msg.sender].level == 0 */\n      iszero\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5161:5225  require(players[msg.sender].level == 0, \"Player already exists\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16859:16861   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5161:5225  require(players[msg.sender].level == 0, \"Player already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16841:16862   */\n      mstore\n        /* \"#utility.yul\":16898:16900   */\n      0x15\n        /* \"#utility.yul\":16878:16896   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16871:16901   */\n      mstore\n      shl(0x58, 0x506c6179657220616c726561647920657869737473)\n        /* \"#utility.yul\":16917:16935   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16910:16961   */\n      mstore\n        /* \"#utility.yul\":16978:16996   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5161:5225  require(players[msg.sender].level == 0, \"Player already exists\") */\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_302:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5257:5321  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      mload(0x40)\n      dup1\n      0x0140\n      add\n      0x40\n      mstore\n      dup1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5264:5265  1 */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5257:5321  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5267:5268  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5257:5321  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5270:5273  100 */\n      0x64\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5257:5321  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5275:5277  50 */\n      0x32\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5257:5321  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5279:5281  10 */\n      0x0a\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5257:5321  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5283:5284  5 */\n      0x05\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5257:5321  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5286:5287  3 */\n      0x03\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5257:5321  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5289:5290  2 */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5257:5321  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5303:5304  0 */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5292:5305  new uint[](0) */\n      dup2\n      gt\n      iszero\n      tag_306\n      jumpi\n      tag_306\n      tag_307\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_308\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_308:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5257:5321  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5318:5319  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5307:5320  new uint[](0) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_311\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_311:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5257:5321  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5243:5253  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5235:5254  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5235:5242  players */\n      0x09\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5235:5254  players[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5235:5321  players[msg.sender] = Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup4\n      mload\n      dup2\n      sstore\n      dup4\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      swap2\n      dup4\n      add\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x60\n      dup4\n      add\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      0x80\n      dup4\n      add\n      mload\n      0x04\n      dup4\n      add\n      sstore\n      0xa0\n      dup4\n      add\n      mload\n      0x05\n      dup4\n      add\n      sstore\n      0xc0\n      dup4\n      add\n      mload\n      0x06\n      dup4\n      add\n      sstore\n      0xe0\n      dup4\n      add\n      mload\n      0x07\n      dup4\n      add\n      sstore\n      0x0100\n      dup4\n      add\n      mload\n      dup1\n      mload\n      tag_312\n      swap3\n      0x08\n      dup6\n      add\n      swap3\n      add\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      pop\n      0x0120\n      dup3\n      add\n      mload\n      dup1\n      mload\n      tag_314\n      swap2\n      0x09\n      dup5\n      add\n      swap2\n      0x20\n      swap1\n      swap2\n      add\n      swap1\n      tag_313\n      jump\t// in\n    tag_314:\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5336:5361  PlayerCreated(msg.sender) */\n      mload(0x40)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5350:5360  msg.sender */\n      caller\n      swap2\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5336:5361  PlayerCreated(msg.sender) */\n      0xb4cca19a27ce42915c3cee0cee28fc5d90969ee49f09ec71659546a63b5f7bc0\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5120:5368  function createPlayer() public {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3984:4118  function setERC20Address(address _erc20Address) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_104:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_316:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4077:4087  erc20Token */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4077:4111  erc20Token = IERC20(_erc20Address) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3984:4118  function setERC20Address(address _erc20Address) external onlyRole(GAME_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6445:6813  function createGuild(string memory name, address leader) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_125:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_327\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_327:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6588:6589  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6553:6590  guildNameToLeader[name] == address(0) */\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6553:6570  guildNameToLeader */\n      0x0c\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6571:6575  name */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6553:6576  guildNameToLeader[name] */\n      mload(0x40)\n      tag_329\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_329:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6553:6590  guildNameToLeader[name] == address(0) */\n      eq\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6545:6615  require(guildNameToLeader[name] == address(0), \"Guild already exists\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17209:17211   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6545:6615  require(guildNameToLeader[name] == address(0), \"Guild already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17191:17212   */\n      mstore\n        /* \"#utility.yul\":17248:17250   */\n      0x14\n        /* \"#utility.yul\":17228:17246   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17221:17251   */\n      mstore\n      shl(0x60, 0x4775696c6420616c726561647920657869737473)\n        /* \"#utility.yul\":17267:17285   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17260:17310   */\n      mstore\n        /* \"#utility.yul\":17327:17345   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6545:6615  require(guildNameToLeader[name] == address(0), \"Guild already exists\") */\n      tag_303\n        /* \"#utility.yul\":17007:17351   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6545:6615  require(guildNameToLeader[name] == address(0), \"Guild already exists\") */\n    tag_330:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6642:6679  Guild(name, leader, new address[](1)) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6662:6678  new address[](1) */\n      dup2\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6676:6677  1 */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6662:6678  new address[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup5\n      add\n      dup5\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6642:6679  Guild(name, leader, new address[](1)) */\n      swap2\n      swap3\n      dup4\n      add\n      swap2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6662:6678  new address[](1) */\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6642:6679  Guild(name, leader, new address[](1)) */\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6625:6639  guilds[leader] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6625:6631  guilds */\n      0x0b\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6625:6639  guilds[leader] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6625:6679  guilds[leader] = Guild(name, leader, new address[](1)) */\n      dup2\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6625:6639  guilds[leader] */\n      dup2\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6625:6679  guilds[leader] = Guild(name, leader, new address[](1)) */\n      tag_336\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6625:6639  guilds[leader] */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6625:6679  guilds[leader] = Guild(name, leader, new address[](1)) */\n      tag_285\n      jump\t// in\n    tag_336:\n      pop\n      0x20\n      dup3\n      dup2\n      add\n      mload\n      0x01\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x40\n      dup4\n      add\n      mload\n      dup1\n      mload\n      tag_337\n      swap3\n      0x02\n      dup6\n      add\n      swap3\n      add\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6689:6703  guilds[leader] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6689:6695  guilds */\n      0x0b\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6689:6703  guilds[leader] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6689:6711  guilds[leader].members */\n      0x02\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6689:6714  guilds[leader].members[0] */\n      dup1\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6717:6723  leader */\n      dup5\n      swap3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6689:6703  guilds[leader] */\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6689:6714  guilds[leader].members[0] */\n      tag_340\n      jumpi\n      tag_340\n      tag_260\n      jump\t// in\n    tag_340:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6689:6723  guilds[leader].members[0] = leader */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6759:6765  leader */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6733:6750  guildNameToLeader */\n      0x0c\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6751:6755  name */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6733:6756  guildNameToLeader[name] */\n      mload(0x40)\n      tag_342\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_342:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      dup2\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6733:6765  guildNameToLeader[name] = leader */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6780:6806  GuildCreated(name, leader) */\n      0x072208535a97b2e307167838c66aacd47f8de3a2cb92bc2ddb2b2b52009c9fd5\n      swap1\n      tag_343\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6793:6797  name */\n      dup6\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6799:6805  leader */\n      dup6\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6780:6806  GuildCreated(name, leader) */\n      tag_178\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6445:6813  function createGuild(string memory name, address leader) public onlyRole(GAME_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_346\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_345:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5695:5901  function startQuest(string memory title, string memory description, uint rewardXP) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_143:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_352:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5834:5844  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5821:5845  playerQuests[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5821:5833  playerQuests */\n      0x0a\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5821:5845  playerQuests[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5851:5893  Quest(title, description, rewardXP, false) */\n      dup2\n      mload\n      0x80\n      dup2\n      add\n      dup4\n      mstore\n      dup9\n      dup2\n      mstore\n      dup1\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      swap2\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5821:5894  playerQuests[msg.sender].push(Quest(title, description, rewardXP, false)) */\n      dup1\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5851:5893  Quest(title, description, rewardXP, false) */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5821:5894  playerQuests[msg.sender].push(Quest(title, description, rewardXP, false)) */\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup5\n      mstore\n      swap2\n      swap1\n      swap3\n      keccak256\n      dup3\n      mload\n      0x04\n      swap1\n      swap3\n      mul\n      add\n      swap1\n      dup2\n      swap1\n      tag_355\n      swap1\n      dup3\n      tag_285\n      jump\t// in\n    tag_355:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      swap1\n      tag_356\n      swap1\n      dup3\n      tag_285\n      jump\t// in\n    tag_356:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      swap1\n      swap2\n      add\n      mload\n      0x03\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5695:5901  function startQuest(string memory title, string memory description, uint rewardXP) public onlyRole(GAME_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7585:8884  function craftItem(uint recipeId) public {... */\n    tag_147:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7636:7656  Recipe memory recipe */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7659:7676  recipes[recipeId] */\n      dup2\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7659:7666  recipes */\n      0x0d\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7659:7676  recipes[recipeId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7636:7676  Recipe memory recipe = recipes[recipeId] */\n      dup2\n      mload\n      dup2\n      sload\n      0x60\n      swap5\n      dup2\n      mul\n      dup3\n      add\n      dup6\n      add\n      dup5\n      mstore\n      swap3\n      dup2\n      add\n      dup4\n      dup2\n      mstore\n      swap1\n      swap4\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7659:7676  recipes[recipeId] */\n      swap2\n      swap3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7636:7676  Recipe memory recipe = recipes[recipeId] */\n      dup5\n      swap3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7659:7676  recipes[recipeId] */\n      dup5\n      swap2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7636:7676  Recipe memory recipe = recipes[recipeId] */\n      swap1\n      dup5\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7659:7676  recipes[recipeId] */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7636:7676  Recipe memory recipe = recipes[recipeId] */\n      dup3\n      dup1\n      iszero\n      tag_358\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_359:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_359\n      jumpi\n    tag_358:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7718:7719  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7694:7700  recipe */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7694:7708  recipe.itemIds */\n      0x00\n      add\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7694:7715  recipe.itemIds.length */\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7694:7719  recipe.itemIds.length > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7686:7738  require(recipe.itemIds.length > 0, \"Invalid recipe\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17558:17560   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7686:7738  require(recipe.itemIds.length > 0, \"Invalid recipe\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17540:17561   */\n      mstore\n        /* \"#utility.yul\":17597:17599   */\n      0x0e\n        /* \"#utility.yul\":17577:17595   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17570:17600   */\n      mstore\n      shl(0x90, 0x496e76616c696420726563697065)\n        /* \"#utility.yul\":17616:17634   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17609:17653   */\n      mstore\n        /* \"#utility.yul\":17670:17688   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7686:7738  require(recipe.itemIds.length > 0, \"Invalid recipe\") */\n      tag_303\n        /* \"#utility.yul\":17356:17694   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7686:7738  require(recipe.itemIds.length > 0, \"Invalid recipe\") */\n    tag_360:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7812:7818  uint i */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7807:8224  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n    tag_363:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7828:7842  recipe.itemIds */\n      dup2\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7828:7849  recipe.itemIds.length */\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7824:7849  i < recipe.itemIds.length */\n      dup2\n      lt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7807:8224  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n      iszero\n      tag_364\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7870:7882  bool hasItem */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7909:7915  uint j */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7904:8141  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n    tag_366:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7933:7943  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7925:7944  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7925:7932  players */\n      0x09\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7925:7944  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7925:7954  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7925:7961  players[msg.sender].inventory.length */\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7921:7961  j < players[msg.sender].inventory.length */\n      dup2\n      lt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7904:8141  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n      iszero\n      tag_367\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8026:8040  recipe.itemIds */\n      dup4\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8026:8043  recipe.itemIds[i] */\n      dup1\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8041:8042  i */\n      dup5\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8026:8043  recipe.itemIds[i] */\n      dup2\n      lt\n      tag_370\n      jumpi\n      tag_370\n      tag_260\n      jump\t// in\n    tag_370:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7990:7997  players */\n      0x09\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7990:8009  players[msg.sender] */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7998:8008  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7990:8009  players[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7990:8019  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8020:8021  j */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7990:8022  players[msg.sender].inventory[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_372\n      jumpi\n      tag_372\n      tag_260\n      jump\t// in\n    tag_372:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7990:8043  players[msg.sender].inventory[j] == recipe.itemIds[i] */\n      sub\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7986:8127  if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {... */\n      tag_374\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8077:8081  true */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8067:8081  hasItem = true */\n      swap2\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8103:8108  break */\n      jump(tag_367)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7986:8127  if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {... */\n    tag_374:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7963:7966  j++ */\n      0x01\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7904:8141  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n      jump(tag_366)\n    tag_367:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8162:8169  hasItem */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8154:8213  require(hasItem, \"Player does not have all required items\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17901:17903   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8154:8213  require(hasItem, \"Player does not have all required items\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17883:17904   */\n      mstore\n        /* \"#utility.yul\":17940:17942   */\n      0x27\n        /* \"#utility.yul\":17920:17938   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17913:17943   */\n      mstore\n        /* \"#utility.yul\":17979:18013   */\n      0x506c6179657220646f6573206e6f74206861766520616c6c2072657175697265\n        /* \"#utility.yul\":17959:17977   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17952:18014   */\n      mstore\n      shl(0xc8, 0x64206974656d73)\n        /* \"#utility.yul\":18030:18048   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18023:18060   */\n      mstore\n        /* \"#utility.yul\":18077:18096   */\n      0x84\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8154:8213  require(hasItem, \"Player does not have all required items\") */\n      tag_303\n        /* \"#utility.yul\":17699:18102   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8154:8213  require(hasItem, \"Player does not have all required items\") */\n    tag_375:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7851:7854  i++ */\n      0x01\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7807:8224  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n      jump(tag_363)\n    tag_364:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8300:8306  uint i */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8295:8754  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n    tag_378:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8316:8330  recipe.itemIds */\n      dup2\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8316:8337  recipe.itemIds.length */\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8312:8337  i < recipe.itemIds.length */\n      dup2\n      lt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8295:8754  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n      iszero\n      tag_379\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8363:8369  uint j */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8358:8744  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n    tag_381:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8387:8397  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8379:8398  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8379:8386  players */\n      0x09\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8379:8398  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8379:8408  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8379:8415  players[msg.sender].inventory.length */\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8375:8415  j < players[msg.sender].inventory.length */\n      dup2\n      lt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8358:8744  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n      iszero\n      tag_382\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8480:8494  recipe.itemIds */\n      dup3\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8480:8497  recipe.itemIds[i] */\n      dup1\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8495:8496  i */\n      dup4\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8480:8497  recipe.itemIds[i] */\n      dup2\n      lt\n      tag_385\n      jumpi\n      tag_385\n      tag_260\n      jump\t// in\n    tag_385:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8444:8451  players */\n      0x09\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8444:8463  players[msg.sender] */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8452:8462  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8444:8463  players[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8444:8473  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8474:8475  j */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8444:8476  players[msg.sender].inventory[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_387\n      jumpi\n      tag_387\n      tag_260\n      jump\t// in\n    tag_387:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8444:8497  players[msg.sender].inventory[j] == recipe.itemIds[i] */\n      sub\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8440:8730  if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {... */\n      tag_389\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8564:8574  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8556:8575  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8556:8563  players */\n      0x09\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8556:8575  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8556:8585  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8586:8622  players[msg.sender].inventory.length */\n      dup1\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8586:8626  players[msg.sender].inventory.length - 1 */\n      tag_390\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8625:8626  1 */\n      0x01\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8586:8626  players[msg.sender].inventory.length - 1 */\n      tag_391\n      jump\t// in\n    tag_390:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8556:8627  players[msg.sender].inventory[players[msg.sender].inventory.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_393\n      jumpi\n      tag_393\n      tag_260\n      jump\t// in\n    tag_393:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8529:8539  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8521:8540  players[msg.sender] */\n      dup4\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8521:8528  players */\n      0x09\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8521:8540  players[msg.sender] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8521:8550  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8521:8553  players[msg.sender].inventory[j] */\n      dup1\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8551:8552  j */\n      dup4\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8521:8553  players[msg.sender].inventory[j] */\n      dup2\n      lt\n      tag_396\n      jumpi\n      tag_396\n      tag_260\n      jump\t// in\n    tag_396:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8521:8627  players[msg.sender].inventory[j] = players[msg.sender].inventory[players[msg.sender].inventory.length - 1] */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8657:8667  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8649:8668  players[msg.sender] */\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8649:8656  players */\n      0x09\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8649:8668  players[msg.sender] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8649:8678  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8649:8684  players[msg.sender].inventory.pop() */\n      dup1\n      sload\n      dup1\n      tag_399\n      jumpi\n      tag_399\n      tag_400\n      jump\t// in\n    tag_399:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8706:8711  break */\n      jump(tag_382)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8440:8730  if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {... */\n    tag_389:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8417:8420  j++ */\n      0x01\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8358:8744  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n      jump(tag_381)\n    tag_382:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8339:8342  i++ */\n      0x01\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8295:8754  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n      jump(tag_378)\n    tag_379:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8830:8840  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8822:8841  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8822:8829  players */\n      0x09\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8822:8841  players[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8857:8876  recipe.resultItemId */\n      swap3\n      dup2\n      add\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8822:8851  players[msg.sender].inventory */\n      0x08\n      swap1\n      swap4\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":8822:8877  players[msg.sender].inventory.push(recipe.resultItemId) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7585:8884  function craftItem(uint recipeId) public {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4858:4929  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_150:\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_404\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_404:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4914:4922  _pause() */\n      tag_299\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4914:4920  _pause */\n      tag_407\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4914:4922  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3809:3813  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      swap2\n      dup3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4419:4546  function setDAOAddress(address _daoAddress) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_164:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_411\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_411:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4508:4519  daoContract */\n      0x03\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4508:4539  daoContract = IDAO(_daoAddress) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4419:4546  function setDAOAddress(address _daoAddress) external onlyRole(GAME_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4124:4263  function setERC721Address(address _erc721Address) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_168:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_414\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_414:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4219:4230  erc721Token */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4219:4256  erc721Token = IERC721(_erc721Address) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4124:4263  function setERC721Address(address _erc721Address) external onlyRole(GAME_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2661:2700  mapping(address => Guild) public guilds */\n    tag_176:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      dup2\n      swap1\n      tag_416\n      swap1\n      tag_417\n      jump\t// in\n    tag_416:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_418\n      swap1\n      tag_417\n      jump\t// in\n    tag_418:\n      dup1\n      iszero\n      tag_419\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_420\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_419)\n    tag_420:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_421:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_421\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_419:\n      pop\n      pop\n      pop\n      0x01\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7337:7579  function addRecipe(uint[] memory itemIds, uint resultItemId) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_183:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_423\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_423:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7465:7494  Recipe(itemIds, resultItemId) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7449:7461  nextRecipeId */\n      sload(0x07)\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7441:7462  recipes[nextRecipeId] */\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7441:7448  recipes */\n      0x0d\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7441:7462  recipes[nextRecipeId] */\n      dup3\n      mstore\n      swap3\n      swap1\n      swap3\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7441:7494  recipes[nextRecipeId] = Recipe(itemIds, resultItemId) */\n      dup2\n      mload\n      dup1\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7465:7494  Recipe(itemIds, resultItemId) */\n      swap3\n      swap4\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7441:7462  recipes[nextRecipeId] */\n      swap2\n      swap3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7441:7494  recipes[nextRecipeId] = Recipe(itemIds, resultItemId) */\n      tag_425\n      swap3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7441:7462  recipes[nextRecipeId] */\n      dup5\n      swap3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7441:7494  recipes[nextRecipeId] = Recipe(itemIds, resultItemId) */\n      add\n      swap1\n      tag_313\n      jump\t// in\n    tag_425:\n      pop\n      0x20\n      swap2\n      dup3\n      add\n      mload\n      0x01\n      swap1\n      swap2\n      add\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7521:7533  nextRecipeId */\n      sload(0x07)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7509:7548  RecipeAdded(nextRecipeId, resultItemId) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":18546:18571   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":18587:18605   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":18580:18614   */\n      dup5\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7509:7548  RecipeAdded(nextRecipeId, resultItemId) */\n      0x9becfd2b1fc8127387c5b0002a6cbc8382e6c8fb9f76dfd6cfd92cbe94383d0e\n      swap2\n        /* \"#utility.yul\":18519:18537   */\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7509:7548  RecipeAdded(nextRecipeId, resultItemId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7558:7570  nextRecipeId */\n      0x07\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7558:7572  nextRecipeId++ */\n      dup1\n      sload\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7558:7570  nextRecipeId */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7558:7572  nextRecipeId++ */\n      tag_428\n      dup4\n      tag_289\n      jump\t// in\n    tag_428:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7337:7579  function addRecipe(uint[] memory itemIds, uint resultItemId) public onlyRole(GAME_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4705:4852  function setFarmingAddress(address _farmingAddress) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_192:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_430\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_430:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4802:4817  farmingContract */\n      0x05\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4802:4845  farmingContract = IFarming(_farmingAddress) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4705:4852  function setFarmingAddress(address _farmingAddress) external onlyRole(GAME_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2521:2555  mapping(uint => Item) public items */\n    tag_200:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      swap2\n      swap3\n      swap2\n      tag_432\n      swap1\n      tag_417\n      jump\t// in\n    tag_432:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_433\n      swap1\n      tag_417\n      jump\t// in\n    tag_433:\n      dup1\n      iszero\n      tag_434\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_435\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_434)\n    tag_435:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_436:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_436\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_434:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2608:2655  mapping(address => Quest[]) public playerQuests */\n    tag_207:\n      mstore(0x20, 0x0a)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_437\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_437:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_439\n      swap1\n      tag_417\n      jump\t// in\n    tag_439:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_440\n      swap1\n      tag_417\n      jump\t// in\n    tag_440:\n      dup1\n      iszero\n      tag_441\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_442\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_441)\n    tag_442:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_443:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_443\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_441:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_444\n      swap1\n      tag_417\n      jump\t// in\n    tag_444:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_445\n      swap1\n      tag_417\n      jump\t// in\n    tag_445:\n      dup1\n      iszero\n      tag_446\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_447\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_446)\n    tag_447:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_448:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_448\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_446:\n      pop\n      pop\n      pop\n      pop\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      swap2\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_449\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5750:5754  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5749  getRoleAdmin */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      jump\t// in\n    tag_449:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_451\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_451:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5779:5783  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5785:5792  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5778  _revokeRole */\n      tag_295\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4269:4413  function setERC1155Address(address _erc1155Address) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_217:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_455\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_455:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4366:4378  erc1155Token */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4366:4406  erc1155Token = IERC1155(_erc1155Address) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4269:4413  function setERC1155Address(address _erc1155Address) external onlyRole(GAME_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6819:7331  function joinGuild(string memory guildName) public {... */\n    tag_227:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6880:6894  address leader */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6897:6914  guildNameToLeader */\n      0x0c\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6915:6924  guildName */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6897:6925  guildNameToLeader[guildName] */\n      mload(0x40)\n      tag_458\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_458:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6935:6988  require(leader != address(0), \"Guild does not exist\") */\n      tag_459\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18827:18829   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6935:6988  require(leader != address(0), \"Guild does not exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18809:18830   */\n      mstore\n        /* \"#utility.yul\":18866:18868   */\n      0x14\n        /* \"#utility.yul\":18846:18864   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18839:18869   */\n      mstore\n      shl(0x62, 0x11dd5a5b1908191bd95cc81b9bdd08195e1a5cdd)\n        /* \"#utility.yul\":18885:18903   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18878:18928   */\n      mstore\n        /* \"#utility.yul\":18945:18963   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6935:6988  require(leader != address(0), \"Guild does not exist\") */\n      tag_303\n        /* \"#utility.yul\":18625:18969   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6935:6988  require(leader != address(0), \"Guild does not exist\") */\n    tag_459:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7105:7119  guilds[leader] */\n      dup2\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7083:7102  Guild storage guild */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7105:7119  guilds[leader] */\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7105:7111  guilds */\n      0x0b\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7105:7119  guilds[leader] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7129:7284  for (uint i = 0; i < guild.members.length; i++) {... */\n    tag_462:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7150:7163  guild.members */\n      0x02\n      dup3\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7150:7170  guild.members.length */\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7146:7170  i < guild.members.length */\n      dup2\n      lt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7129:7284  for (uint i = 0; i < guild.members.length; i++) {... */\n      iszero\n      tag_463\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7219:7229  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7199:7229  guild.members[i] != msg.sender */\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7199:7204  guild */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7199:7212  guild.members */\n      0x02\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7213:7214  i */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7199:7215  guild.members[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_466\n      jumpi\n      tag_466\n      tag_260\n      jump\t// in\n    tag_466:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7199:7229  guild.members[i] != msg.sender */\n      sub\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7191:7273  require(guild.members[i] != msg.sender, \"Sender is already a member of the guild\") */\n      tag_468\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19176:19178   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7191:7273  require(guild.members[i] != msg.sender, \"Sender is already a member of the guild\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19158:19179   */\n      mstore\n        /* \"#utility.yul\":19215:19217   */\n      0x27\n        /* \"#utility.yul\":19195:19213   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19188:19218   */\n      mstore\n        /* \"#utility.yul\":19254:19288   */\n      0x53656e64657220697320616c72656164792061206d656d626572206f66207468\n        /* \"#utility.yul\":19234:19252   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19227:19289   */\n      mstore\n      shl(0xca, 0x194819dd5a5b19)\n        /* \"#utility.yul\":19305:19323   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19298:19335   */\n      mstore\n        /* \"#utility.yul\":19352:19371   */\n      0x84\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7191:7273  require(guild.members[i] != msg.sender, \"Sender is already a member of the guild\") */\n      tag_303\n        /* \"#utility.yul\":18974:19377   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7191:7273  require(guild.members[i] != msg.sender, \"Sender is already a member of the guild\") */\n    tag_468:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7172:7175  i++ */\n      0x01\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7129:7284  for (uint i = 0; i < guild.members.length; i++) {... */\n      jump(tag_462)\n    tag_463:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7294:7307  guild.members */\n      0x02\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7294:7324  guild.members.push(msg.sender) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7313:7323  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":7294:7324  guild.members.push(msg.sender) */\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6819:7331  function joinGuild(string memory guildName) public {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4552:4699  function setStakingAddress(address _stakingAddress) external onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_240:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_473\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_473:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4649:4664  stakingContract */\n      0x04\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4649:4692  stakingContract = IStaking(_stakingAddress) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4552:4699  function setStakingAddress(address _stakingAddress) external onlyRole(GAME_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3081:3978  function initialize(... */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_478\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_478:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_479\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_479:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_480\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_480:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_481\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_481:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_482\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_482:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3407:3424  __Pausable_init() */\n      tag_484\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3407:3422  __Pausable_init */\n      tag_485\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3407:3424  __Pausable_init() */\n      jump\t// in\n    tag_484:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3434:3456  __AccessControl_init() */\n      tag_486\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3434:3454  __AccessControl_init */\n      tag_487\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3434:3456  __AccessControl_init() */\n      jump\t// in\n    tag_486:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3466:3490  __UUPSUpgradeable_init() */\n      tag_488\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3466:3488  __UUPSUpgradeable_init */\n      tag_487\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3466:3490  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_488:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3501:3545  _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin) */\n      tag_490\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3532:3544  defaultAdmin */\n      dup16\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3501:3511  _grantRole */\n      tag_280\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3501:3545  _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin) */\n      jump\t// in\n    tag_490:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3555:3586  _grantRole(PAUSER_ROLE, pauser) */\n      tag_491\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3579:3585  pauser */\n      dup15\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3555:3565  _grantRole */\n      tag_280\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3555:3586  _grantRole(PAUSER_ROLE, pauser) */\n      jump\t// in\n    tag_491:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3596:3631  _grantRole(UPGRADER_ROLE, upgrader) */\n      tag_492\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1427:1453  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3622:3630  upgrader */\n      dup14\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3596:3606  _grantRole */\n      tag_280\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3596:3631  _grantRole(UPGRADER_ROLE, upgrader) */\n      jump\t// in\n    tag_492:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3641:3682  _grantRole(GAME_ADMIN_ROLE, defaultAdmin) */\n      tag_493\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3669:3681  defaultAdmin */\n      dup16\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3641:3651  _grantRole */\n      tag_280\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3641:3682  _grantRole(GAME_ADMIN_ROLE, defaultAdmin) */\n      jump\t// in\n    tag_493:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3693:3703  erc20Token */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3693:3727  erc20Token = IERC20(_erc20Address) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup15\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap3\n      sstore\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3737:3774  erc721Token = IERC721(_erc721Address) */\n      dup1\n      sload\n      dup3\n      and\n      dup14\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3784:3796  erc1155Token */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3784:3824  erc1155Token = IERC1155(_erc1155Address) */\n      dup1\n      sload\n      dup3\n      and\n      dup13\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3834:3845  daoContract */\n      0x03\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3834:3865  daoContract = IDAO(_daoAddress) */\n      dup1\n      sload\n      dup3\n      and\n      dup12\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3875:3890  stakingContract */\n      0x04\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3875:3918  stakingContract = IStaking(_stakingAddress) */\n      dup1\n      sload\n      dup3\n      and\n      dup11\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3928:3943  farmingContract */\n      0x05\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3928:3971  farmingContract = IFarming(_farmingAddress) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap2\n      dup9\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_494\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":19535:19585   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":19523:19525   */\n      0x20\n        /* \"#utility.yul\":19508:19526   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_494:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3081:3978  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      tag_299\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4225:4229  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4224  _checkRole */\n      tag_502\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      tag_505\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7445:7449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7451:7458  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7444  hasRole */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      jump\t// in\n    tag_505:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n      tag_506\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      tag_507\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n    tag_507:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap2\n      pop\n      pop\n      jump(tag_252)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_506:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap2\n      pop\n      pop\n      jump(tag_252)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7892:8280  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7970:7974  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      tag_512\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8067:8071  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8073:8080  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8066  hasRole */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      jump\t// in\n    tag_512:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8055:8274  if (hasRole(role, account)) {... */\n      iszero\n      tag_506\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8128  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8136  $._roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup8\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8216:8220  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8209:8220  return true */\n      swap2\n      pop\n      pop\n      jump(tag_252)\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_517\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_518\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_517:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3808  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n    tag_521:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":678:710   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":660:711   */\n      dup2\n      mstore\n        /* \"#utility.yul\":648:650   */\n      0x20\n        /* \"#utility.yul\":633:651   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3722:3852  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_525\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_526\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_526:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_525:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_528\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_528:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5016:5114  function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {} */\n    tag_323:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1427:1453  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_325:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_533\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_534\n      swap2\n      dup2\n      add\n      swap1\n      tag_535\n      jump\t// in\n    tag_534:\n      0x01\n    tag_533:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_536\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":678:710   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":660:711   */\n      mstore\n        /* \"#utility.yul\":633:651   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_303\n        /* \"#utility.yul\":497:717   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_536:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_542\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2745:2770   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2718:2736   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_303\n        /* \"#utility.yul\":2599:2776   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_542:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_545\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_346:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_528\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n    tag_407:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_550\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_551\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_550:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3496:3500  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      or\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      tag_521\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n    tag_485:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_558\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_559\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_558:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      tag_528\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1924  __Pausable_init_unchained */\n      tag_562\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n    tag_487:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_528\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_559\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_502:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      tag_570\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4477:4481  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4483:4490  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4476  hasRole */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      jump\t// in\n    tag_570:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":20185:20217   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20167:20218   */\n      mstore\n        /* \"#utility.yul\":20234:20252   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":20227:20261   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":20140:20158   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      tag_303\n        /* \"#utility.yul\":19993:20267   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n    tag_518:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n      tag_528\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3199:3214  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_545:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_581\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_582\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_581:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_583\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_294\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_585\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_583:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_256\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_588\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n    tag_551:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n      iszero\n      tag_528\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3001:3016  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_559:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_528\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_562:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_597\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_559\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_597:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2088  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_582:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_602\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":678:710   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":660:711   */\n      mstore\n        /* \"#utility.yul\":633:651   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_303\n        /* \"#utility.yul\":497:717   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_602:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_585:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_606\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_606:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_610\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_609)\n    tag_610:\n      0x60\n      swap2\n      pop\n    tag_609:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_611\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_612\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_611:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_588:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_528\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_612:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_618\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_619\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_620\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_619:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_621)\n    tag_618:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_622\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_622:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_623\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":678:710   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":660:711   */\n      mstore\n        /* \"#utility.yul\":633:651   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_303\n        /* \"#utility.yul\":497:717   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_623:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_621:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_620:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_626\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_626:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_630\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_629:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_630\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_629)\n    tag_630:\n      pop\n      tag_631\n      swap3\n      swap2\n      pop\n      tag_632\n      jump\t// in\n    tag_631:\n      pop\n      swap1\n      jump\t// out\n    tag_338:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_630\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_634:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_630\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_634)\n    tag_632:\n    tag_637:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_631\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_637)\n        /* \"#utility.yul\":14:300   */\n    tag_54:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_651:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_621\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":722:849   */\n    tag_307:\n        /* \"#utility.yul\":783:793   */\n      0x4e487b71\n        /* \"#utility.yul\":778:781   */\n      0xe0\n        /* \"#utility.yul\":774:794   */\n      shl\n        /* \"#utility.yul\":771:772   */\n      0x00\n        /* \"#utility.yul\":764:795   */\n      mstore\n        /* \"#utility.yul\":814:818   */\n      0x41\n        /* \"#utility.yul\":811:812   */\n      0x04\n        /* \"#utility.yul\":804:819   */\n      mstore\n        /* \"#utility.yul\":838:842   */\n      0x24\n        /* \"#utility.yul\":835:836   */\n      0x00\n        /* \"#utility.yul\":828:843   */\n      revert\n        /* \"#utility.yul\":854:1129   */\n    tag_639:\n        /* \"#utility.yul\":925:927   */\n      0x40\n        /* \"#utility.yul\":919:928   */\n      mload\n        /* \"#utility.yul\":990:992   */\n      0x1f\n        /* \"#utility.yul\":971:984   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":967:994   */\n      and\n        /* \"#utility.yul\":955:995   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1010:1044   */\n      dup2\n      gt\n        /* \"#utility.yul\":1046:1068   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1007:1069   */\n      or\n        /* \"#utility.yul\":1004:1092   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":1072:1090   */\n      tag_658\n      tag_307\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":1108:1110   */\n      0x40\n        /* \"#utility.yul\":1101:1123   */\n      mstore\n        /* \"#utility.yul\":854:1129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1134:1584   */\n    tag_640:\n        /* \"#utility.yul\":1199:1204   */\n      0x00\n        /* \"#utility.yul\":1231:1232   */\n      dup1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1247:1253   */\n      dup5\n        /* \"#utility.yul\":1244:1274   */\n      gt\n        /* \"#utility.yul\":1241:1297   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":1277:1295   */\n      tag_661\n      tag_307\n      jump\t// in\n    tag_661:\n      pop\n        /* \"#utility.yul\":1343:1345   */\n      0x1f\n        /* \"#utility.yul\":1322:1337   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1318:1347   */\n      and\n        /* \"#utility.yul\":1349:1353   */\n      0x20\n        /* \"#utility.yul\":1314:1354   */\n      add\n        /* \"#utility.yul\":1372:1393   */\n      tag_662\n        /* \"#utility.yul\":1314:1354   */\n      dup2\n        /* \"#utility.yul\":1372:1393   */\n      tag_639\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":1363:1393   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1416:1422   */\n      dup3\n        /* \"#utility.yul\":1409:1414   */\n      dup2\n        /* \"#utility.yul\":1402:1423   */\n      mstore\n        /* \"#utility.yul\":1456:1459   */\n      dup4\n        /* \"#utility.yul\":1447:1453   */\n      dup4\n        /* \"#utility.yul\":1442:1445   */\n      dup4\n        /* \"#utility.yul\":1438:1454   */\n      add\n        /* \"#utility.yul\":1435:1460   */\n      gt\n        /* \"#utility.yul\":1432:1477   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":1473:1474   */\n      0x00\n        /* \"#utility.yul\":1470:1471   */\n      dup1\n        /* \"#utility.yul\":1463:1475   */\n      revert\n        /* \"#utility.yul\":1432:1477   */\n    tag_663:\n        /* \"#utility.yul\":1522:1528   */\n      dup3\n        /* \"#utility.yul\":1517:1520   */\n      dup3\n        /* \"#utility.yul\":1510:1514   */\n      0x20\n        /* \"#utility.yul\":1503:1508   */\n      dup4\n        /* \"#utility.yul\":1499:1515   */\n      add\n        /* \"#utility.yul\":1486:1529   */\n      calldatacopy\n        /* \"#utility.yul\":1576:1577   */\n      0x00\n        /* \"#utility.yul\":1569:1573   */\n      0x20\n        /* \"#utility.yul\":1560:1566   */\n      dup5\n        /* \"#utility.yul\":1553:1558   */\n      dup4\n        /* \"#utility.yul\":1549:1567   */\n      add\n        /* \"#utility.yul\":1545:1574   */\n      add\n        /* \"#utility.yul\":1538:1578   */\n      mstore\n        /* \"#utility.yul\":1134:1584   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1589:1811   */\n    tag_641:\n        /* \"#utility.yul\":1632:1637   */\n      0x00\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1682   */\n      0x1f\n        /* \"#utility.yul\":1670:1676   */\n      dup4\n        /* \"#utility.yul\":1666:1683   */\n      add\n        /* \"#utility.yul\":1662:1689   */\n      slt\n        /* \"#utility.yul\":1652:1707   */\n      tag_665\n      jumpi\n        /* \"#utility.yul\":1703:1704   */\n      0x00\n        /* \"#utility.yul\":1700:1701   */\n      dup1\n        /* \"#utility.yul\":1693:1705   */\n      revert\n        /* \"#utility.yul\":1652:1707   */\n    tag_665:\n        /* \"#utility.yul\":1725:1805   */\n      tag_621\n        /* \"#utility.yul\":1801:1804   */\n      dup4\n        /* \"#utility.yul\":1792:1798   */\n      dup4\n        /* \"#utility.yul\":1779:1799   */\n      calldataload\n        /* \"#utility.yul\":1772:1776   */\n      0x20\n        /* \"#utility.yul\":1764:1770   */\n      dup6\n        /* \"#utility.yul\":1760:1777   */\n      add\n        /* \"#utility.yul\":1725:1805   */\n      tag_640\n      jump\t// in\n        /* \"#utility.yul\":1816:2138   */\n    tag_66:\n        /* \"#utility.yul\":1885:1891   */\n      0x00\n        /* \"#utility.yul\":1938:1940   */\n      0x20\n        /* \"#utility.yul\":1926:1935   */\n      dup3\n        /* \"#utility.yul\":1917:1924   */\n      dup5\n        /* \"#utility.yul\":1913:1936   */\n      sub\n        /* \"#utility.yul\":1909:1941   */\n      slt\n        /* \"#utility.yul\":1906:1958   */\n      iszero\n      tag_668\n      jumpi\n        /* \"#utility.yul\":1954:1955   */\n      0x00\n        /* \"#utility.yul\":1951:1952   */\n      dup1\n        /* \"#utility.yul\":1944:1956   */\n      revert\n        /* \"#utility.yul\":1906:1958   */\n    tag_668:\n        /* \"#utility.yul\":1994:2003   */\n      dup2\n        /* \"#utility.yul\":1981:2004   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2019:2025   */\n      dup2\n        /* \"#utility.yul\":2016:2046   */\n      gt\n        /* \"#utility.yul\":2013:2063   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2013:2063   */\n    tag_669:\n        /* \"#utility.yul\":2082:2132   */\n      tag_670\n        /* \"#utility.yul\":2124:2131   */\n      dup5\n        /* \"#utility.yul\":2115:2121   */\n      dup3\n        /* \"#utility.yul\":2104:2113   */\n      dup6\n        /* \"#utility.yul\":2100:2122   */\n      add\n        /* \"#utility.yul\":2082:2132   */\n      tag_641\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":2072:2132   */\n      swap5\n        /* \"#utility.yul\":1816:2138   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2368:2594   */\n    tag_76:\n        /* \"#utility.yul\":2427:2433   */\n      0x00\n        /* \"#utility.yul\":2480:2482   */\n      0x20\n        /* \"#utility.yul\":2468:2477   */\n      dup3\n        /* \"#utility.yul\":2459:2466   */\n      dup5\n        /* \"#utility.yul\":2455:2478   */\n      sub\n        /* \"#utility.yul\":2451:2483   */\n      slt\n        /* \"#utility.yul\":2448:2500   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":2496:2497   */\n      0x00\n        /* \"#utility.yul\":2493:2494   */\n      dup1\n        /* \"#utility.yul\":2486:2498   */\n      revert\n        /* \"#utility.yul\":2448:2500   */\n    tag_673:\n      pop\n        /* \"#utility.yul\":2541:2564   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2368:2594   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2781:2954   */\n    tag_642:\n        /* \"#utility.yul\":2849:2869   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2898:2929   */\n      dup2\n      and\n        /* \"#utility.yul\":2888:2930   */\n      dup2\n      eq\n        /* \"#utility.yul\":2878:2948   */\n      tag_676\n      jumpi\n        /* \"#utility.yul\":2944:2945   */\n      0x00\n        /* \"#utility.yul\":2941:2942   */\n      dup1\n        /* \"#utility.yul\":2934:2946   */\n      revert\n        /* \"#utility.yul\":2878:2948   */\n    tag_676:\n        /* \"#utility.yul\":2781:2954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2959:3259   */\n    tag_83:\n        /* \"#utility.yul\":3027:3033   */\n      0x00\n        /* \"#utility.yul\":3035:3041   */\n      dup1\n        /* \"#utility.yul\":3088:3090   */\n      0x40\n        /* \"#utility.yul\":3076:3085   */\n      dup4\n        /* \"#utility.yul\":3067:3074   */\n      dup6\n        /* \"#utility.yul\":3063:3086   */\n      sub\n        /* \"#utility.yul\":3059:3091   */\n      slt\n        /* \"#utility.yul\":3056:3108   */\n      iszero\n      tag_678\n      jumpi\n        /* \"#utility.yul\":3104:3105   */\n      0x00\n        /* \"#utility.yul\":3101:3102   */\n      dup1\n        /* \"#utility.yul\":3094:3106   */\n      revert\n        /* \"#utility.yul\":3056:3108   */\n    tag_678:\n        /* \"#utility.yul\":3149:3172   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3215:3253   */\n      tag_679\n        /* \"#utility.yul\":3249:3251   */\n      0x20\n        /* \"#utility.yul\":3234:3252   */\n      dup5\n      add\n        /* \"#utility.yul\":3215:3253   */\n      tag_642\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":3205:3253   */\n      swap1\n      pop\n        /* \"#utility.yul\":2959:3259   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:4062   */\n    tag_88:\n        /* \"#utility.yul\":3369:3375   */\n      0x00\n        /* \"#utility.yul\":3377:3383   */\n      dup1\n        /* \"#utility.yul\":3385:3391   */\n      0x00\n        /* \"#utility.yul\":3393:3399   */\n      dup1\n        /* \"#utility.yul\":3401:3407   */\n      0x00\n        /* \"#utility.yul\":3454:3457   */\n      0xa0\n        /* \"#utility.yul\":3442:3451   */\n      dup7\n        /* \"#utility.yul\":3433:3440   */\n      dup9\n        /* \"#utility.yul\":3429:3452   */\n      sub\n        /* \"#utility.yul\":3425:3458   */\n      slt\n        /* \"#utility.yul\":3422:3475   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":3471:3472   */\n      0x00\n        /* \"#utility.yul\":3468:3469   */\n      dup1\n        /* \"#utility.yul\":3461:3473   */\n      revert\n        /* \"#utility.yul\":3422:3475   */\n    tag_681:\n        /* \"#utility.yul\":3511:3520   */\n      dup6\n        /* \"#utility.yul\":3498:3521   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3536:3542   */\n      dup2\n        /* \"#utility.yul\":3533:3563   */\n      gt\n        /* \"#utility.yul\":3530:3580   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":3576:3577   */\n      0x00\n        /* \"#utility.yul\":3573:3574   */\n      dup1\n        /* \"#utility.yul\":3566:3578   */\n      revert\n        /* \"#utility.yul\":3530:3580   */\n    tag_682:\n        /* \"#utility.yul\":3599:3649   */\n      tag_683\n        /* \"#utility.yul\":3641:3648   */\n      dup9\n        /* \"#utility.yul\":3632:3638   */\n      dup3\n        /* \"#utility.yul\":3621:3630   */\n      dup10\n        /* \"#utility.yul\":3617:3639   */\n      add\n        /* \"#utility.yul\":3599:3649   */\n      tag_641\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":3589:3649   */\n      swap9\n        /* \"#utility.yul\":3718:3720   */\n      0x20\n        /* \"#utility.yul\":3703:3721   */\n      dup9\n      add\n        /* \"#utility.yul\":3690:3722   */\n      calldataload\n      swap9\n      pop\n        /* \"#utility.yul\":3819:3821   */\n      0x40\n        /* \"#utility.yul\":3804:3822   */\n      dup9\n      add\n        /* \"#utility.yul\":3791:3823   */\n      calldataload\n      swap8\n        /* \"#utility.yul\":3922:3924   */\n      0x60\n        /* \"#utility.yul\":3907:3925   */\n      dup2\n      add\n        /* \"#utility.yul\":3894:3926   */\n      calldataload\n      swap8\n      pop\n        /* \"#utility.yul\":4025:4028   */\n      0x80\n        /* \"#utility.yul\":4010:4029   */\n      add\n        /* \"#utility.yul\":3997:4030   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":3264:4062   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4067:4253   */\n    tag_103:\n        /* \"#utility.yul\":4126:4132   */\n      0x00\n        /* \"#utility.yul\":4179:4181   */\n      0x20\n        /* \"#utility.yul\":4167:4176   */\n      dup3\n        /* \"#utility.yul\":4158:4165   */\n      dup5\n        /* \"#utility.yul\":4154:4177   */\n      sub\n        /* \"#utility.yul\":4150:4182   */\n      slt\n        /* \"#utility.yul\":4147:4199   */\n      iszero\n      tag_685\n      jumpi\n        /* \"#utility.yul\":4195:4196   */\n      0x00\n        /* \"#utility.yul\":4192:4193   */\n      dup1\n        /* \"#utility.yul\":4185:4197   */\n      revert\n        /* \"#utility.yul\":4147:4199   */\n    tag_685:\n        /* \"#utility.yul\":4218:4247   */\n      tag_621\n        /* \"#utility.yul\":4237:4246   */\n      dup3\n        /* \"#utility.yul\":4218:4247   */\n      tag_642\n      jump\t// in\n        /* \"#utility.yul\":4892:5416   */\n    tag_119:\n        /* \"#utility.yul\":4969:4975   */\n      0x00\n        /* \"#utility.yul\":4977:4983   */\n      dup1\n        /* \"#utility.yul\":5030:5032   */\n      0x40\n        /* \"#utility.yul\":5018:5027   */\n      dup4\n        /* \"#utility.yul\":5009:5016   */\n      dup6\n        /* \"#utility.yul\":5005:5028   */\n      sub\n        /* \"#utility.yul\":5001:5033   */\n      slt\n        /* \"#utility.yul\":4998:5050   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":5046:5047   */\n      0x00\n        /* \"#utility.yul\":5043:5044   */\n      dup1\n        /* \"#utility.yul\":5036:5048   */\n      revert\n        /* \"#utility.yul\":4998:5050   */\n    tag_692:\n        /* \"#utility.yul\":5069:5098   */\n      tag_693\n        /* \"#utility.yul\":5088:5097   */\n      dup4\n        /* \"#utility.yul\":5069:5098   */\n      tag_642\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":5059:5098   */\n      swap2\n      pop\n        /* \"#utility.yul\":5149:5151   */\n      0x20\n        /* \"#utility.yul\":5138:5147   */\n      dup4\n        /* \"#utility.yul\":5134:5152   */\n      add\n        /* \"#utility.yul\":5121:5153   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5168:5174   */\n      dup2\n        /* \"#utility.yul\":5165:5195   */\n      gt\n        /* \"#utility.yul\":5162:5212   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":5208:5209   */\n      0x00\n        /* \"#utility.yul\":5205:5206   */\n      dup1\n        /* \"#utility.yul\":5198:5210   */\n      revert\n        /* \"#utility.yul\":5162:5212   */\n    tag_694:\n        /* \"#utility.yul\":5231:5253   */\n      dup4\n      add\n        /* \"#utility.yul\":5284:5288   */\n      0x1f\n        /* \"#utility.yul\":5276:5289   */\n      dup2\n      add\n        /* \"#utility.yul\":5272:5299   */\n      dup6\n      sgt\n        /* \"#utility.yul\":5262:5317   */\n      tag_695\n      jumpi\n        /* \"#utility.yul\":5313:5314   */\n      0x00\n        /* \"#utility.yul\":5310:5311   */\n      dup1\n        /* \"#utility.yul\":5303:5315   */\n      revert\n        /* \"#utility.yul\":5262:5317   */\n    tag_695:\n        /* \"#utility.yul\":5336:5410   */\n      tag_696\n        /* \"#utility.yul\":5402:5409   */\n      dup6\n        /* \"#utility.yul\":5397:5399   */\n      dup3\n        /* \"#utility.yul\":5384:5400   */\n      calldataload\n        /* \"#utility.yul\":5379:5381   */\n      0x20\n        /* \"#utility.yul\":5375:5377   */\n      dup5\n        /* \"#utility.yul\":5371:5382   */\n      add\n        /* \"#utility.yul\":5336:5410   */\n      tag_640\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":5326:5410   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4892:5416   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5421:5817   */\n    tag_124:\n        /* \"#utility.yul\":5499:5505   */\n      0x00\n        /* \"#utility.yul\":5507:5513   */\n      dup1\n        /* \"#utility.yul\":5560:5562   */\n      0x40\n        /* \"#utility.yul\":5548:5557   */\n      dup4\n        /* \"#utility.yul\":5539:5546   */\n      dup6\n        /* \"#utility.yul\":5535:5558   */\n      sub\n        /* \"#utility.yul\":5531:5563   */\n      slt\n        /* \"#utility.yul\":5528:5580   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":5576:5577   */\n      0x00\n        /* \"#utility.yul\":5573:5574   */\n      dup1\n        /* \"#utility.yul\":5566:5578   */\n      revert\n        /* \"#utility.yul\":5528:5580   */\n    tag_698:\n        /* \"#utility.yul\":5616:5625   */\n      dup3\n        /* \"#utility.yul\":5603:5626   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5641:5647   */\n      dup2\n        /* \"#utility.yul\":5638:5668   */\n      gt\n        /* \"#utility.yul\":5635:5685   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":5681:5682   */\n      0x00\n        /* \"#utility.yul\":5678:5679   */\n      dup1\n        /* \"#utility.yul\":5671:5683   */\n      revert\n        /* \"#utility.yul\":5635:5685   */\n    tag_699:\n        /* \"#utility.yul\":5704:5754   */\n      tag_700\n        /* \"#utility.yul\":5746:5753   */\n      dup6\n        /* \"#utility.yul\":5737:5743   */\n      dup3\n        /* \"#utility.yul\":5726:5735   */\n      dup7\n        /* \"#utility.yul\":5722:5744   */\n      add\n        /* \"#utility.yul\":5704:5754   */\n      tag_641\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":5694:5754   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5773:5811   */\n      tag_679\n        /* \"#utility.yul\":5807:5809   */\n      0x20\n        /* \"#utility.yul\":5796:5805   */\n      dup5\n        /* \"#utility.yul\":5792:5810   */\n      add\n        /* \"#utility.yul\":5773:5811   */\n      tag_642\n      jump\t// in\n        /* \"#utility.yul\":6046:6698   */\n    tag_142:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6151:6157   */\n      dup1\n        /* \"#utility.yul\":6159:6165   */\n      0x00\n        /* \"#utility.yul\":6212:6214   */\n      0x60\n        /* \"#utility.yul\":6200:6209   */\n      dup5\n        /* \"#utility.yul\":6191:6198   */\n      dup7\n        /* \"#utility.yul\":6187:6210   */\n      sub\n        /* \"#utility.yul\":6183:6215   */\n      slt\n        /* \"#utility.yul\":6180:6232   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":6228:6229   */\n      0x00\n        /* \"#utility.yul\":6225:6226   */\n      dup1\n        /* \"#utility.yul\":6218:6230   */\n      revert\n        /* \"#utility.yul\":6180:6232   */\n    tag_704:\n        /* \"#utility.yul\":6268:6277   */\n      dup4\n        /* \"#utility.yul\":6255:6278   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6293:6299   */\n      dup2\n        /* \"#utility.yul\":6290:6320   */\n      gt\n        /* \"#utility.yul\":6287:6337   */\n      iszero\n      tag_705\n      jumpi\n        /* \"#utility.yul\":6333:6334   */\n      0x00\n        /* \"#utility.yul\":6330:6331   */\n      dup1\n        /* \"#utility.yul\":6323:6335   */\n      revert\n        /* \"#utility.yul\":6287:6337   */\n    tag_705:\n        /* \"#utility.yul\":6356:6406   */\n      tag_706\n        /* \"#utility.yul\":6398:6405   */\n      dup7\n        /* \"#utility.yul\":6389:6395   */\n      dup3\n        /* \"#utility.yul\":6378:6387   */\n      dup8\n        /* \"#utility.yul\":6374:6396   */\n      add\n        /* \"#utility.yul\":6356:6406   */\n      tag_641\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":6346:6406   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":6459:6461   */\n      0x20\n        /* \"#utility.yul\":6448:6457   */\n      dup5\n        /* \"#utility.yul\":6444:6462   */\n      add\n        /* \"#utility.yul\":6431:6463   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6478:6486   */\n      dup2\n        /* \"#utility.yul\":6475:6507   */\n      gt\n        /* \"#utility.yul\":6472:6524   */\n      iszero\n      tag_707\n      jumpi\n        /* \"#utility.yul\":6520:6521   */\n      0x00\n        /* \"#utility.yul\":6517:6518   */\n      dup1\n        /* \"#utility.yul\":6510:6522   */\n      revert\n        /* \"#utility.yul\":6472:6524   */\n    tag_707:\n        /* \"#utility.yul\":6543:6595   */\n      tag_708\n        /* \"#utility.yul\":6587:6594   */\n      dup7\n        /* \"#utility.yul\":6576:6584   */\n      dup3\n        /* \"#utility.yul\":6565:6574   */\n      dup8\n        /* \"#utility.yul\":6561:6585   */\n      add\n        /* \"#utility.yul\":6543:6595   */\n      tag_641\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":6046:6698   */\n      swap4\n      swap7\n        /* \"#utility.yul\":6533:6595   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6664:6666   */\n      0x40\n        /* \"#utility.yul\":6649:6667   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6636:6668   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":6046:6698   */\n      jump\t// out\n        /* \"#utility.yul\":6926:7226   */\n    tag_643:\n        /* \"#utility.yul\":6979:6982   */\n      0x00\n        /* \"#utility.yul\":7017:7022   */\n      dup2\n        /* \"#utility.yul\":7011:7023   */\n      mload\n        /* \"#utility.yul\":7044:7050   */\n      dup1\n        /* \"#utility.yul\":7039:7042   */\n      dup5\n        /* \"#utility.yul\":7032:7051   */\n      mstore\n        /* \"#utility.yul\":7100:7106   */\n      dup1\n        /* \"#utility.yul\":7093:7097   */\n      0x20\n        /* \"#utility.yul\":7086:7091   */\n      dup5\n        /* \"#utility.yul\":7082:7098   */\n      add\n        /* \"#utility.yul\":7075:7079   */\n      0x20\n        /* \"#utility.yul\":7070:7073   */\n      dup7\n        /* \"#utility.yul\":7066:7080   */\n      add\n        /* \"#utility.yul\":7060:7107   */\n      mcopy\n        /* \"#utility.yul\":7152:7153   */\n      0x00\n        /* \"#utility.yul\":7145:7149   */\n      0x20\n        /* \"#utility.yul\":7136:7142   */\n      dup3\n        /* \"#utility.yul\":7131:7134   */\n      dup7\n        /* \"#utility.yul\":7127:7143   */\n      add\n        /* \"#utility.yul\":7123:7150   */\n      add\n        /* \"#utility.yul\":7116:7154   */\n      mstore\n        /* \"#utility.yul\":7215:7219   */\n      0x20\n        /* \"#utility.yul\":7208:7210   */\n      0x1f\n        /* \"#utility.yul\":7204:7211   */\n      not\n        /* \"#utility.yul\":7199:7201   */\n      0x1f\n        /* \"#utility.yul\":7191:7197   */\n      dup4\n        /* \"#utility.yul\":7187:7202   */\n      add\n        /* \"#utility.yul\":7183:7212   */\n      and\n        /* \"#utility.yul\":7178:7181   */\n      dup6\n        /* \"#utility.yul\":7174:7213   */\n      add\n        /* \"#utility.yul\":7170:7220   */\n      add\n        /* \"#utility.yul\":7163:7220   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6926:7226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7231:7559   */\n    tag_178:\n        /* \"#utility.yul\":7408:7410   */\n      0x40\n        /* \"#utility.yul\":7397:7406   */\n      dup2\n        /* \"#utility.yul\":7390:7411   */\n      mstore\n        /* \"#utility.yul\":7371:7375   */\n      0x00\n        /* \"#utility.yul\":7428:7484   */\n      tag_712\n        /* \"#utility.yul\":7480:7482   */\n      0x40\n        /* \"#utility.yul\":7469:7478   */\n      dup4\n        /* \"#utility.yul\":7465:7483   */\n      add\n        /* \"#utility.yul\":7457:7463   */\n      dup6\n        /* \"#utility.yul\":7428:7484   */\n      tag_643\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":7420:7484   */\n      swap1\n      pop\n        /* \"#utility.yul\":7549:7550   */\n      0x01\n        /* \"#utility.yul\":7545:7546   */\n      dup1\n        /* \"#utility.yul\":7540:7543   */\n      0xa0\n        /* \"#utility.yul\":7536:7547   */\n      shl\n        /* \"#utility.yul\":7532:7551   */\n      sub\n        /* \"#utility.yul\":7524:7530   */\n      dup4\n        /* \"#utility.yul\":7520:7552   */\n      and\n        /* \"#utility.yul\":7515:7517   */\n      0x20\n        /* \"#utility.yul\":7504:7513   */\n      dup4\n        /* \"#utility.yul\":7500:7518   */\n      add\n        /* \"#utility.yul\":7493:7553   */\n      mstore\n        /* \"#utility.yul\":7231:7559   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7564:8688   */\n    tag_182:\n        /* \"#utility.yul\":7657:7663   */\n      0x00\n        /* \"#utility.yul\":7665:7671   */\n      dup1\n        /* \"#utility.yul\":7718:7720   */\n      0x40\n        /* \"#utility.yul\":7706:7715   */\n      dup4\n        /* \"#utility.yul\":7697:7704   */\n      dup6\n        /* \"#utility.yul\":7693:7716   */\n      sub\n        /* \"#utility.yul\":7689:7721   */\n      slt\n        /* \"#utility.yul\":7686:7738   */\n      iszero\n      tag_714\n      jumpi\n        /* \"#utility.yul\":7734:7735   */\n      0x00\n        /* \"#utility.yul\":7731:7732   */\n      dup1\n        /* \"#utility.yul\":7724:7736   */\n      revert\n        /* \"#utility.yul\":7686:7738   */\n    tag_714:\n        /* \"#utility.yul\":7774:7783   */\n      dup3\n        /* \"#utility.yul\":7761:7784   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7799:7805   */\n      dup2\n        /* \"#utility.yul\":7796:7826   */\n      gt\n        /* \"#utility.yul\":7793:7843   */\n      iszero\n      tag_715\n      jumpi\n        /* \"#utility.yul\":7839:7840   */\n      0x00\n        /* \"#utility.yul\":7836:7837   */\n      dup1\n        /* \"#utility.yul\":7829:7841   */\n      revert\n        /* \"#utility.yul\":7793:7843   */\n    tag_715:\n        /* \"#utility.yul\":7862:7884   */\n      dup4\n      add\n        /* \"#utility.yul\":7915:7919   */\n      0x1f\n        /* \"#utility.yul\":7907:7920   */\n      dup2\n      add\n        /* \"#utility.yul\":7903:7930   */\n      dup6\n      sgt\n        /* \"#utility.yul\":7893:7948   */\n      tag_716\n      jumpi\n        /* \"#utility.yul\":7944:7945   */\n      0x00\n        /* \"#utility.yul\":7941:7942   */\n      dup1\n        /* \"#utility.yul\":7934:7946   */\n      revert\n        /* \"#utility.yul\":7893:7948   */\n    tag_716:\n        /* \"#utility.yul\":7984:7986   */\n      dup1\n        /* \"#utility.yul\":7971:7987   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8002:8008   */\n      dup2\n        /* \"#utility.yul\":7999:8029   */\n      gt\n        /* \"#utility.yul\":7996:8052   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":8032:8050   */\n      tag_718\n      tag_307\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":8078:8084   */\n      dup1\n        /* \"#utility.yul\":8075:8076   */\n      0x05\n        /* \"#utility.yul\":8071:8085   */\n      shl\n        /* \"#utility.yul\":8105:8135   */\n      tag_719\n        /* \"#utility.yul\":8129:8133   */\n      0x20\n        /* \"#utility.yul\":8125:8127   */\n      dup3\n        /* \"#utility.yul\":8121:8134   */\n      add\n        /* \"#utility.yul\":8105:8135   */\n      tag_639\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":8169:8188   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":8213:8217   */\n      0x20\n        /* \"#utility.yul\":8245:8256   */\n      dup2\n      dup5\n      add\n        /* \"#utility.yul\":8241:8263   */\n      dup2\n      add\n      swap3\n        /* \"#utility.yul\":8204:8218   */\n      swap1\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":8275:8294   */\n      dup9\n      dup5\n      gt\n        /* \"#utility.yul\":8272:8311   */\n      iszero\n      tag_720\n      jumpi\n        /* \"#utility.yul\":8307:8308   */\n      0x00\n        /* \"#utility.yul\":8304:8305   */\n      dup1\n        /* \"#utility.yul\":8297:8309   */\n      revert\n        /* \"#utility.yul\":8272:8311   */\n    tag_720:\n        /* \"#utility.yul\":8339:8343   */\n      0x20\n        /* \"#utility.yul\":8335:8337   */\n      dup6\n        /* \"#utility.yul\":8331:8344   */\n      add\n        /* \"#utility.yul\":8320:8344   */\n      swap5\n      pop\n        /* \"#utility.yul\":8353:8553   */\n    tag_721:\n        /* \"#utility.yul\":8369:8375   */\n      dup4\n        /* \"#utility.yul\":8364:8367   */\n      dup6\n        /* \"#utility.yul\":8361:8376   */\n      lt\n        /* \"#utility.yul\":8353:8553   */\n      iszero\n      tag_723\n      jumpi\n        /* \"#utility.yul\":8461:8478   */\n      dup5\n      calldataload\n        /* \"#utility.yul\":8491:8509   */\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":8538:8542   */\n      0x20\n        /* \"#utility.yul\":8386:8400   */\n      swap6\n      dup7\n      add\n      swap6\n        /* \"#utility.yul\":8461:8478   */\n      swap1\n      swap4\n      pop\n        /* \"#utility.yul\":8529:8543   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":8353:8553   */\n      jump(tag_721)\n    tag_723:\n        /* \"#utility.yul\":8572:8577   */\n      swap9\n        /* \"#utility.yul\":8650:8654   */\n      0x20\n        /* \"#utility.yul\":8635:8655   */\n      swap8\n      swap1\n      swap8\n      add\n        /* \"#utility.yul\":8622:8656   */\n      calldataload\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7564:8688   */\n      jump\t// out\n        /* \"#utility.yul\":8693:8924   */\n    tag_188:\n        /* \"#utility.yul\":8842:8844   */\n      0x20\n        /* \"#utility.yul\":8831:8840   */\n      dup2\n        /* \"#utility.yul\":8824:8845   */\n      mstore\n        /* \"#utility.yul\":8805:8809   */\n      0x00\n        /* \"#utility.yul\":8862:8918   */\n      tag_621\n        /* \"#utility.yul\":8914:8916   */\n      0x20\n        /* \"#utility.yul\":8903:8912   */\n      dup4\n        /* \"#utility.yul\":8899:8917   */\n      add\n        /* \"#utility.yul\":8891:8897   */\n      dup5\n        /* \"#utility.yul\":8862:8918   */\n      tag_643\n      jump\t// in\n        /* \"#utility.yul\":8929:9519   */\n    tag_202:\n        /* \"#utility.yul\":9218:9224   */\n      dup7\n        /* \"#utility.yul\":9207:9216   */\n      dup2\n        /* \"#utility.yul\":9200:9225   */\n      mstore\n        /* \"#utility.yul\":9261:9264   */\n      0xc0\n        /* \"#utility.yul\":9256:9258   */\n      0x20\n        /* \"#utility.yul\":9245:9254   */\n      dup3\n        /* \"#utility.yul\":9241:9259   */\n      add\n        /* \"#utility.yul\":9234:9265   */\n      mstore\n        /* \"#utility.yul\":9181:9185   */\n      0x00\n        /* \"#utility.yul\":9282:9339   */\n      tag_727\n        /* \"#utility.yul\":9334:9337   */\n      0xc0\n        /* \"#utility.yul\":9323:9332   */\n      dup4\n        /* \"#utility.yul\":9319:9338   */\n      add\n        /* \"#utility.yul\":9311:9317   */\n      dup9\n        /* \"#utility.yul\":9282:9339   */\n      tag_643\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":9274:9339   */\n      swap1\n      pop\n        /* \"#utility.yul\":9375:9381   */\n      dup6\n        /* \"#utility.yul\":9370:9372   */\n      0x40\n        /* \"#utility.yul\":9359:9368   */\n      dup4\n        /* \"#utility.yul\":9355:9373   */\n      add\n        /* \"#utility.yul\":9348:9382   */\n      mstore\n        /* \"#utility.yul\":9418:9424   */\n      dup5\n        /* \"#utility.yul\":9413:9415   */\n      0x60\n        /* \"#utility.yul\":9402:9411   */\n      dup4\n        /* \"#utility.yul\":9398:9416   */\n      add\n        /* \"#utility.yul\":9391:9425   */\n      mstore\n        /* \"#utility.yul\":9462:9468   */\n      dup4\n        /* \"#utility.yul\":9456:9459   */\n      0x80\n        /* \"#utility.yul\":9445:9454   */\n      dup4\n        /* \"#utility.yul\":9441:9460   */\n      add\n        /* \"#utility.yul\":9434:9469   */\n      mstore\n        /* \"#utility.yul\":9506:9512   */\n      dup3\n        /* \"#utility.yul\":9500:9503   */\n      0xa0\n        /* \"#utility.yul\":9489:9498   */\n      dup4\n        /* \"#utility.yul\":9485:9504   */\n      add\n        /* \"#utility.yul\":9478:9513   */\n      mstore\n        /* \"#utility.yul\":8929:9519   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9524:9824   */\n    tag_206:\n        /* \"#utility.yul\":9592:9598   */\n      0x00\n        /* \"#utility.yul\":9600:9606   */\n      dup1\n        /* \"#utility.yul\":9653:9655   */\n      0x40\n        /* \"#utility.yul\":9641:9650   */\n      dup4\n        /* \"#utility.yul\":9632:9639   */\n      dup6\n        /* \"#utility.yul\":9628:9651   */\n      sub\n        /* \"#utility.yul\":9624:9656   */\n      slt\n        /* \"#utility.yul\":9621:9673   */\n      iszero\n      tag_729\n      jumpi\n        /* \"#utility.yul\":9669:9670   */\n      0x00\n        /* \"#utility.yul\":9666:9667   */\n      dup1\n        /* \"#utility.yul\":9659:9671   */\n      revert\n        /* \"#utility.yul\":9621:9673   */\n    tag_729:\n        /* \"#utility.yul\":9692:9721   */\n      tag_730\n        /* \"#utility.yul\":9711:9720   */\n      dup4\n        /* \"#utility.yul\":9692:9721   */\n      tag_642\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":9682:9721   */\n      swap5\n        /* \"#utility.yul\":9790:9792   */\n      0x20\n        /* \"#utility.yul\":9775:9793   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":9762:9794   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9524:9824   */\n      jump\t// out\n        /* \"#utility.yul\":9829:10388   */\n    tag_209:\n        /* \"#utility.yul\":10076:10079   */\n      0x80\n        /* \"#utility.yul\":10065:10074   */\n      dup2\n        /* \"#utility.yul\":10058:10080   */\n      mstore\n        /* \"#utility.yul\":10039:10043   */\n      0x00\n        /* \"#utility.yul\":10103:10160   */\n      tag_732\n        /* \"#utility.yul\":10155:10158   */\n      0x80\n        /* \"#utility.yul\":10144:10153   */\n      dup4\n        /* \"#utility.yul\":10140:10159   */\n      add\n        /* \"#utility.yul\":10132:10138   */\n      dup8\n        /* \"#utility.yul\":10103:10160   */\n      tag_643\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":10208:10217   */\n      dup3\n        /* \"#utility.yul\":10200:10206   */\n      dup2\n        /* \"#utility.yul\":10196:10218   */\n      sub\n        /* \"#utility.yul\":10191:10193   */\n      0x20\n        /* \"#utility.yul\":10180:10189   */\n      dup5\n        /* \"#utility.yul\":10176:10194   */\n      add\n        /* \"#utility.yul\":10169:10219   */\n      mstore\n        /* \"#utility.yul\":10236:10280   */\n      tag_733\n        /* \"#utility.yul\":10273:10279   */\n      dup2\n        /* \"#utility.yul\":10265:10271   */\n      dup8\n        /* \"#utility.yul\":10236:10280   */\n      tag_643\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":10311:10313   */\n      0x40\n        /* \"#utility.yul\":10296:10314   */\n      dup5\n      add\n        /* \"#utility.yul\":10289:10323   */\n      swap6\n      swap1\n      swap6\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":10366:10380   */\n      swap1\n      iszero\n        /* \"#utility.yul\":10359:10381   */\n      iszero\n        /* \"#utility.yul\":10354:10356   */\n      0x60\n        /* \"#utility.yul\":10339:10357   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":10332:10382   */\n      mstore\n        /* \"#utility.yul\":10228:10280   */\n      swap3\n        /* \"#utility.yul\":9829:10388   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11302:12086   */\n    tag_244:\n        /* \"#utility.yul\":11433:11439   */\n      0x00\n        /* \"#utility.yul\":11441:11447   */\n      dup1\n        /* \"#utility.yul\":11449:11455   */\n      0x00\n        /* \"#utility.yul\":11457:11463   */\n      dup1\n        /* \"#utility.yul\":11465:11471   */\n      0x00\n        /* \"#utility.yul\":11473:11479   */\n      dup1\n        /* \"#utility.yul\":11481:11487   */\n      0x00\n        /* \"#utility.yul\":11489:11495   */\n      dup1\n        /* \"#utility.yul\":11497:11503   */\n      0x00\n        /* \"#utility.yul\":11550:11553   */\n      0x0120\n        /* \"#utility.yul\":11538:11547   */\n      dup11\n        /* \"#utility.yul\":11529:11536   */\n      dup13\n        /* \"#utility.yul\":11525:11548   */\n      sub\n        /* \"#utility.yul\":11521:11554   */\n      slt\n        /* \"#utility.yul\":11518:11571   */\n      iszero\n      tag_737\n      jumpi\n        /* \"#utility.yul\":11567:11568   */\n      0x00\n        /* \"#utility.yul\":11564:11565   */\n      dup1\n        /* \"#utility.yul\":11557:11569   */\n      revert\n        /* \"#utility.yul\":11518:11571   */\n    tag_737:\n        /* \"#utility.yul\":11590:11619   */\n      tag_738\n        /* \"#utility.yul\":11609:11618   */\n      dup11\n        /* \"#utility.yul\":11590:11619   */\n      tag_642\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":11580:11619   */\n      swap9\n      pop\n        /* \"#utility.yul\":11638:11676   */\n      tag_739\n        /* \"#utility.yul\":11672:11674   */\n      0x20\n        /* \"#utility.yul\":11661:11670   */\n      dup12\n        /* \"#utility.yul\":11657:11675   */\n      add\n        /* \"#utility.yul\":11638:11676   */\n      tag_642\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":11628:11676   */\n      swap8\n      pop\n        /* \"#utility.yul\":11695:11733   */\n      tag_740\n        /* \"#utility.yul\":11729:11731   */\n      0x40\n        /* \"#utility.yul\":11718:11727   */\n      dup12\n        /* \"#utility.yul\":11714:11732   */\n      add\n        /* \"#utility.yul\":11695:11733   */\n      tag_642\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":11685:11733   */\n      swap7\n      pop\n        /* \"#utility.yul\":11752:11790   */\n      tag_741\n        /* \"#utility.yul\":11786:11788   */\n      0x60\n        /* \"#utility.yul\":11775:11784   */\n      dup12\n        /* \"#utility.yul\":11771:11789   */\n      add\n        /* \"#utility.yul\":11752:11790   */\n      tag_642\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":11742:11790   */\n      swap6\n      pop\n        /* \"#utility.yul\":11809:11848   */\n      tag_742\n        /* \"#utility.yul\":11843:11846   */\n      0x80\n        /* \"#utility.yul\":11832:11841   */\n      dup12\n        /* \"#utility.yul\":11828:11847   */\n      add\n        /* \"#utility.yul\":11809:11848   */\n      tag_642\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":11799:11848   */\n      swap5\n      pop\n        /* \"#utility.yul\":11867:11906   */\n      tag_743\n        /* \"#utility.yul\":11901:11904   */\n      0xa0\n        /* \"#utility.yul\":11890:11899   */\n      dup12\n        /* \"#utility.yul\":11886:11905   */\n      add\n        /* \"#utility.yul\":11867:11906   */\n      tag_642\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":11857:11906   */\n      swap4\n      pop\n        /* \"#utility.yul\":11925:11964   */\n      tag_744\n        /* \"#utility.yul\":11959:11962   */\n      0xc0\n        /* \"#utility.yul\":11948:11957   */\n      dup12\n        /* \"#utility.yul\":11944:11963   */\n      add\n        /* \"#utility.yul\":11925:11964   */\n      tag_642\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":11915:11964   */\n      swap3\n      pop\n        /* \"#utility.yul\":11983:12022   */\n      tag_745\n        /* \"#utility.yul\":12017:12020   */\n      0xe0\n        /* \"#utility.yul\":12006:12015   */\n      dup12\n        /* \"#utility.yul\":12002:12021   */\n      add\n        /* \"#utility.yul\":11983:12022   */\n      tag_642\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":11973:12022   */\n      swap2\n      pop\n        /* \"#utility.yul\":12041:12080   */\n      tag_746\n        /* \"#utility.yul\":12075:12078   */\n      0x0100\n        /* \"#utility.yul\":12064:12073   */\n      dup12\n        /* \"#utility.yul\":12060:12079   */\n      add\n        /* \"#utility.yul\":12041:12080   */\n      tag_642\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":12031:12080   */\n      swap1\n      pop\n        /* \"#utility.yul\":11302:12086   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      jump\t// out\n        /* \"#utility.yul\":12091:12218   */\n    tag_260:\n        /* \"#utility.yul\":12152:12162   */\n      0x4e487b71\n        /* \"#utility.yul\":12147:12150   */\n      0xe0\n        /* \"#utility.yul\":12143:12163   */\n      shl\n        /* \"#utility.yul\":12140:12141   */\n      0x00\n        /* \"#utility.yul\":12133:12164   */\n      mstore\n        /* \"#utility.yul\":12183:12187   */\n      0x32\n        /* \"#utility.yul\":12180:12181   */\n      0x04\n        /* \"#utility.yul\":12173:12188   */\n      mstore\n        /* \"#utility.yul\":12207:12211   */\n      0x24\n        /* \"#utility.yul\":12204:12205   */\n      0x00\n        /* \"#utility.yul\":12197:12212   */\n      revert\n        /* \"#utility.yul\":12223:12435   */\n    tag_644:\n        /* \"#utility.yul\":12265:12268   */\n      0x00\n        /* \"#utility.yul\":12303:12308   */\n      dup2\n        /* \"#utility.yul\":12297:12309   */\n      mload\n        /* \"#utility.yul\":12347:12353   */\n      dup1\n        /* \"#utility.yul\":12340:12344   */\n      0x20\n        /* \"#utility.yul\":12333:12338   */\n      dup5\n        /* \"#utility.yul\":12329:12345   */\n      add\n        /* \"#utility.yul\":12324:12327   */\n      dup6\n        /* \"#utility.yul\":12318:12354   */\n      mcopy\n        /* \"#utility.yul\":12409:12410   */\n      0x00\n        /* \"#utility.yul\":12373:12389   */\n      swap4\n      add\n        /* \"#utility.yul\":12398:12411   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":12373:12389   */\n      swap1\n      swap2\n        /* \"#utility.yul\":12223:12435   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12440:12632   */\n    tag_263:\n        /* \"#utility.yul\":12571:12574   */\n      0x00\n        /* \"#utility.yul\":12596:12626   */\n      tag_621\n        /* \"#utility.yul\":12622:12625   */\n      dup3\n        /* \"#utility.yul\":12614:12620   */\n      dup5\n        /* \"#utility.yul\":12596:12626   */\n      tag_644\n      jump\t// in\n        /* \"#utility.yul\":12637:13017   */\n    tag_417:\n        /* \"#utility.yul\":12716:12717   */\n      0x01\n        /* \"#utility.yul\":12712:12724   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":12759:12771   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":12780:12841   */\n      tag_752\n      jumpi\n        /* \"#utility.yul\":12834:12838   */\n      0x7f\n        /* \"#utility.yul\":12826:12832   */\n      dup3\n        /* \"#utility.yul\":12822:12839   */\n      and\n        /* \"#utility.yul\":12812:12839   */\n      swap2\n      pop\n        /* \"#utility.yul\":12780:12841   */\n    tag_752:\n        /* \"#utility.yul\":12887:12889   */\n      0x20\n        /* \"#utility.yul\":12879:12885   */\n      dup3\n        /* \"#utility.yul\":12876:12890   */\n      lt\n        /* \"#utility.yul\":12856:12874   */\n      dup2\n        /* \"#utility.yul\":12853:12891   */\n      sub\n        /* \"#utility.yul\":12850:13011   */\n      tag_753\n      jumpi\n        /* \"#utility.yul\":12933:12943   */\n      0x4e487b71\n        /* \"#utility.yul\":12928:12931   */\n      0xe0\n        /* \"#utility.yul\":12924:12944   */\n      shl\n        /* \"#utility.yul\":12921:12922   */\n      0x00\n        /* \"#utility.yul\":12914:12945   */\n      mstore\n        /* \"#utility.yul\":12968:12972   */\n      0x22\n        /* \"#utility.yul\":12965:12966   */\n      0x04\n        /* \"#utility.yul\":12958:12973   */\n      mstore\n        /* \"#utility.yul\":12996:13000   */\n      0x24\n        /* \"#utility.yul\":12993:12994   */\n      0x00\n        /* \"#utility.yul\":12986:13001   */\n      revert\n        /* \"#utility.yul\":12850:13011   */\n    tag_753:\n      pop\n        /* \"#utility.yul\":12637:13017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13148:13945   */\n    tag_265:\n        /* \"#utility.yul\":13276:13279   */\n      0x00\n        /* \"#utility.yul\":13305:13306   */\n      dup1\n        /* \"#utility.yul\":13338:13344   */\n      dup4\n        /* \"#utility.yul\":13332:13345   */\n      sload\n        /* \"#utility.yul\":13368:13404   */\n      tag_756\n        /* \"#utility.yul\":13394:13403   */\n      dup2\n        /* \"#utility.yul\":13368:13404   */\n      tag_417\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":13435:13436   */\n      0x01\n        /* \"#utility.yul\":13420:13437   */\n      dup3\n      and\n        /* \"#utility.yul\":13446:13579   */\n      dup1\n      iszero\n      tag_758\n      jumpi\n        /* \"#utility.yul\":13593:13594   */\n      0x01\n        /* \"#utility.yul\":13588:13920   */\n      dup2\n      eq\n      tag_759\n      jumpi\n        /* \"#utility.yul\":13413:13920   */\n      jump(tag_757)\n        /* \"#utility.yul\":13446:13579   */\n    tag_758:\n      not(0xff)\n        /* \"#utility.yul\":13479:13503   */\n      dup4\n      and\n        /* \"#utility.yul\":13467:13504   */\n      dup7\n      mstore\n        /* \"#utility.yul\":13552:13566   */\n      dup2\n      iszero\n        /* \"#utility.yul\":13545:13567   */\n      iszero\n        /* \"#utility.yul\":13533:13568   */\n      dup3\n      mul\n        /* \"#utility.yul\":13524:13569   */\n      dup7\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":13446:13579   */\n      jump(tag_757)\n        /* \"#utility.yul\":13588:13920   */\n    tag_759:\n        /* \"#utility.yul\":13619:13625   */\n      dup7\n        /* \"#utility.yul\":13616:13617   */\n      0x00\n        /* \"#utility.yul\":13609:13626   */\n      mstore\n        /* \"#utility.yul\":13667:13671   */\n      0x20\n        /* \"#utility.yul\":13664:13665   */\n      0x00\n        /* \"#utility.yul\":13654:13672   */\n      keccak256\n        /* \"#utility.yul\":13694:13695   */\n      0x00\n        /* \"#utility.yul\":13708:13874   */\n    tag_760:\n        /* \"#utility.yul\":13722:13728   */\n      dup4\n        /* \"#utility.yul\":13719:13720   */\n      dup2\n        /* \"#utility.yul\":13716:13729   */\n      lt\n        /* \"#utility.yul\":13708:13874   */\n      iszero\n      tag_762\n      jumpi\n        /* \"#utility.yul\":13802:13816   */\n      dup2\n      sload\n        /* \"#utility.yul\":13789:13800   */\n      dup9\n      dup3\n      add\n        /* \"#utility.yul\":13782:13817   */\n      mstore\n        /* \"#utility.yul\":13858:13859   */\n      0x01\n        /* \"#utility.yul\":13845:13860   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":13744:13748   */\n      0x20\n        /* \"#utility.yul\":13737:13749   */\n      add\n        /* \"#utility.yul\":13708:13874   */\n      jump(tag_760)\n    tag_762:\n        /* \"#utility.yul\":13712:13715   */\n      pop\n      pop\n        /* \"#utility.yul\":13903:13909   */\n      dup2\n        /* \"#utility.yul\":13898:13901   */\n      dup7\n        /* \"#utility.yul\":13894:13910   */\n      add\n        /* \"#utility.yul\":13887:13910   */\n      swap4\n      pop\n        /* \"#utility.yul\":13413:13920   */\n    tag_757:\n      pop\n        /* \"#utility.yul\":13936:13939   */\n      swap2\n      swap6\n        /* \"#utility.yul\":13148:13945   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13950:14077   */\n    tag_646:\n        /* \"#utility.yul\":14011:14021   */\n      0x4e487b71\n        /* \"#utility.yul\":14006:14009   */\n      0xe0\n        /* \"#utility.yul\":14002:14022   */\n      shl\n        /* \"#utility.yul\":13999:14000   */\n      0x00\n        /* \"#utility.yul\":13992:14023   */\n      mstore\n        /* \"#utility.yul\":14042:14046   */\n      0x11\n        /* \"#utility.yul\":14039:14040   */\n      0x04\n        /* \"#utility.yul\":14032:14047   */\n      mstore\n        /* \"#utility.yul\":14066:14070   */\n      0x24\n        /* \"#utility.yul\":14063:14064   */\n      0x00\n        /* \"#utility.yul\":14056:14071   */\n      revert\n        /* \"#utility.yul\":14082:14207   */\n    tag_269:\n        /* \"#utility.yul\":14147:14156   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14168:14178   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":14165:14201   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":14181:14199   */\n      tag_252\n      tag_646\n      jump\t// in\n        /* \"#utility.yul\":14212:14730   */\n    tag_647:\n        /* \"#utility.yul\":14314:14316   */\n      0x1f\n        /* \"#utility.yul\":14309:14312   */\n      dup3\n        /* \"#utility.yul\":14306:14317   */\n      gt\n        /* \"#utility.yul\":14303:14724   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":14350:14355   */\n      dup1\n        /* \"#utility.yul\":14347:14348   */\n      0x00\n        /* \"#utility.yul\":14340:14356   */\n      mstore\n        /* \"#utility.yul\":14394:14398   */\n      0x20\n        /* \"#utility.yul\":14391:14392   */\n      0x00\n        /* \"#utility.yul\":14381:14399   */\n      keccak256\n        /* \"#utility.yul\":14464:14466   */\n      0x1f\n        /* \"#utility.yul\":14452:14462   */\n      dup5\n        /* \"#utility.yul\":14448:14467   */\n      add\n        /* \"#utility.yul\":14445:14446   */\n      0x05\n        /* \"#utility.yul\":14441:14468   */\n      shr\n        /* \"#utility.yul\":14435:14439   */\n      dup2\n        /* \"#utility.yul\":14431:14469   */\n      add\n        /* \"#utility.yul\":14500:14504   */\n      0x20\n        /* \"#utility.yul\":14488:14498   */\n      dup6\n        /* \"#utility.yul\":14485:14505   */\n      lt\n        /* \"#utility.yul\":14482:14529   */\n      iszero\n      tag_769\n      jumpi\n      pop\n        /* \"#utility.yul\":14523:14527   */\n      dup1\n        /* \"#utility.yul\":14482:14529   */\n    tag_769:\n        /* \"#utility.yul\":14578:14580   */\n      0x1f\n        /* \"#utility.yul\":14573:14576   */\n      dup5\n        /* \"#utility.yul\":14569:14581   */\n      add\n        /* \"#utility.yul\":14566:14567   */\n      0x05\n        /* \"#utility.yul\":14562:14582   */\n      shr\n        /* \"#utility.yul\":14556:14560   */\n      dup3\n        /* \"#utility.yul\":14552:14583   */\n      add\n        /* \"#utility.yul\":14542:14583   */\n      swap2\n      pop\n        /* \"#utility.yul\":14633:14714   */\n    tag_770:\n        /* \"#utility.yul\":14651:14653   */\n      dup2\n        /* \"#utility.yul\":14644:14649   */\n      dup2\n        /* \"#utility.yul\":14641:14654   */\n      lt\n        /* \"#utility.yul\":14633:14714   */\n      iszero\n      tag_772\n      jumpi\n        /* \"#utility.yul\":14710:14711   */\n      0x00\n        /* \"#utility.yul\":14696:14712   */\n      dup2\n      sstore\n        /* \"#utility.yul\":14677:14678   */\n      0x01\n        /* \"#utility.yul\":14666:14679   */\n      add\n        /* \"#utility.yul\":14633:14714   */\n      jump(tag_770)\n    tag_772:\n        /* \"#utility.yul\":14637:14640   */\n      pop\n      pop\n        /* \"#utility.yul\":14212:14730   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14906:16205   */\n    tag_285:\n        /* \"#utility.yul\":15032:15035   */\n      dup2\n        /* \"#utility.yul\":15026:15036   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":15051:15057   */\n      dup2\n        /* \"#utility.yul\":15048:15078   */\n      gt\n        /* \"#utility.yul\":15045:15101   */\n      iszero\n      tag_776\n      jumpi\n        /* \"#utility.yul\":15081:15099   */\n      tag_776\n      tag_307\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":15110:15207   */\n      tag_777\n        /* \"#utility.yul\":15200:15206   */\n      dup2\n        /* \"#utility.yul\":15160:15198   */\n      tag_778\n        /* \"#utility.yul\":15192:15196   */\n      dup5\n        /* \"#utility.yul\":15186:15197   */\n      sload\n        /* \"#utility.yul\":15160:15198   */\n      tag_417\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":15154:15158   */\n      dup5\n        /* \"#utility.yul\":15110:15207   */\n      tag_647\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":15256:15260   */\n      0x20\n        /* \"#utility.yul\":15287:15289   */\n      0x1f\n        /* \"#utility.yul\":15276:15290   */\n      dup3\n      gt\n        /* \"#utility.yul\":15304:15305   */\n      0x01\n        /* \"#utility.yul\":15299:15948   */\n      dup2\n      eq\n      tag_780\n      jumpi\n        /* \"#utility.yul\":15992:15993   */\n      0x00\n        /* \"#utility.yul\":16009:16015   */\n      dup4\n        /* \"#utility.yul\":16006:16095   */\n      iszero\n      tag_781\n      jumpi\n      pop\n        /* \"#utility.yul\":16061:16080   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":16055:16081   */\n      mload\n        /* \"#utility.yul\":16006:16095   */\n    tag_781:\n      not(0x00)\n        /* \"#utility.yul\":14863:14864   */\n      0x03\n        /* \"#utility.yul\":14859:14870   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":14855:14879   */\n      shr\n        /* \"#utility.yul\":14851:14880   */\n      not\n        /* \"#utility.yul\":14841:14881   */\n      and\n        /* \"#utility.yul\":14887:14888   */\n      0x01\n        /* \"#utility.yul\":14883:14894   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":14838:14895   */\n      or\n        /* \"#utility.yul\":16108:16189   */\n      dup5\n      sstore\n        /* \"#utility.yul\":15269:16199   */\n      jump(tag_772)\n        /* \"#utility.yul\":15299:15948   */\n    tag_780:\n        /* \"#utility.yul\":13095:13096   */\n      0x00\n        /* \"#utility.yul\":13088:13102   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":13132:13136   */\n      0x20\n        /* \"#utility.yul\":13119:13137   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":15335:15355   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":15453:15675   */\n    tag_784:\n        /* \"#utility.yul\":15467:15474   */\n      dup3\n        /* \"#utility.yul\":15464:15465   */\n      dup2\n        /* \"#utility.yul\":15461:15475   */\n      lt\n        /* \"#utility.yul\":15453:15675   */\n      iszero\n      tag_786\n      jumpi\n        /* \"#utility.yul\":15549:15568   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":15543:15569   */\n      mload\n        /* \"#utility.yul\":15528:15570   */\n      dup3\n      sstore\n        /* \"#utility.yul\":15656:15660   */\n      0x20\n        /* \"#utility.yul\":15641:15661   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":15609:15610   */\n      0x01\n        /* \"#utility.yul\":15597:15611   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":15483:15495   */\n      add\n        /* \"#utility.yul\":15453:15675   */\n      jump(tag_784)\n    tag_786:\n        /* \"#utility.yul\":15457:15460   */\n      pop\n        /* \"#utility.yul\":15703:15709   */\n      dup5\n        /* \"#utility.yul\":15694:15701   */\n      dup3\n        /* \"#utility.yul\":15691:15710   */\n      lt\n        /* \"#utility.yul\":15688:15889   */\n      iszero\n      tag_787\n      jumpi\n        /* \"#utility.yul\":15764:15783   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":15758:15784   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":15847:15848   */\n      0x03\n        /* \"#utility.yul\":15843:15857   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":15859:15862   */\n      0xf8\n        /* \"#utility.yul\":15839:15863   */\n      and\n        /* \"#utility.yul\":15835:15872   */\n      shr\n        /* \"#utility.yul\":15831:15873   */\n      not\n        /* \"#utility.yul\":15816:15874   */\n      and\n        /* \"#utility.yul\":15801:15875   */\n      dup2\n      sstore\n        /* \"#utility.yul\":15688:15889   */\n    tag_787:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15935:15936   */\n      0x01\n        /* \"#utility.yul\":15919:15933   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":15915:15937   */\n      add\n        /* \"#utility.yul\":15902:15938   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":14906:16205   */\n      jump\t// out\n        /* \"#utility.yul\":16210:16512   */\n    tag_287:\n        /* \"#utility.yul\":16387:16393   */\n      dup3\n        /* \"#utility.yul\":16376:16385   */\n      dup2\n        /* \"#utility.yul\":16369:16394   */\n      mstore\n        /* \"#utility.yul\":16430:16432   */\n      0x40\n        /* \"#utility.yul\":16425:16427   */\n      0x20\n        /* \"#utility.yul\":16414:16423   */\n      dup3\n        /* \"#utility.yul\":16410:16428   */\n      add\n        /* \"#utility.yul\":16403:16433   */\n      mstore\n        /* \"#utility.yul\":16350:16354   */\n      0x00\n        /* \"#utility.yul\":16450:16506   */\n      tag_670\n        /* \"#utility.yul\":16502:16504   */\n      0x40\n        /* \"#utility.yul\":16491:16500   */\n      dup4\n        /* \"#utility.yul\":16487:16505   */\n      add\n        /* \"#utility.yul\":16479:16485   */\n      dup5\n        /* \"#utility.yul\":16450:16506   */\n      tag_643\n      jump\t// in\n        /* \"#utility.yul\":16517:16652   */\n    tag_289:\n        /* \"#utility.yul\":16556:16559   */\n      0x00\n        /* \"#utility.yul\":16577:16594   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":16574:16617   */\n      tag_792\n      jumpi\n        /* \"#utility.yul\":16597:16615   */\n      tag_792\n      tag_646\n      jump\t// in\n    tag_792:\n      pop\n        /* \"#utility.yul\":16644:16645   */\n      0x01\n        /* \"#utility.yul\":16633:16646   */\n      add\n      swap1\n        /* \"#utility.yul\":16517:16652   */\n      jump\t// out\n        /* \"#utility.yul\":18107:18235   */\n    tag_391:\n        /* \"#utility.yul\":18174:18183   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":18195:18206   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":18192:18229   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":18209:18227   */\n      tag_252\n      tag_646\n      jump\t// in\n        /* \"#utility.yul\":18240:18367   */\n    tag_400:\n        /* \"#utility.yul\":18301:18311   */\n      0x4e487b71\n        /* \"#utility.yul\":18296:18299   */\n      0xe0\n        /* \"#utility.yul\":18292:18312   */\n      shl\n        /* \"#utility.yul\":18289:18290   */\n      0x00\n        /* \"#utility.yul\":18282:18313   */\n      mstore\n        /* \"#utility.yul\":18332:18336   */\n      0x31\n        /* \"#utility.yul\":18329:18330   */\n      0x04\n        /* \"#utility.yul\":18322:18337   */\n      mstore\n        /* \"#utility.yul\":18356:18360   */\n      0x24\n        /* \"#utility.yul\":18353:18354   */\n      0x00\n        /* \"#utility.yul\":18346:18361   */\n      revert\n        /* \"#utility.yul\":19804:19988   */\n    tag_535:\n        /* \"#utility.yul\":19874:19880   */\n      0x00\n        /* \"#utility.yul\":19927:19929   */\n      0x20\n        /* \"#utility.yul\":19915:19924   */\n      dup3\n        /* \"#utility.yul\":19906:19913   */\n      dup5\n        /* \"#utility.yul\":19902:19925   */\n      sub\n        /* \"#utility.yul\":19898:19930   */\n      slt\n        /* \"#utility.yul\":19895:19947   */\n      iszero\n      tag_807\n      jumpi\n        /* \"#utility.yul\":19943:19944   */\n      0x00\n        /* \"#utility.yul\":19940:19941   */\n      dup1\n        /* \"#utility.yul\":19933:19945   */\n      revert\n        /* \"#utility.yul\":19895:19947   */\n    tag_807:\n      pop\n        /* \"#utility.yul\":19966:19982   */\n      mload\n      swap2\n        /* \"#utility.yul\":19804:19988   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3 9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c 65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f 02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n    data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n\n    auxdata: 0xa264697066735822122017e50992d8e441c501e255dd0dd94ae0246f27bf1d9831d9196c551577a7a43e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523060805260016006819055600755348015601c575f80fd5b50608051612b636100435f395f8181611d1901528181611d420152611ea50152612b635ff3fe608060405260043610610249575f3560e01c80638a13eea711610134578063bfb231d2116100b3578063e551ba4b11610078578063e551ba4b1461077b578063e63ab1e91461079a578063ee99205c146107ba578063f4e0d9ac146107d9578063f5e95acb146107f8578063f72c0d8b14610817575f80fd5b8063bfb231d214610646578063d3dcff7c14610677578063d547741f146106a6578063d836fc6f146106c5578063e2eb41ff146106e4575f80fd5b8063a75859e1116100f9578063a75859e11461057e578063a9834b67146105ab578063ad3cb1cc146105ca578063b001f61814610607578063be22d27d14610626575f80fd5b80638a13eea7146104f057806391d148541461050e578063965afa891461052d5780639a03d9a31461054c578063a217fddf1461056b575f80fd5b806341bec0d2116101cb57806352d1902d1161019057806352d1902d146104485780635c975abb1461045c5780635f2d6bcd1461047f5780636f347a781461049e5780637309cbbd146104bd5780638456cb59146104dc575f80fd5b806341bec0d2146103aa578063443c227c146103c95780634a7ffcbc146103f75780634f1ef286146104165780634fa4a1bb14610429575f80fd5b80632f2ff15d116102115780632f2ff15d1461032557806331fee8be1461034457806336568abe146103635780633f4ba83a146103825780633fa9fcf814610396575f80fd5b806301ffc9a71461024d57806302eec5681461028157806317435e1a146102b857806321f42268146102d9578063248a9ca3146102f8575b5f80fd5b348015610258575f80fd5b5061026c6102673660046122c5565b61084a565b60405190151581526020015b60405180910390f35b34801561028c575f80fd5b506005546102a0906001600160a01b031681565b6040516001600160a01b039091168152602001610278565b3480156102c3575f80fd5b506102d76102d23660046123a6565b610880565b005b3480156102e4575f80fd5b506002546102a0906001600160a01b031681565b348015610303575f80fd5b506103176103123660046123df565b6109b4565b604051908152602001610278565b348015610330575f80fd5b506102d761033f366004612411565b6109d4565b34801561034f575f80fd5b506102d761035e36600461243b565b6109f6565b34801561036e575f80fd5b506102d761037d366004612411565b610ae7565b34801561038d575f80fd5b506102d7610b1f565b3480156103a1575f80fd5b506102d7610b41565b3480156103b5575f80fd5b506102d76103c4366004612492565b610d0f565b3480156103d4575f80fd5b506103176103e33660046123df565b600d6020525f908152604090206001015481565b348015610402575f80fd5b506003546102a0906001600160a01b031681565b6102d76104243660046124ab565b610d48565b348015610434575f80fd5b506102d7610443366004612508565b610d63565b348015610453575f80fd5b50610317610f69565b348015610467575f80fd5b505f80516020612b0e8339815191525460ff1661026c565b34801561048a575f80fd5b506001546102a0906001600160a01b031681565b3480156104a9575f80fd5b506102d76104b8366004612549565b610f84565b3480156104c8575f80fd5b506102d76104d73660046123df565b61102e565b3480156104e7575f80fd5b506102d761134d565b3480156104fb575f80fd5b505f546102a0906001600160a01b031681565b348015610519575f80fd5b5061026c610528366004612411565b61136c565b348015610538575f80fd5b506102d7610547366004612492565b6113a2565b348015610557575f80fd5b506102d7610566366004612492565b6113dc565b348015610576575f80fd5b506103175f81565b348015610589575f80fd5b5061059d610598366004612492565b611416565b6040516102789291906125e3565b3480156105b6575f80fd5b506102d76105c536600461260c565b6114c0565b3480156105d5575f80fd5b506105fa604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161027891906126be565b348015610612575f80fd5b506102d7610621366004612492565b611570565b348015610631575f80fd5b506103175f80516020612a8e83398151915281565b348015610651575f80fd5b506106656106603660046123df565b6115aa565b604051610278969594939291906126d0565b348015610682575f80fd5b5061069661069136600461270d565b611664565b6040516102789493929190612735565b3480156106b1575f80fd5b506102d76106c0366004612411565b6117ba565b3480156106d0575f80fd5b506102d76106df366004612492565b6117d6565b3480156106ef575f80fd5b506107406106fe366004612492565b60096020525f90815260409020805460018201546002830154600384015460048501546005860154600687015460079097015495969495939492939192909188565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015260e082015261010001610278565b348015610786575f80fd5b506102d76107953660046123a6565b611810565b3480156107a5575f80fd5b506103175f80516020612ace83398151915281565b3480156107c5575f80fd5b506004546102a0906001600160a01b031681565b3480156107e4575f80fd5b506102d76107f3366004612492565b611967565b348015610803575f80fd5b506102d7610812366004612772565b6119a1565b348015610822575f80fd5b506103177f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b148061087a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f5b335f908152600a60205260409020548110156109b057335f908152600a602052604081208054839081106108b8576108b8612814565b905f5260205f2090600402019050826040516020016108d7919061283f565b60408051601f19818403018152908290528051602091820120916108fd91849101612882565b604051602081830303815290604052805190602001201480156109255750600381015460ff16155b156109a75760038101805460ff191660019081179091556002820154335f908152600960205260408120909201805491929091610963908490612907565b909155505060405133907fbe21664565742a9f42cbb6d005f92db59c7bcad35b12ef5b57b79e75676b247a9061099a9086906126be565b60405180910390a2505050565b50600101610882565b5050565b5f9081525f80516020612aee833981519152602052604090206001015490565b6109dd826109b4565b6109e681611b8b565b6109f08383611b95565b50505050565b5f80516020612a8e833981519152610a0d81611b8b565b6040805160c08101825260065480825260208083018a81528385018a9052606084018990526080840188905260a084018790525f92835260089091529290208151815591519091906001820190610a649082612965565b5060408201518160020155606082015181600301556080820151816004015560a082015181600501559050507f78d68ba0e8c23b92e7c700d99efed2719520cbd4af845b2c03ae251f9cdf3d5260065487604051610ac3929190612a1f565b60405180910390a160068054905f610ada83612a37565b9190505550505050505050565b6001600160a01b0381163314610b105760405163334bd91960e11b815260040160405180910390fd5b610b1a8282611c36565b505050565b5f80516020612ace833981519152610b3681611b8b565b610b3e611caf565b50565b335f9081526009602052604090205415610b9a5760405162461bcd60e51b8152602060048201526015602482015274506c6179657220616c72656164792065786973747360581b60448201526064015b60405180910390fd5b604051806101400160405280600181526020015f81526020016064815260200160328152602001600a81526020016005815260200160038152602001600281526020015f6001600160401b03811115610bf557610bf56122ec565b604051908082528060200260200182016040528015610c1e578160200160208202803683370190505b5081526020015f604051908082528060200260200182016040528015610c4e578160200160208202803683370190505b509052335f9081526009602090815260409182902083518155838201516001820155918301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e083015160078301556101008301518051610cc39260088501920190612215565b506101208201518051610ce0916009840191602090910190612215565b50506040513391507fb4cca19a27ce42915c3cee0cee28fc5d90969ee49f09ec71659546a63b5f7bc0905f90a2565b5f80516020612a8e833981519152610d2681611b8b565b505f80546001600160a01b0319166001600160a01b0392909216919091179055565b610d50611d0e565b610d5982611db4565b6109b08282611dde565b5f80516020612a8e833981519152610d7a81611b8b565b5f6001600160a01b0316600c84604051610d94919061283f565b908152604051908190036020019020546001600160a01b031614610df15760405162461bcd60e51b81526020600482015260146024820152734775696c6420616c72656164792065786973747360601b6044820152606401610b91565b604080516060810182528481526001600160a01b0384166020820152815160018082528184018452919283019181602001602082028036833750505090526001600160a01b0383165f908152600b6020526040902081518190610e549082612965565b506020828101516001830180546001600160a01b0319166001600160a01b0390921691909117905560408301518051610e93926002850192019061225e565b5050506001600160a01b0382165f908152600b602052604081206002018054849290610ec157610ec1612814565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600c84604051610efd919061283f565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f072208535a97b2e307167838c66aacd47f8de3a2cb92bc2ddb2b2b52009c9fd590610f5c90859085906125e3565b60405180910390a1505050565b5f610f72611e9a565b505f80516020612aae83398151915290565b5f80516020612a8e833981519152610f9b81611b8b565b335f908152600a602090815260408083208151608081018352888152808401889052918201869052606082018490528054600181018255908452919092208251600490920201908190610fee9082612965565b50602082015160018201906110039082612965565b50604082015160028201556060909101516003909101805460ff191691151591909117905550505050565b5f818152600d6020908152604080832081518154606094810282018501845292810183815290939192849284919084018282801561108957602002820191905f5260205f20905b815481526020019060010190808311611075575b5050505050815260200160018201548152505090505f815f015151116110e25760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642072656369706560901b6044820152606401610b91565b5f5b8151518110156111e3575f805b335f9081526009602052604090206008015481101561117c57835180518490811061111e5761111e612814565b602002602001015160095f336001600160a01b03166001600160a01b031681526020019081526020015f20600801828154811061115d5761115d612814565b905f5260205f20015403611174576001915061117c565b6001016110f1565b50806111da5760405162461bcd60e51b815260206004820152602760248201527f506c6179657220646f6573206e6f74206861766520616c6c207265717569726560448201526664206974656d7360c81b6064820152608401610b91565b506001016110e4565b505f5b815151811015611321575f5b335f9081526009602052604090206008015481101561131857825180518390811061121f5761121f612814565b602002602001015160095f336001600160a01b03166001600160a01b031681526020019081526020015f20600801828154811061125e5761125e612814565b905f5260205f2001540361131057335f908152600960205260409020600801805461128b90600190612a4f565b8154811061129b5761129b612814565b5f918252602080832090910154338352600990915260409091206008018054839081106112ca576112ca612814565b5f9182526020808320909101929092553381526009909152604090206008018054806112f8576112f8612a62565b600190038181905f5260205f20015f90559055611318565b6001016111f2565b506001016111e6565b50335f908152600960209081526040822092810151600890930180546001810182559083529120015550565b5f80516020612ace83398151915261136481611b8b565b610b3e611ee3565b5f9182525f80516020612aee833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b5f80516020612a8e8339815191526113b981611b8b565b50600380546001600160a01b0319166001600160a01b0392909216919091179055565b5f80516020612a8e8339815191526113f381611b8b565b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b600b6020525f90815260409020805481906114309061284a565b80601f016020809104026020016040519081016040528092919081815260200182805461145c9061284a565b80156114a75780601f1061147e576101008083540402835291602001916114a7565b820191905f5260205f20905b81548152906001019060200180831161148a57829003601f168201915b505050600190930154919250506001600160a01b031682565b5f80516020612a8e8339815191526114d781611b8b565b60408051808201825284815260208082018590526007545f908152600d825292909220815180519293919261150f9284920190612215565b50602091820151600190910155600754604080519182529181018490527f9becfd2b1fc8127387c5b0002a6cbc8382e6c8fb9f76dfd6cfd92cbe94383d0e910160405180910390a160078054905f61156683612a37565b9190505550505050565b5f80516020612a8e83398151915261158781611b8b565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b60086020525f9081526040902080546001820180549192916115cb9061284a565b80601f01602080910402602001604051908101604052809291908181526020018280546115f79061284a565b80156116425780601f1061161957610100808354040283529160200191611642565b820191905f5260205f20905b81548152906001019060200180831161162557829003601f168201915b5050505050908060020154908060030154908060040154908060050154905086565b600a602052815f5260405f20818154811061167d575f80fd5b905f5260205f2090600402015f9150915050805f01805461169d9061284a565b80601f01602080910402602001604051908101604052809291908181526020018280546116c99061284a565b80156117145780601f106116eb57610100808354040283529160200191611714565b820191905f5260205f20905b8154815290600101906020018083116116f757829003601f168201915b5050505050908060010180546117299061284a565b80601f01602080910402602001604051908101604052809291908181526020018280546117559061284a565b80156117a05780601f10611777576101008083540402835291602001916117a0565b820191905f5260205f20905b81548152906001019060200180831161178357829003601f168201915b50505050600283015460039093015491929160ff16905084565b6117c3826109b4565b6117cc81611b8b565b6109f08383611c36565b5f80516020612a8e8339815191526117ed81611b8b565b50600280546001600160a01b0319166001600160a01b0392909216919091179055565b5f600c82604051611821919061283f565b908152604051908190036020019020546001600160a01b03169050806118805760405162461bcd60e51b815260206004820152601460248201527311dd5a5b1908191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610b91565b6001600160a01b0381165f908152600b60205260408120905b600282015481101561193d57336001600160a01b03168260020182815481106118c4576118c4612814565b5f918252602090912001546001600160a01b0316036119355760405162461bcd60e51b815260206004820152602760248201527f53656e64657220697320616c72656164792061206d656d626572206f66207468604482015266194819dd5a5b1960ca1b6064820152608401610b91565b600101611899565b5060020180546001810182555f91825260209091200180546001600160a01b031916331790555050565b5f80516020612a8e83398151915261197e81611b8b565b50600480546001600160a01b0319166001600160a01b0392909216919091179055565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f811580156119e55750825b90505f826001600160401b03166001148015611a005750303b155b905081158015611a0e575080155b15611a2c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611a5657845460ff60401b1916600160401b1785555b611a5e611f2b565b611a66611f3b565b611a6e611f3b565b611a785f8f611b95565b50611a905f80516020612ace8339815191528e611b95565b50611abb7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38d611b95565b50611ad35f80516020612a8e8339815191528f611b95565b505f80546001600160a01b03199081166001600160a01b038e8116919091179092556001805482168d84161790556002805482168c84161790556003805482168b84161790556004805482168a8416179055600580549091169188169190911790558315611b7b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050505050565b610b3e8133611f43565b5f5f80516020612aee833981519152611bae848461136c565b611c2d575f848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055611be33390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061087a565b5f91505061087a565b5f5f80516020612aee833981519152611c4f848461136c565b15611c2d575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061087a565b611cb7611f7c565b5f80516020612b0e833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611d9457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611d885f80516020612aae833981519152546001600160a01b031690565b6001600160a01b031614155b15611db25760405163703e46dd60e11b815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36109b081611b8b565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611e38575060408051601f3d908101601f19168201909252611e3591810190612a76565b60015b611e6057604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610b91565b5f80516020612aae8339815191528114611e9057604051632a87526960e21b815260048101829052602401610b91565b610b1a8383611fab565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611db25760405163703e46dd60e11b815260040160405180910390fd5b611eeb612000565b5f80516020612b0e833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611cf0565b611f33612030565b611db2612079565b611db2612030565b611f4d828261136c565b6109b05760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610b91565b5f80516020612b0e8339815191525460ff16611db257604051638dfc202b60e01b815260040160405180910390fd5b611fb482612099565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611ff857610b1a82826120fc565b6109b061216e565b5f80516020612b0e8339815191525460ff1615611db25760405163d93c066560e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16611db257604051631afcd79f60e31b815260040160405180910390fd5b612081612030565b5f80516020612b0e833981519152805460ff19169055565b806001600160a01b03163b5f036120ce57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610b91565b5f80516020612aae83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051612118919061283f565b5f60405180830381855af49150503d805f8114612150576040519150601f19603f3d011682016040523d82523d5f602084013e612155565b606091505b509150915061216585838361218d565b95945050505050565b3415611db25760405163b398979f60e01b815260040160405180910390fd5b6060826121a25761219d826121ec565b6121e5565b81511580156121b957506001600160a01b0384163b155b156121e257604051639996b31560e01b81526001600160a01b0385166004820152602401610b91565b50805b9392505050565b8051156121fc5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b828054828255905f5260205f2090810192821561224e579160200282015b8281111561224e578251825591602001919060010190612233565b5061225a9291506122b1565b5090565b828054828255905f5260205f2090810192821561224e579160200282015b8281111561224e57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061227c565b5b8082111561225a575f81556001016122b2565b5f602082840312156122d5575f80fd5b81356001600160e01b0319811681146121e5575f80fd5b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b0381118282101715612328576123286122ec565b604052919050565b5f806001600160401b03841115612349576123496122ec565b50601f8301601f191660200161235e81612300565b915050828152838383011115612372575f80fd5b828260208301375f602084830101529392505050565b5f82601f830112612397575f80fd5b6121e583833560208501612330565b5f602082840312156123b6575f80fd5b81356001600160401b038111156123cb575f80fd5b6123d784828501612388565b949350505050565b5f602082840312156123ef575f80fd5b5035919050565b80356001600160a01b038116811461240c575f80fd5b919050565b5f8060408385031215612422575f80fd5b82359150612432602084016123f6565b90509250929050565b5f805f805f60a0868803121561244f575f80fd5b85356001600160401b03811115612464575f80fd5b61247088828901612388565b9860208801359850604088013597606081013597506080013595509350505050565b5f602082840312156124a2575f80fd5b6121e5826123f6565b5f80604083850312156124bc575f80fd5b6124c5836123f6565b915060208301356001600160401b038111156124df575f80fd5b8301601f810185136124ef575f80fd5b6124fe85823560208401612330565b9150509250929050565b5f8060408385031215612519575f80fd5b82356001600160401b0381111561252e575f80fd5b61253a85828601612388565b925050612432602084016123f6565b5f805f6060848603121561255b575f80fd5b83356001600160401b03811115612570575f80fd5b61257c86828701612388565b93505060208401356001600160401b03811115612597575f80fd5b6125a386828701612388565b93969395505050506040919091013590565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b604081525f6125f560408301856125b5565b905060018060a01b03831660208301529392505050565b5f806040838503121561261d575f80fd5b82356001600160401b03811115612632575f80fd5b8301601f81018513612642575f80fd5b80356001600160401b0381111561265b5761265b6122ec565b8060051b61266b60208201612300565b91825260208184018101929081019088841115612686575f80fd5b6020850194505b838510156126ac5784358083526020958601959093509091019061268d565b98602097909701359750505050505050565b602081525f6121e560208301846125b5565b86815260c060208201525f6126e860c08301886125b5565b90508560408301528460608301528360808301528260a0830152979650505050505050565b5f806040838503121561271e575f80fd5b612727836123f6565b946020939093013593505050565b608081525f61274760808301876125b5565b828103602084015261275981876125b5565b6040840195909552505090151560609091015292915050565b5f805f805f805f805f6101208a8c03121561278b575f80fd5b6127948a6123f6565b98506127a260208b016123f6565b97506127b060408b016123f6565b96506127be60608b016123f6565b95506127cc60808b016123f6565b94506127da60a08b016123f6565b93506127e860c08b016123f6565b92506127f660e08b016123f6565b91506128056101008b016123f6565b90509295985092959850929598565b634e487b7160e01b5f52603260045260245ffd5b5f81518060208401855e5f93019283525090919050565b5f6121e58284612828565b600181811c9082168061285e57607f821691505b60208210810361287c57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f80835461288f8161284a565b6001821680156128a657600181146128bb576128e8565b60ff19831686528115158202860193506128e8565b865f5260205f205f5b838110156128e0578154888201526001909101906020016128c4565b505081860193505b509195945050505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561087a5761087a6128f3565b601f821115610b1a57805f5260205f20601f840160051c8101602085101561293f5750805b601f840160051c820191505b8181101561295e575f815560010161294b565b5050505050565b81516001600160401b0381111561297e5761297e6122ec565b6129928161298c845461284a565b8461291a565b6020601f8211600181146129c4575f83156129ad5750848201515b5f19600385901b1c1916600184901b17845561295e565b5f84815260208120601f198516915b828110156129f357878501518255602094850194600190920191016129d3565b5084821015612a1057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b828152604060208201525f6123d760408301846125b5565b5f60018201612a4857612a486128f3565b5060010190565b8181038181111561087a5761087a6128f3565b634e487b7160e01b5f52603160045260245ffd5b5f60208284031215612a86575f80fd5b505191905056fe9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a264697066735822122017e50992d8e441c501e255dd0dd94ae0246f27bf1d9831d9196c551577a7a43e64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x2B63 PUSH2 0x43 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1D19 ADD MSTORE DUP2 DUP2 PUSH2 0x1D42 ADD MSTORE PUSH2 0x1EA5 ADD MSTORE PUSH2 0x2B63 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x249 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A13EEA7 GT PUSH2 0x134 JUMPI DUP1 PUSH4 0xBFB231D2 GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xE551BA4B GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xE551BA4B EQ PUSH2 0x77B JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x79A JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0x7BA JUMPI DUP1 PUSH4 0xF4E0D9AC EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xF5E95ACB EQ PUSH2 0x7F8 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x817 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xD3DCFF7C EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xD836FC6F EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x6E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA75859E1 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA75859E1 EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0xA9834B67 EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xB001F618 EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0xBE22D27D EQ PUSH2 0x626 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A13EEA7 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x965AFA89 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x9A03D9A3 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x56B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41BEC0D2 GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x5F2D6BCD EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x6F347A78 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x7309CBBD EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41BEC0D2 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x443C227C EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x4A7FFCBC EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x4FA4A1BB EQ PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x211 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x31FEE8BE EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x3FA9FCF8 EQ PUSH2 0x396 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x2EEC568 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x17435E1A EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x21F42268 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2F8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C5 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x23DF JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x9D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x243B JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0xB1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0xB41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xD0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x23DF JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x2508 JUMP JUMPDEST PUSH2 0xD63 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0xF69 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2549 JUMP JUMPDEST PUSH2 0xF84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x4D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x23DF JUMP JUMPDEST PUSH2 0x102E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x134D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x136C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x13A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x13DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x59D PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x5C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x260C JUMP JUMPDEST PUSH2 0x14C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x26BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x612 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x621 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1570 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x631 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x665 PUSH2 0x660 CALLDATASIZE PUSH1 0x4 PUSH2 0x23DF JUMP JUMPDEST PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x696 PUSH2 0x691 CALLDATASIZE PUSH1 0x4 PUSH2 0x270D JUMP JUMPDEST PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2735 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x6C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x17BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x6DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x17D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x740 PUSH2 0x6FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x795 CALLDATASIZE PUSH1 0x4 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x7F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1967 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x803 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x812 CALLDATASIZE PUSH1 0x4 PUSH2 0x2772 JUMP JUMPDEST PUSH2 0x19A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x822 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x87A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x9B0 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x8B8 JUMPI PUSH2 0x8B8 PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP2 PUSH2 0x8FD SWAP2 DUP5 SWAP2 ADD PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ DUP1 ISZERO PUSH2 0x925 JUMPI POP PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x963 SWAP1 DUP5 SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xBE21664565742A9F42CBB6D005F92DB59C7BCAD35B12EF5B57B79E75676B247A SWAP1 PUSH2 0x99A SWAP1 DUP7 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x882 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AEE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9DD DUP3 PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x9E6 DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 PUSH2 0x1B95 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA0D DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP11 DUP2 MSTORE DUP4 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP8 SWAP1 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xA64 SWAP1 DUP3 PUSH2 0x2965 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP PUSH32 0x78D68BA0E8C23B92E7C700D99EFED2719520CBD4AF845B2C03AE251F9CDF3D52 PUSH1 0x6 SLOAD DUP8 PUSH1 0x40 MLOAD PUSH2 0xAC3 SWAP3 SWAP2 SWAP1 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0xADA DUP4 PUSH2 0x2A37 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xB10 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1A DUP3 DUP3 PUSH2 0x1C36 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB36 DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0xB3E PUSH2 0x1CAF JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506C6179657220616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xBF5 JUMPI PUSH2 0xBF5 PUSH2 0x22EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC1E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC4E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xCC3 SWAP3 PUSH1 0x8 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x2215 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xCE0 SWAP2 PUSH1 0x9 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2215 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP2 POP PUSH32 0xB4CCA19A27CE42915C3CEE0CEE28FC5D90969EE49F09EC71659546A63B5F7BC0 SWAP1 PUSH0 SWAP1 LOG2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD26 DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD50 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0xD59 DUP3 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x9B0 DUP3 DUP3 PUSH2 0x1DDE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD7A DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP5 PUSH1 0x40 MLOAD PUSH2 0xD94 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4775696C6420616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP5 ADD DUP5 MSTORE SWAP2 SWAP3 DUP4 ADD SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0xE54 SWAP1 DUP3 PUSH2 0x2965 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xE93 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x225E JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xEC1 JUMPI PUSH2 0xEC1 PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xC DUP5 PUSH1 0x40 MLOAD PUSH2 0xEFD SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0x72208535A97B2E307167838C66AACD47F8DE3A2CB92BC2DDB2B2B52009C9FD5 SWAP1 PUSH2 0xF5C SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF72 PUSH2 0x1E9A JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xF9B DUP2 PUSH2 0x1B8B JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP9 DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 DUP3 MLOAD PUSH1 0x4 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SWAP1 PUSH2 0xFEE SWAP1 DUP3 PUSH2 0x2965 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x1003 SWAP1 DUP3 PUSH2 0x2965 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x60 SWAP5 DUP2 MUL DUP3 ADD DUP6 ADD DUP5 MSTORE SWAP3 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1089 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1075 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD MLOAD GT PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420726563697065 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x11E3 JUMPI PUSH0 DUP1 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD DUP2 LT ISZERO PUSH2 0x117C JUMPI DUP4 MLOAD DUP1 MLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x111E JUMPI PUSH2 0x111E PUSH2 0x2814 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x9 PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x115D JUMPI PUSH2 0x115D PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SUB PUSH2 0x1174 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x117C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10F1 JUMP JUMPDEST POP DUP1 PUSH2 0x11DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6179657220646F6573206E6F74206861766520616C6C2072657175697265 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x64206974656D73 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB91 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x10E4 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1321 JUMPI PUSH0 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1318 JUMPI DUP3 MLOAD DUP1 MLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x121F JUMPI PUSH2 0x121F PUSH2 0x2814 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x9 PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x125E JUMPI PUSH2 0x125E PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SUB PUSH2 0x1310 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x128B SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2A4F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x129B JUMPI PUSH2 0x129B PUSH2 0x2814 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD CALLER DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x12CA JUMPI PUSH2 0x12CA PUSH2 0x2814 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE CALLER DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH2 0x12F8 JUMPI PUSH2 0x12F8 PUSH2 0x2A62 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x11F2 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x11E6 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 DUP2 ADD MLOAD PUSH1 0x8 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD SSTORE POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1364 DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0xB3E PUSH2 0x1EE3 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AEE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x13B9 DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x13F3 DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x1430 SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x145C SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x147E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x148A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x14D7 DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x7 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x150F SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x2215 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x9BECFD2B1FC8127387C5B0002A6CBC8382E6C8FB9F76DFD6CFD92CBE94383D0E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x1566 DUP4 PUSH2 0x2A37 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1587 DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x15CB SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15F7 SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1642 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1619 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1642 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1625 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x167D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x169D SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16C9 SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1714 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16EB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1714 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1729 SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1755 SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1777 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1783 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x17C3 DUP3 PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x17CC DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 PUSH2 0x1C36 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x17ED DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0xC DUP3 PUSH1 0x40 MLOAD PUSH2 0x1821 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x1880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x11DD5A5B1908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x193D JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18C4 JUMPI PUSH2 0x18C4 PUSH2 0x2814 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220697320616C72656164792061206D656D626572206F66207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x194819DD5A5B19 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1899 JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x197E DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x19E5 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1A00 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1A0E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1A2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x1A56 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x1A5E PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x1A66 PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x1A6E PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x1A78 PUSH0 DUP16 PUSH2 0x1B95 JUMP JUMPDEST POP PUSH2 0x1A90 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP15 PUSH2 0x1B95 JUMP JUMPDEST POP PUSH2 0x1ABB PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP14 PUSH2 0x1B95 JUMP JUMPDEST POP PUSH2 0x1AD3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP16 PUSH2 0x1B95 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND DUP14 DUP5 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 AND DUP13 DUP5 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND DUP12 DUP5 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 AND DUP11 DUP5 AND OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x1B7B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB3E DUP2 CALLER PUSH2 0x1F43 JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AEE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1BAE DUP5 DUP5 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x1C2D JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1BE3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x87A JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x87A JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AEE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1C4F DUP5 DUP5 PUSH2 0x136C JUMP JUMPDEST ISZERO PUSH2 0x1C2D JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x87A JUMP JUMPDEST PUSH2 0x1CB7 PUSH2 0x1F7C JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1D94 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D88 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x9B0 DUP2 PUSH2 0x1B8B JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E38 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1E35 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E60 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1E90 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH2 0xB1A DUP4 DUP4 PUSH2 0x1FAB JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EEB PUSH2 0x2000 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x1F33 PUSH2 0x2030 JUMP JUMPDEST PUSH2 0x1DB2 PUSH2 0x2079 JUMP JUMPDEST PUSH2 0x1DB2 PUSH2 0x2030 JUMP JUMPDEST PUSH2 0x1F4D DUP3 DUP3 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FB4 DUP3 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1FF8 JUMPI PUSH2 0xB1A DUP3 DUP3 PUSH2 0x20FC JUMP JUMPDEST PUSH2 0x9B0 PUSH2 0x216E JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2081 PUSH2 0x2030 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x20CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2118 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2150 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2165 DUP6 DUP4 DUP4 PUSH2 0x218D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x21A2 JUMPI PUSH2 0x219D DUP3 PUSH2 0x21EC JUMP JUMPDEST PUSH2 0x21E5 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x21B9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x21E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB91 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x21FC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x224E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x224E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2233 JUMP JUMPDEST POP PUSH2 0x225A SWAP3 SWAP2 POP PUSH2 0x22B1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x224E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x224E JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x227C JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x225A JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x22B2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x21E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2328 JUMPI PUSH2 0x2328 PUSH2 0x22EC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT ISZERO PUSH2 0x2349 JUMPI PUSH2 0x2349 PUSH2 0x22EC JUMP JUMPDEST POP PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x235E DUP2 PUSH2 0x2300 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2372 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2397 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x21E5 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2330 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x23CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x23D7 DUP5 DUP3 DUP6 ADD PUSH2 0x2388 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x240C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2422 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2432 PUSH1 0x20 DUP5 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x244F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2464 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2470 DUP9 DUP3 DUP10 ADD PUSH2 0x2388 JUMP JUMPDEST SWAP9 PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x21E5 DUP3 PUSH2 0x23F6 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24BC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x24C5 DUP4 PUSH2 0x23F6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x24EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x24FE DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2330 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2519 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x252E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x253A DUP6 DUP3 DUP7 ADD PUSH2 0x2388 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2432 PUSH1 0x20 DUP5 ADD PUSH2 0x23F6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x255B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2570 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x257C DUP7 DUP3 DUP8 ADD PUSH2 0x2388 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2597 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x25A3 DUP7 DUP3 DUP8 ADD PUSH2 0x2388 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x25F5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x25B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x261D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2632 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2642 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x265B JUMPI PUSH2 0x265B PUSH2 0x22EC JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x266B PUSH1 0x20 DUP3 ADD PUSH2 0x2300 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x2686 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x26AC JUMPI DUP5 CALLDATALOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH2 0x268D JUMP JUMPDEST SWAP9 PUSH1 0x20 SWAP8 SWAP1 SWAP8 ADD CALLDATALOAD SWAP8 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x21E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x25B5 JUMP JUMPDEST DUP7 DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x26E8 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x25B5 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE DUP4 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x271E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2727 DUP4 PUSH2 0x23F6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0x2747 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x25B5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2759 DUP2 DUP8 PUSH2 0x25B5 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP SWAP1 ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x278B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2794 DUP11 PUSH2 0x23F6 JUMP JUMPDEST SWAP9 POP PUSH2 0x27A2 PUSH1 0x20 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP8 POP PUSH2 0x27B0 PUSH1 0x40 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP7 POP PUSH2 0x27BE PUSH1 0x60 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP6 POP PUSH2 0x27CC PUSH1 0x80 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP5 POP PUSH2 0x27DA PUSH1 0xA0 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x27E8 PUSH1 0xC0 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP3 POP PUSH2 0x27F6 PUSH1 0xE0 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2805 PUSH2 0x100 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21E5 DUP3 DUP5 PUSH2 0x2828 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x285E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x287C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SLOAD PUSH2 0x288F DUP2 PUSH2 0x284A JUMP JUMPDEST PUSH1 0x1 DUP3 AND DUP1 ISZERO PUSH2 0x28A6 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x28BB JUMPI PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x28E8 JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28E0 JUMPI DUP2 SLOAD DUP9 DUP3 ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x28C4 JUMP JUMPDEST POP POP DUP2 DUP7 ADD SWAP4 POP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x87A JUMPI PUSH2 0x87A PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB1A JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x293F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x295E JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x294B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x297E JUMPI PUSH2 0x297E PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x2992 DUP2 PUSH2 0x298C DUP5 SLOAD PUSH2 0x284A JUMP JUMPDEST DUP5 PUSH2 0x291A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x29C4 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x29AD JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x295E JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x29F3 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x29D3 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2A10 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x23D7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25B5 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2A48 JUMPI PUSH2 0x2A48 PUSH2 0x28F3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x87A JUMPI PUSH2 0x87A PUSH2 0x28F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A86 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID SWAP12 PUSH26 0x46ABD96DCCBE6CFC6CC2C13300AB429D93E16FA72DC459EECCDA PUSH20 0x817F08360894A13BA1A3210667C828492DB98DCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A264697066735822122017E50992D8E441C501E255DD0D 0xD9 BLOBBASEFEE 0xE0 0x24 PUSH16 0x27BF1D9831D9196C551577A7A43E6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "1186:7814:13:-:0;;;1171:4:2;1128:48;;2478:1:13;2452:27;;;;2485:29;;1186:7814;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GAME_ADMIN_ROLE_1908": {
									"entryPoint": null,
									"id": 1908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_1898": {
									"entryPoint": null,
									"id": 1898,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADER_ROLE_1903": {
									"entryPoint": null,
									"id": 1903,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_640": {
									"entryPoint": null,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__AccessControl_init_63": {
									"entryPoint": 7995,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_896": {
									"entryPoint": 7979,
									"id": 896,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_914": {
									"entryPoint": 8313,
									"id": 914,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_670": {
									"entryPoint": null,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2258": {
									"entryPoint": 7604,
									"id": 2258,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_538": {
									"entryPoint": 8240,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1455": {
									"entryPoint": 8558,
									"id": 1455,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_746": {
									"entryPoint": 7834,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_730": {
									"entryPoint": 7438,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_129": {
									"entryPoint": 7051,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_150": {
									"entryPoint": 8003,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPausableStorage_870": {
									"entryPoint": null,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_315": {
									"entryPoint": 7061,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isInitializing_606": {
									"entryPoint": null,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_826": {
									"entryPoint": null,
									"id": 826,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_995": {
									"entryPoint": 7907,
									"id": 995,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_958": {
									"entryPoint": 8192,
									"id": 958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_971": {
									"entryPoint": 8060,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1718": {
									"entryPoint": 8684,
									"id": 1718,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_361": {
									"entryPoint": 7222,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setImplementation_1241": {
									"entryPoint": 8345,
									"id": 1241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_1019": {
									"entryPoint": 7343,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_797": {
									"entryPoint": 7646,
									"id": 797,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addItem_2342": {
									"entryPoint": 2550,
									"id": 2342,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@addRecipe_2591": {
									"entryPoint": 5312,
									"id": 2591,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@completeQuest_2442": {
									"entryPoint": 2176,
									"id": 2442,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@craftItem_2759": {
									"entryPoint": 4142,
									"id": 2759,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createGuild_2499": {
									"entryPoint": 3427,
									"id": 2499,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@createPlayer_2304": {
									"entryPoint": 2881,
									"id": 2304,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@daoContract_1920": {
									"entryPoint": null,
									"id": 1920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc1155Token_1917": {
									"entryPoint": null,
									"id": 1917,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20Token_1911": {
									"entryPoint": null,
									"id": 1911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc721Token_1914": {
									"entryPoint": null,
									"id": 1914,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@farmingContract_1926": {
									"entryPoint": null,
									"id": 1926,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1638": {
									"entryPoint": 8444,
									"id": 1638,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1751": {
									"entryPoint": null,
									"id": 1751,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1214": {
									"entryPoint": null,
									"id": 1214,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_171": {
									"entryPoint": 2484,
									"id": 171,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_190": {
									"entryPoint": 2516,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@guilds_2012": {
									"entryPoint": 5142,
									"id": 2012,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hasRole_116": {
									"entryPoint": 4972,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_2138": {
									"entryPoint": 6561,
									"id": 2138,
									"parameterSlots": 9,
									"returnSlots": 0
								},
								"@items_1996": {
									"entryPoint": 5546,
									"id": 1996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@joinGuild_2562": {
									"entryPoint": 6160,
									"id": 2562,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@pause_2238": {
									"entryPoint": 4941,
									"id": 2238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_946": {
									"entryPoint": null,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@playerQuests_2007": {
									"entryPoint": 5732,
									"id": 2007,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@players_2001": {
									"entryPoint": null,
									"id": 2001,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proxiableUUID_688": {
									"entryPoint": 3945,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recipes_2021": {
									"entryPoint": null,
									"id": 2021,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_232": {
									"entryPoint": 2791,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_209": {
									"entryPoint": 6074,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDAOAddress_2198": {
									"entryPoint": 5026,
									"id": 2198,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setERC1155Address_2183": {
									"entryPoint": 6102,
									"id": 2183,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setERC20Address_2153": {
									"entryPoint": 3343,
									"id": 2153,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setERC721Address_2168": {
									"entryPoint": 5084,
									"id": 2168,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFarmingAddress_2228": {
									"entryPoint": 5488,
									"id": 2228,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStakingAddress_2213": {
									"entryPoint": 6503,
									"id": 2213,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingContract_1923": {
									"entryPoint": null,
									"id": 1923,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startQuest_2368": {
									"entryPoint": 3972,
									"id": 2368,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_91": {
									"entryPoint": 2122,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unpause_2248": {
									"entryPoint": 2847,
									"id": 2248,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1275": {
									"entryPoint": 8107,
									"id": 1275,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_708": {
									"entryPoint": 3400,
									"id": 708,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1678": {
									"entryPoint": 8589,
									"id": 1678,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 9206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 9008,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 9096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address": {
									"entryPoint": 10098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 9
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 9387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256": {
									"entryPoint": 9740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 9183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 10870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 9126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address": {
									"entryPoint": 9480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 9545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 9275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 10280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 9653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDAO_$1882__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC1155_$1881__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1857__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$1867__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IFarming_$1884__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IStaking_$1883__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 9699,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 10037,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60488ddff5208baf36b3dd08007032a8dda5e33f922203c6a10ac3af154485c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6549b2fa5584e8c8ec502931a0b58219efc997d0668f171ad9fa4547ef7827c7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c02f3e50ed6b54b03eba0a4b156b8b2c122f79039273c822fbda9326f1dec609__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df115ebb113eb795e874836f8b2917a4781efe582dc2481c741971644f30822e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ffd94407a19cf8baf61f33fd1e368fd23471d93aa28c06b7e15811441edc47e5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10783,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9936,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 10522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 10314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10483,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20464:14",
										"nodeType": "YulBlock",
										"src": "0:20464:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:14",
													"nodeType": "YulBlock",
													"src": "83:217:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:14",
																"nodeType": "YulBlock",
																"src": "129:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:14",
																					"nodeType": "YulLiteral",
																					"src": "138:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:14",
																					"nodeType": "YulLiteral",
																					"src": "141:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:14"
																			},
																			"nativeSrc": "131:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:14"
																		},
																		"nativeSrc": "131:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:14"
																		},
																		"nativeSrc": "100:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:14",
																		"nodeType": "YulLiteral",
																		"src": "125:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:14"
																},
																"nativeSrc": "96:32:14",
																"nodeType": "YulFunctionCall",
																"src": "96:32:14"
															},
															"nativeSrc": "93:52:14",
															"nodeType": "YulIf",
															"src": "93:52:14"
														},
														{
															"nativeSrc": "154:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:14"
																},
																"nativeSrc": "167:23:14",
																"nodeType": "YulFunctionCall",
																"src": "167:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:14",
																	"nodeType": "YulTypedName",
																	"src": "158:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:14",
																"nodeType": "YulBlock",
																"src": "254:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:14",
																					"nodeType": "YulLiteral",
																					"src": "263:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:14",
																					"nodeType": "YulLiteral",
																					"src": "266:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:14"
																			},
																			"nativeSrc": "256:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:14"
																		},
																		"nativeSrc": "256:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:14",
																								"nodeType": "YulLiteral",
																								"src": "234:3:14",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:14",
																								"nodeType": "YulLiteral",
																								"src": "239:10:14",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:14"
																						},
																						"nativeSrc": "230:20:14",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:14"
																				},
																				"nativeSrc": "219:32:14",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:14"
																		},
																		"nativeSrc": "209:43:14",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:14"
																},
																"nativeSrc": "202:51:14",
																"nodeType": "YulFunctionCall",
																"src": "202:51:14"
															},
															"nativeSrc": "199:71:14",
															"nodeType": "YulIf",
															"src": "199:71:14"
														},
														{
															"nativeSrc": "279:15:14",
															"nodeType": "YulAssignment",
															"src": "279:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:14",
																"nodeType": "YulIdentifier",
																"src": "289:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:14",
														"nodeType": "YulTypedName",
														"src": "49:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:14",
														"nodeType": "YulTypedName",
														"src": "60:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:14",
														"nodeType": "YulTypedName",
														"src": "72:6:14",
														"type": ""
													}
												],
												"src": "14:286:14"
											},
											{
												"body": {
													"nativeSrc": "400:92:14",
													"nodeType": "YulBlock",
													"src": "400:92:14",
													"statements": [
														{
															"nativeSrc": "410:26:14",
															"nodeType": "YulAssignment",
															"src": "410:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:14",
																		"nodeType": "YulLiteral",
																		"src": "433:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:14"
																},
																"nativeSrc": "418:18:14",
																"nodeType": "YulFunctionCall",
																"src": "418:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:14"
																				},
																				"nativeSrc": "470:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:14"
																		},
																		"nativeSrc": "463:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:14"
																},
																"nativeSrc": "445:41:14",
																"nodeType": "YulFunctionCall",
																"src": "445:41:14"
															},
															"nativeSrc": "445:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:14",
														"nodeType": "YulTypedName",
														"src": "369:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:14",
														"nodeType": "YulTypedName",
														"src": "380:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:14",
														"nodeType": "YulTypedName",
														"src": "391:4:14",
														"type": ""
													}
												],
												"src": "305:187:14"
											},
											{
												"body": {
													"nativeSrc": "615:102:14",
													"nodeType": "YulBlock",
													"src": "615:102:14",
													"statements": [
														{
															"nativeSrc": "625:26:14",
															"nodeType": "YulAssignment",
															"src": "625:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "637:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "637:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "648:2:14",
																		"nodeType": "YulLiteral",
																		"src": "648:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "633:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "633:3:14"
																},
																"nativeSrc": "633:18:14",
																"nodeType": "YulFunctionCall",
																"src": "633:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "625:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "625:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "667:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "667:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "682:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "682:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "698:3:14",
																								"nodeType": "YulLiteral",
																								"src": "698:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "703:1:14",
																								"nodeType": "YulLiteral",
																								"src": "703:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "694:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "694:3:14"
																						},
																						"nativeSrc": "694:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "694:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "707:1:14",
																						"nodeType": "YulLiteral",
																						"src": "707:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "690:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "690:3:14"
																				},
																				"nativeSrc": "690:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "690:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "678:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "678:3:14"
																		},
																		"nativeSrc": "678:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "678:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "660:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "660:6:14"
																},
																"nativeSrc": "660:51:14",
																"nodeType": "YulFunctionCall",
																"src": "660:51:14"
															},
															"nativeSrc": "660:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "660:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IFarming_$1884__to_t_address__fromStack_reversed",
												"nativeSrc": "497:220:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "584:9:14",
														"nodeType": "YulTypedName",
														"src": "584:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "595:6:14",
														"nodeType": "YulTypedName",
														"src": "595:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "606:4:14",
														"nodeType": "YulTypedName",
														"src": "606:4:14",
														"type": ""
													}
												],
												"src": "497:220:14"
											},
											{
												"body": {
													"nativeSrc": "754:95:14",
													"nodeType": "YulBlock",
													"src": "754:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "771:1:14",
																		"nodeType": "YulLiteral",
																		"src": "771:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "778:3:14",
																				"nodeType": "YulLiteral",
																				"src": "778:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "783:10:14",
																				"nodeType": "YulLiteral",
																				"src": "783:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "774:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "774:3:14"
																		},
																		"nativeSrc": "774:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "774:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "764:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:14"
																},
																"nativeSrc": "764:31:14",
																"nodeType": "YulFunctionCall",
																"src": "764:31:14"
															},
															"nativeSrc": "764:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "764:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "811:1:14",
																		"nodeType": "YulLiteral",
																		"src": "811:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "814:4:14",
																		"nodeType": "YulLiteral",
																		"src": "814:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "804:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "804:6:14"
																},
																"nativeSrc": "804:15:14",
																"nodeType": "YulFunctionCall",
																"src": "804:15:14"
															},
															"nativeSrc": "804:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "804:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "835:1:14",
																		"nodeType": "YulLiteral",
																		"src": "835:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "838:4:14",
																		"nodeType": "YulLiteral",
																		"src": "838:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "828:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "828:6:14"
																},
																"nativeSrc": "828:15:14",
																"nodeType": "YulFunctionCall",
																"src": "828:15:14"
															},
															"nativeSrc": "828:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "828:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "722:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "722:127:14"
											},
											{
												"body": {
													"nativeSrc": "899:230:14",
													"nodeType": "YulBlock",
													"src": "899:230:14",
													"statements": [
														{
															"nativeSrc": "909:19:14",
															"nodeType": "YulAssignment",
															"src": "909:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "925:2:14",
																		"nodeType": "YulLiteral",
																		"src": "925:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "919:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "919:5:14"
																},
																"nativeSrc": "919:9:14",
																"nodeType": "YulFunctionCall",
																"src": "919:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "909:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:14"
																}
															]
														},
														{
															"nativeSrc": "937:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "937:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "959:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "959:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "975:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "975:4:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "981:2:14",
																						"nodeType": "YulLiteral",
																						"src": "981:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "971:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "971:3:14"
																				},
																				"nativeSrc": "971:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "971:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "990:2:14",
																						"nodeType": "YulLiteral",
																						"src": "990:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "986:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "986:3:14"
																				},
																				"nativeSrc": "986:7:14",
																				"nodeType": "YulFunctionCall",
																				"src": "986:7:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "967:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "967:3:14"
																		},
																		"nativeSrc": "967:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "967:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "955:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "955:3:14"
																},
																"nativeSrc": "955:40:14",
																"nodeType": "YulFunctionCall",
																"src": "955:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "941:10:14",
																	"nodeType": "YulTypedName",
																	"src": "941:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1070:22:14",
																"nodeType": "YulBlock",
																"src": "1070:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1072:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1072:16:14"
																			},
																			"nativeSrc": "1072:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1072:18:14"
																		},
																		"nativeSrc": "1072:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1072:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1013:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1013:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1025:18:14",
																				"nodeType": "YulLiteral",
																				"src": "1025:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1010:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1010:2:14"
																		},
																		"nativeSrc": "1010:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1010:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1049:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1049:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1061:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1061:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1046:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1046:2:14"
																		},
																		"nativeSrc": "1046:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1046:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1007:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1007:2:14"
																},
																"nativeSrc": "1007:62:14",
																"nodeType": "YulFunctionCall",
																"src": "1007:62:14"
															},
															"nativeSrc": "1004:88:14",
															"nodeType": "YulIf",
															"src": "1004:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1108:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1108:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1112:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "1112:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1101:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1101:6:14"
																},
																"nativeSrc": "1101:22:14",
																"nodeType": "YulFunctionCall",
																"src": "1101:22:14"
															},
															"nativeSrc": "1101:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "1101:22:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "854:275:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "879:4:14",
														"nodeType": "YulTypedName",
														"src": "879:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "888:6:14",
														"nodeType": "YulTypedName",
														"src": "888:6:14",
														"type": ""
													}
												],
												"src": "854:275:14"
											},
											{
												"body": {
													"nativeSrc": "1209:375:14",
													"nodeType": "YulBlock",
													"src": "1209:375:14",
													"statements": [
														{
															"nativeSrc": "1219:13:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1219:13:14",
															"value": {
																"kind": "number",
																"nativeSrc": "1231:1:14",
																"nodeType": "YulLiteral",
																"src": "1231:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "size",
																	"nativeSrc": "1223:4:14",
																	"nodeType": "YulTypedName",
																	"src": "1223:4:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1275:22:14",
																"nodeType": "YulBlock",
																"src": "1275:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1277:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1277:16:14"
																			},
																			"nativeSrc": "1277:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1277:18:14"
																		},
																		"nativeSrc": "1277:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1277:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1247:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1247:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1255:18:14",
																		"nodeType": "YulLiteral",
																		"src": "1255:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1244:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1244:2:14"
																},
																"nativeSrc": "1244:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1244:30:14"
															},
															"nativeSrc": "1241:56:14",
															"nodeType": "YulIf",
															"src": "1241:56:14"
														},
														{
															"nativeSrc": "1306:48:14",
															"nodeType": "YulAssignment",
															"src": "1306:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1326:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1326:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1334:2:14",
																						"nodeType": "YulLiteral",
																						"src": "1334:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:14"
																				},
																				"nativeSrc": "1322:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:15:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1343:2:14",
																						"nodeType": "YulLiteral",
																						"src": "1343:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1339:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1339:3:14"
																				},
																				"nativeSrc": "1339:7:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1339:7:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1318:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:14"
																		},
																		"nativeSrc": "1318:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:29:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1349:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1349:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1314:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1314:3:14"
																},
																"nativeSrc": "1314:40:14",
																"nodeType": "YulFunctionCall",
																"src": "1314:40:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1306:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1306:4:14"
																}
															]
														},
														{
															"nativeSrc": "1363:30:14",
															"nodeType": "YulAssignment",
															"src": "1363:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1388:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1388:4:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1372:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "1372:15:14"
																},
																"nativeSrc": "1372:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1372:21:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1363:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1363:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1409:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1409:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1416:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1416:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1402:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1402:6:14"
																},
																"nativeSrc": "1402:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1402:21:14"
															},
															"nativeSrc": "1402:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "1402:21:14"
														},
														{
															"body": {
																"nativeSrc": "1461:16:14",
																"nodeType": "YulBlock",
																"src": "1461:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1470:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1470:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1463:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1463:6:14"
																			},
																			"nativeSrc": "1463:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1463:12:14"
																		},
																		"nativeSrc": "1463:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1463:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "1442:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1442:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1447:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1447:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1438:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1438:3:14"
																		},
																		"nativeSrc": "1438:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1438:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1456:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1456:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1435:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1435:2:14"
																},
																"nativeSrc": "1435:25:14",
																"nodeType": "YulFunctionCall",
																"src": "1435:25:14"
															},
															"nativeSrc": "1432:45:14",
															"nodeType": "YulIf",
															"src": "1432:45:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "1503:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1503:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1510:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1510:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1499:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:14"
																		},
																		"nativeSrc": "1499:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:16:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1517:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1517:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1522:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1522:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1486:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1486:12:14"
																},
																"nativeSrc": "1486:43:14",
																"nodeType": "YulFunctionCall",
																"src": "1486:43:14"
															},
															"nativeSrc": "1486:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "1486:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nativeSrc": "1553:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1553:5:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1560:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1560:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1549:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1549:3:14"
																				},
																				"nativeSrc": "1549:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1549:18:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1569:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1569:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1545:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1545:3:14"
																		},
																		"nativeSrc": "1545:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1545:29:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1576:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1576:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1538:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1538:6:14"
																},
																"nativeSrc": "1538:40:14",
																"nodeType": "YulFunctionCall",
																"src": "1538:40:14"
															},
															"nativeSrc": "1538:40:14",
															"nodeType": "YulExpressionStatement",
															"src": "1538:40:14"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nativeSrc": "1134:450:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1178:3:14",
														"nodeType": "YulTypedName",
														"src": "1178:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1183:6:14",
														"nodeType": "YulTypedName",
														"src": "1183:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1191:3:14",
														"nodeType": "YulTypedName",
														"src": "1191:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1199:5:14",
														"nodeType": "YulTypedName",
														"src": "1199:5:14",
														"type": ""
													}
												],
												"src": "1134:450:14"
											},
											{
												"body": {
													"nativeSrc": "1642:169:14",
													"nodeType": "YulBlock",
													"src": "1642:169:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1691:16:14",
																"nodeType": "YulBlock",
																"src": "1691:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1700:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1700:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1703:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1703:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1693:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1693:6:14"
																			},
																			"nativeSrc": "1693:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1693:12:14"
																		},
																		"nativeSrc": "1693:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1693:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1670:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1670:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1678:4:14",
																						"nodeType": "YulLiteral",
																						"src": "1678:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1666:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1666:3:14"
																				},
																				"nativeSrc": "1666:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1666:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1685:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1685:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1662:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1662:3:14"
																		},
																		"nativeSrc": "1662:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1662:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1655:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1655:6:14"
																},
																"nativeSrc": "1655:35:14",
																"nodeType": "YulFunctionCall",
																"src": "1655:35:14"
															},
															"nativeSrc": "1652:55:14",
															"nodeType": "YulIf",
															"src": "1652:55:14"
														},
														{
															"nativeSrc": "1716:89:14",
															"nodeType": "YulAssignment",
															"src": "1716:89:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1764:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1764:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1772:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1772:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1760:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:14"
																		},
																		"nativeSrc": "1760:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1760:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1792:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1779:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "1779:12:14"
																		},
																		"nativeSrc": "1779:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1779:20:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1801:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1801:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "1725:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "1725:34:14"
																},
																"nativeSrc": "1725:80:14",
																"nodeType": "YulFunctionCall",
																"src": "1725:80:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1716:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1716:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "1589:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1616:6:14",
														"nodeType": "YulTypedName",
														"src": "1616:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1624:3:14",
														"nodeType": "YulTypedName",
														"src": "1624:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1632:5:14",
														"nodeType": "YulTypedName",
														"src": "1632:5:14",
														"type": ""
													}
												],
												"src": "1589:222:14"
											},
											{
												"body": {
													"nativeSrc": "1896:242:14",
													"nodeType": "YulBlock",
													"src": "1896:242:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1942:16:14",
																"nodeType": "YulBlock",
																"src": "1942:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1951:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1951:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1954:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1954:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1944:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1944:6:14"
																			},
																			"nativeSrc": "1944:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1944:12:14"
																		},
																		"nativeSrc": "1944:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1944:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1917:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1917:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1926:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1913:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1913:3:14"
																		},
																		"nativeSrc": "1913:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1913:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1938:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1938:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1909:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1909:3:14"
																},
																"nativeSrc": "1909:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1909:32:14"
															},
															"nativeSrc": "1906:52:14",
															"nodeType": "YulIf",
															"src": "1906:52:14"
														},
														{
															"nativeSrc": "1967:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1967:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1994:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1994:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1981:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1981:12:14"
																},
																"nativeSrc": "1981:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1981:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1971:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1971:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2047:16:14",
																"nodeType": "YulBlock",
																"src": "2047:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2056:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2059:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2049:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:14"
																			},
																			"nativeSrc": "2049:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:14"
																		},
																		"nativeSrc": "2049:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2019:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2019:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:18:14",
																		"nodeType": "YulLiteral",
																		"src": "2027:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2016:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2016:2:14"
																},
																"nativeSrc": "2016:30:14",
																"nodeType": "YulFunctionCall",
																"src": "2016:30:14"
															},
															"nativeSrc": "2013:50:14",
															"nodeType": "YulIf",
															"src": "2013:50:14"
														},
														{
															"nativeSrc": "2072:60:14",
															"nodeType": "YulAssignment",
															"src": "2072:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2104:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2104:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2115:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2115:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2100:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2100:3:14"
																		},
																		"nativeSrc": "2100:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2100:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2124:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "2124:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "2082:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "2082:17:14"
																},
																"nativeSrc": "2082:50:14",
																"nodeType": "YulFunctionCall",
																"src": "2082:50:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2072:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "1816:322:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1862:9:14",
														"nodeType": "YulTypedName",
														"src": "1862:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1873:7:14",
														"nodeType": "YulTypedName",
														"src": "1873:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1885:6:14",
														"nodeType": "YulTypedName",
														"src": "1885:6:14",
														"type": ""
													}
												],
												"src": "1816:322:14"
											},
											{
												"body": {
													"nativeSrc": "2261:102:14",
													"nodeType": "YulBlock",
													"src": "2261:102:14",
													"statements": [
														{
															"nativeSrc": "2271:26:14",
															"nodeType": "YulAssignment",
															"src": "2271:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2283:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2283:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2294:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2294:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2279:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2279:3:14"
																},
																"nativeSrc": "2279:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2279:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2271:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2271:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2313:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2313:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2328:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2328:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2344:3:14",
																								"nodeType": "YulLiteral",
																								"src": "2344:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2349:1:14",
																								"nodeType": "YulLiteral",
																								"src": "2349:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2340:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "2340:3:14"
																						},
																						"nativeSrc": "2340:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2340:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2353:1:14",
																						"nodeType": "YulLiteral",
																						"src": "2353:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2336:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2336:3:14"
																				},
																				"nativeSrc": "2336:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2336:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2324:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2324:3:14"
																		},
																		"nativeSrc": "2324:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2324:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2306:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2306:6:14"
																},
																"nativeSrc": "2306:51:14",
																"nodeType": "YulFunctionCall",
																"src": "2306:51:14"
															},
															"nativeSrc": "2306:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "2306:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC1155_$1881__to_t_address__fromStack_reversed",
												"nativeSrc": "2143:220:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2230:9:14",
														"nodeType": "YulTypedName",
														"src": "2230:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2241:6:14",
														"nodeType": "YulTypedName",
														"src": "2241:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2252:4:14",
														"nodeType": "YulTypedName",
														"src": "2252:4:14",
														"type": ""
													}
												],
												"src": "2143:220:14"
											},
											{
												"body": {
													"nativeSrc": "2438:156:14",
													"nodeType": "YulBlock",
													"src": "2438:156:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2484:16:14",
																"nodeType": "YulBlock",
																"src": "2484:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2493:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2493:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2496:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2496:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2486:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2486:6:14"
																			},
																			"nativeSrc": "2486:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2486:12:14"
																		},
																		"nativeSrc": "2486:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2486:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2459:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2459:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2468:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2468:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2455:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2455:3:14"
																		},
																		"nativeSrc": "2455:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2455:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2480:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2480:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2451:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:14"
																},
																"nativeSrc": "2451:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2451:32:14"
															},
															"nativeSrc": "2448:52:14",
															"nodeType": "YulIf",
															"src": "2448:52:14"
														},
														{
															"nativeSrc": "2509:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2509:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "2522:1:14",
																"nodeType": "YulLiteral",
																"src": "2522:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2513:5:14",
																	"nodeType": "YulTypedName",
																	"src": "2513:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2532:32:14",
															"nodeType": "YulAssignment",
															"src": "2532:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2554:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2554:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2541:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2541:12:14"
																},
																"nativeSrc": "2541:23:14",
																"nodeType": "YulFunctionCall",
																"src": "2541:23:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2532:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2532:5:14"
																}
															]
														},
														{
															"nativeSrc": "2573:15:14",
															"nodeType": "YulAssignment",
															"src": "2573:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "2583:5:14",
																"nodeType": "YulIdentifier",
																"src": "2583:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2573:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2573:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2368:226:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2404:9:14",
														"nodeType": "YulTypedName",
														"src": "2404:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2415:7:14",
														"nodeType": "YulTypedName",
														"src": "2415:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2427:6:14",
														"nodeType": "YulTypedName",
														"src": "2427:6:14",
														"type": ""
													}
												],
												"src": "2368:226:14"
											},
											{
												"body": {
													"nativeSrc": "2700:76:14",
													"nodeType": "YulBlock",
													"src": "2700:76:14",
													"statements": [
														{
															"nativeSrc": "2710:26:14",
															"nodeType": "YulAssignment",
															"src": "2710:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2722:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2722:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2733:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2733:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2718:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2718:3:14"
																},
																"nativeSrc": "2718:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2718:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2710:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2710:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2752:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2752:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2763:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2763:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2745:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2745:6:14"
																},
																"nativeSrc": "2745:25:14",
																"nodeType": "YulFunctionCall",
																"src": "2745:25:14"
															},
															"nativeSrc": "2745:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "2745:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2599:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2669:9:14",
														"nodeType": "YulTypedName",
														"src": "2669:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2680:6:14",
														"nodeType": "YulTypedName",
														"src": "2680:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2691:4:14",
														"nodeType": "YulTypedName",
														"src": "2691:4:14",
														"type": ""
													}
												],
												"src": "2599:177:14"
											},
											{
												"body": {
													"nativeSrc": "2830:124:14",
													"nodeType": "YulBlock",
													"src": "2830:124:14",
													"statements": [
														{
															"nativeSrc": "2840:29:14",
															"nodeType": "YulAssignment",
															"src": "2840:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2862:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2862:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2849:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2849:12:14"
																},
																"nativeSrc": "2849:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2849:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2840:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2840:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2932:16:14",
																"nodeType": "YulBlock",
																"src": "2932:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2941:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2941:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2944:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2944:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2934:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2934:6:14"
																			},
																			"nativeSrc": "2934:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2934:12:14"
																		},
																		"nativeSrc": "2934:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2934:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2891:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2891:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2902:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2902:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2917:3:14",
																										"nodeType": "YulLiteral",
																										"src": "2917:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2922:1:14",
																										"nodeType": "YulLiteral",
																										"src": "2922:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2913:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "2913:3:14"
																								},
																								"nativeSrc": "2913:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2913:11:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2926:1:14",
																								"nodeType": "YulLiteral",
																								"src": "2926:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2909:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "2909:3:14"
																						},
																						"nativeSrc": "2909:19:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2909:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2898:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2898:3:14"
																				},
																				"nativeSrc": "2898:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2898:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2888:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2888:2:14"
																		},
																		"nativeSrc": "2888:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2888:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2881:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2881:6:14"
																},
																"nativeSrc": "2881:50:14",
																"nodeType": "YulFunctionCall",
																"src": "2881:50:14"
															},
															"nativeSrc": "2878:70:14",
															"nodeType": "YulIf",
															"src": "2878:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "2781:173:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2809:6:14",
														"nodeType": "YulTypedName",
														"src": "2809:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2820:5:14",
														"nodeType": "YulTypedName",
														"src": "2820:5:14",
														"type": ""
													}
												],
												"src": "2781:173:14"
											},
											{
												"body": {
													"nativeSrc": "3046:213:14",
													"nodeType": "YulBlock",
													"src": "3046:213:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3092:16:14",
																"nodeType": "YulBlock",
																"src": "3092:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3101:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3101:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3104:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3104:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3094:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3094:6:14"
																			},
																			"nativeSrc": "3094:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3094:12:14"
																		},
																		"nativeSrc": "3094:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3094:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3067:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3067:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3076:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3076:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3063:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3063:3:14"
																		},
																		"nativeSrc": "3063:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3063:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3088:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3088:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3059:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:14"
																},
																"nativeSrc": "3059:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3059:32:14"
															},
															"nativeSrc": "3056:52:14",
															"nodeType": "YulIf",
															"src": "3056:52:14"
														},
														{
															"nativeSrc": "3117:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3117:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3130:1:14",
																"nodeType": "YulLiteral",
																"src": "3130:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3121:5:14",
																	"nodeType": "YulTypedName",
																	"src": "3121:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3140:32:14",
															"nodeType": "YulAssignment",
															"src": "3140:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3162:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3162:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3149:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3149:12:14"
																},
																"nativeSrc": "3149:23:14",
																"nodeType": "YulFunctionCall",
																"src": "3149:23:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3140:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3140:5:14"
																}
															]
														},
														{
															"nativeSrc": "3181:15:14",
															"nodeType": "YulAssignment",
															"src": "3181:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "3191:5:14",
																"nodeType": "YulIdentifier",
																"src": "3191:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3181:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3181:6:14"
																}
															]
														},
														{
															"nativeSrc": "3205:48:14",
															"nodeType": "YulAssignment",
															"src": "3205:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3238:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3238:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3249:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3249:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3234:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3234:3:14"
																		},
																		"nativeSrc": "3234:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3215:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3215:18:14"
																},
																"nativeSrc": "3215:38:14",
																"nodeType": "YulFunctionCall",
																"src": "3215:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3205:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2959:300:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3004:9:14",
														"nodeType": "YulTypedName",
														"src": "3004:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3015:7:14",
														"nodeType": "YulTypedName",
														"src": "3015:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3027:6:14",
														"nodeType": "YulTypedName",
														"src": "3027:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3035:6:14",
														"nodeType": "YulTypedName",
														"src": "3035:6:14",
														"type": ""
													}
												],
												"src": "2959:300:14"
											},
											{
												"body": {
													"nativeSrc": "3412:650:14",
													"nodeType": "YulBlock",
													"src": "3412:650:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3459:16:14",
																"nodeType": "YulBlock",
																"src": "3459:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3468:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3468:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3471:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3471:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3461:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3461:6:14"
																			},
																			"nativeSrc": "3461:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3461:12:14"
																		},
																		"nativeSrc": "3461:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3461:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3433:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3433:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3442:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3442:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3429:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:14"
																		},
																		"nativeSrc": "3429:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3429:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3454:3:14",
																		"nodeType": "YulLiteral",
																		"src": "3454:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3425:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3425:3:14"
																},
																"nativeSrc": "3425:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3425:33:14"
															},
															"nativeSrc": "3422:53:14",
															"nodeType": "YulIf",
															"src": "3422:53:14"
														},
														{
															"nativeSrc": "3484:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3484:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3511:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3511:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3498:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3498:12:14"
																},
																"nativeSrc": "3498:23:14",
																"nodeType": "YulFunctionCall",
																"src": "3498:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3488:6:14",
																	"nodeType": "YulTypedName",
																	"src": "3488:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3564:16:14",
																"nodeType": "YulBlock",
																"src": "3564:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3573:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3573:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3576:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3576:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3566:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3566:6:14"
																			},
																			"nativeSrc": "3566:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3566:12:14"
																		},
																		"nativeSrc": "3566:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3566:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3536:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3536:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3544:18:14",
																		"nodeType": "YulLiteral",
																		"src": "3544:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3533:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3533:2:14"
																},
																"nativeSrc": "3533:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3533:30:14"
															},
															"nativeSrc": "3530:50:14",
															"nodeType": "YulIf",
															"src": "3530:50:14"
														},
														{
															"nativeSrc": "3589:60:14",
															"nodeType": "YulAssignment",
															"src": "3589:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3621:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3621:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3632:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3632:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3617:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3617:3:14"
																		},
																		"nativeSrc": "3617:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3617:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3641:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "3641:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3599:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3599:17:14"
																},
																"nativeSrc": "3599:50:14",
																"nodeType": "YulFunctionCall",
																"src": "3599:50:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3589:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:14"
																}
															]
														},
														{
															"nativeSrc": "3658:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3658:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3671:1:14",
																"nodeType": "YulLiteral",
																"src": "3671:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3662:5:14",
																	"nodeType": "YulTypedName",
																	"src": "3662:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3681:41:14",
															"nodeType": "YulAssignment",
															"src": "3681:41:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3707:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3707:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3718:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3718:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3703:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3703:3:14"
																		},
																		"nativeSrc": "3703:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3703:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3690:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3690:12:14"
																},
																"nativeSrc": "3690:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3690:32:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3681:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3681:5:14"
																}
															]
														},
														{
															"nativeSrc": "3731:15:14",
															"nodeType": "YulAssignment",
															"src": "3731:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "3741:5:14",
																"nodeType": "YulIdentifier",
																"src": "3741:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3731:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3731:6:14"
																}
															]
														},
														{
															"nativeSrc": "3755:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3755:16:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3770:1:14",
																"nodeType": "YulLiteral",
																"src": "3770:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3759:7:14",
																	"nodeType": "YulTypedName",
																	"src": "3759:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3780:43:14",
															"nodeType": "YulAssignment",
															"src": "3780:43:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3808:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3808:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3819:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3819:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3804:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3804:3:14"
																		},
																		"nativeSrc": "3804:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3804:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3791:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3791:12:14"
																},
																"nativeSrc": "3791:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3791:32:14"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3780:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3780:7:14"
																}
															]
														},
														{
															"nativeSrc": "3832:17:14",
															"nodeType": "YulAssignment",
															"src": "3832:17:14",
															"value": {
																"name": "value_1",
																"nativeSrc": "3842:7:14",
																"nodeType": "YulIdentifier",
																"src": "3842:7:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3832:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3832:6:14"
																}
															]
														},
														{
															"nativeSrc": "3858:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3858:16:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3873:1:14",
																"nodeType": "YulLiteral",
																"src": "3873:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3862:7:14",
																	"nodeType": "YulTypedName",
																	"src": "3862:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3883:43:14",
															"nodeType": "YulAssignment",
															"src": "3883:43:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3911:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3911:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3922:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3922:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3907:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:14"
																		},
																		"nativeSrc": "3907:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3907:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3894:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3894:12:14"
																},
																"nativeSrc": "3894:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3894:32:14"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "3883:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3883:7:14"
																}
															]
														},
														{
															"nativeSrc": "3935:17:14",
															"nodeType": "YulAssignment",
															"src": "3935:17:14",
															"value": {
																"name": "value_2",
																"nativeSrc": "3945:7:14",
																"nodeType": "YulIdentifier",
																"src": "3945:7:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3935:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3935:6:14"
																}
															]
														},
														{
															"nativeSrc": "3961:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3961:16:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3976:1:14",
																"nodeType": "YulLiteral",
																"src": "3976:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3965:7:14",
																	"nodeType": "YulTypedName",
																	"src": "3965:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3986:44:14",
															"nodeType": "YulAssignment",
															"src": "3986:44:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4014:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4014:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4025:3:14",
																				"nodeType": "YulLiteral",
																				"src": "4025:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4010:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4010:3:14"
																		},
																		"nativeSrc": "4010:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4010:19:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3997:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3997:12:14"
																},
																"nativeSrc": "3997:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3997:33:14"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "3986:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3986:7:14"
																}
															]
														},
														{
															"nativeSrc": "4039:17:14",
															"nodeType": "YulAssignment",
															"src": "4039:17:14",
															"value": {
																"name": "value_3",
																"nativeSrc": "4049:7:14",
																"nodeType": "YulIdentifier",
																"src": "4049:7:14"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4039:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4039:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "3264:798:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3346:9:14",
														"nodeType": "YulTypedName",
														"src": "3346:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3357:7:14",
														"nodeType": "YulTypedName",
														"src": "3357:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3369:6:14",
														"nodeType": "YulTypedName",
														"src": "3369:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3377:6:14",
														"nodeType": "YulTypedName",
														"src": "3377:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3385:6:14",
														"nodeType": "YulTypedName",
														"src": "3385:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3393:6:14",
														"nodeType": "YulTypedName",
														"src": "3393:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3401:6:14",
														"nodeType": "YulTypedName",
														"src": "3401:6:14",
														"type": ""
													}
												],
												"src": "3264:798:14"
											},
											{
												"body": {
													"nativeSrc": "4137:116:14",
													"nodeType": "YulBlock",
													"src": "4137:116:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4183:16:14",
																"nodeType": "YulBlock",
																"src": "4183:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4192:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4192:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4195:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4195:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4185:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4185:6:14"
																			},
																			"nativeSrc": "4185:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4185:12:14"
																		},
																		"nativeSrc": "4185:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4185:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4158:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4158:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4167:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4167:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4154:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:14"
																		},
																		"nativeSrc": "4154:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4154:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4179:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4179:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4150:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4150:3:14"
																},
																"nativeSrc": "4150:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4150:32:14"
															},
															"nativeSrc": "4147:52:14",
															"nodeType": "YulIf",
															"src": "4147:52:14"
														},
														{
															"nativeSrc": "4208:39:14",
															"nodeType": "YulAssignment",
															"src": "4208:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4237:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4237:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4218:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4218:18:14"
																},
																"nativeSrc": "4218:29:14",
																"nodeType": "YulFunctionCall",
																"src": "4218:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4208:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4067:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4103:9:14",
														"nodeType": "YulTypedName",
														"src": "4103:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4114:7:14",
														"nodeType": "YulTypedName",
														"src": "4114:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4126:6:14",
														"nodeType": "YulTypedName",
														"src": "4126:6:14",
														"type": ""
													}
												],
												"src": "4067:186:14"
											},
											{
												"body": {
													"nativeSrc": "4328:156:14",
													"nodeType": "YulBlock",
													"src": "4328:156:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4374:16:14",
																"nodeType": "YulBlock",
																"src": "4374:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4383:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4383:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4386:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4386:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4376:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4376:6:14"
																			},
																			"nativeSrc": "4376:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4376:12:14"
																		},
																		"nativeSrc": "4376:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4376:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4349:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4349:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4358:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4358:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4345:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4345:3:14"
																		},
																		"nativeSrc": "4345:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4345:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4370:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4370:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4341:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4341:3:14"
																},
																"nativeSrc": "4341:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4341:32:14"
															},
															"nativeSrc": "4338:52:14",
															"nodeType": "YulIf",
															"src": "4338:52:14"
														},
														{
															"nativeSrc": "4399:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4399:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "4412:1:14",
																"nodeType": "YulLiteral",
																"src": "4412:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4403:5:14",
																	"nodeType": "YulTypedName",
																	"src": "4403:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4422:32:14",
															"nodeType": "YulAssignment",
															"src": "4422:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4444:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4444:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4431:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4431:12:14"
																},
																"nativeSrc": "4431:23:14",
																"nodeType": "YulFunctionCall",
																"src": "4431:23:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4422:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4422:5:14"
																}
															]
														},
														{
															"nativeSrc": "4463:15:14",
															"nodeType": "YulAssignment",
															"src": "4463:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "4473:5:14",
																"nodeType": "YulIdentifier",
																"src": "4473:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4463:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4463:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4258:226:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4294:9:14",
														"nodeType": "YulTypedName",
														"src": "4294:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4305:7:14",
														"nodeType": "YulTypedName",
														"src": "4305:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4317:6:14",
														"nodeType": "YulTypedName",
														"src": "4317:6:14",
														"type": ""
													}
												],
												"src": "4258:226:14"
											},
											{
												"body": {
													"nativeSrc": "4590:76:14",
													"nodeType": "YulBlock",
													"src": "4590:76:14",
													"statements": [
														{
															"nativeSrc": "4600:26:14",
															"nodeType": "YulAssignment",
															"src": "4600:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4612:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4612:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4623:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4623:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4608:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4608:3:14"
																},
																"nativeSrc": "4608:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4608:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4600:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4600:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4653:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4653:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4635:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4635:6:14"
																},
																"nativeSrc": "4635:25:14",
																"nodeType": "YulFunctionCall",
																"src": "4635:25:14"
															},
															"nativeSrc": "4635:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "4635:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4489:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4559:9:14",
														"nodeType": "YulTypedName",
														"src": "4559:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4570:6:14",
														"nodeType": "YulTypedName",
														"src": "4570:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4581:4:14",
														"nodeType": "YulTypedName",
														"src": "4581:4:14",
														"type": ""
													}
												],
												"src": "4489:177:14"
											},
											{
												"body": {
													"nativeSrc": "4785:102:14",
													"nodeType": "YulBlock",
													"src": "4785:102:14",
													"statements": [
														{
															"nativeSrc": "4795:26:14",
															"nodeType": "YulAssignment",
															"src": "4795:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4807:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4807:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4818:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4818:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4803:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4803:3:14"
																},
																"nativeSrc": "4803:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4803:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4795:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4795:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4837:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4837:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4852:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4852:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4868:3:14",
																								"nodeType": "YulLiteral",
																								"src": "4868:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4873:1:14",
																								"nodeType": "YulLiteral",
																								"src": "4873:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4864:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "4864:3:14"
																						},
																						"nativeSrc": "4864:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "4864:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4877:1:14",
																						"nodeType": "YulLiteral",
																						"src": "4877:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4860:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4860:3:14"
																				},
																				"nativeSrc": "4860:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4860:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4848:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4848:3:14"
																		},
																		"nativeSrc": "4848:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4848:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4830:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4830:6:14"
																},
																"nativeSrc": "4830:51:14",
																"nodeType": "YulFunctionCall",
																"src": "4830:51:14"
															},
															"nativeSrc": "4830:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "4830:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDAO_$1882__to_t_address__fromStack_reversed",
												"nativeSrc": "4671:216:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4754:9:14",
														"nodeType": "YulTypedName",
														"src": "4754:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4765:6:14",
														"nodeType": "YulTypedName",
														"src": "4765:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4776:4:14",
														"nodeType": "YulTypedName",
														"src": "4776:4:14",
														"type": ""
													}
												],
												"src": "4671:216:14"
											},
											{
												"body": {
													"nativeSrc": "4988:428:14",
													"nodeType": "YulBlock",
													"src": "4988:428:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5034:16:14",
																"nodeType": "YulBlock",
																"src": "5034:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5043:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5043:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5046:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5046:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5036:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5036:6:14"
																			},
																			"nativeSrc": "5036:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5036:12:14"
																		},
																		"nativeSrc": "5036:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5036:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5009:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5009:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5018:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5018:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5005:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:14"
																		},
																		"nativeSrc": "5005:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5030:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5030:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5001:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5001:3:14"
																},
																"nativeSrc": "5001:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5001:32:14"
															},
															"nativeSrc": "4998:52:14",
															"nodeType": "YulIf",
															"src": "4998:52:14"
														},
														{
															"nativeSrc": "5059:39:14",
															"nodeType": "YulAssignment",
															"src": "5059:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5088:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5088:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5069:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5069:18:14"
																},
																"nativeSrc": "5069:29:14",
																"nodeType": "YulFunctionCall",
																"src": "5069:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5059:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5059:6:14"
																}
															]
														},
														{
															"nativeSrc": "5107:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5107:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5138:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5138:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5149:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5149:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5134:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5134:3:14"
																		},
																		"nativeSrc": "5134:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5134:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5121:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5121:12:14"
																},
																"nativeSrc": "5121:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5121:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5111:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5111:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5196:16:14",
																"nodeType": "YulBlock",
																"src": "5196:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5205:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5205:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5208:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5208:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5198:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5198:6:14"
																			},
																			"nativeSrc": "5198:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5198:12:14"
																		},
																		"nativeSrc": "5198:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5198:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5168:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5168:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5176:18:14",
																		"nodeType": "YulLiteral",
																		"src": "5176:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5165:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5165:2:14"
																},
																"nativeSrc": "5165:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5165:30:14"
															},
															"nativeSrc": "5162:50:14",
															"nodeType": "YulIf",
															"src": "5162:50:14"
														},
														{
															"nativeSrc": "5221:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5221:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5235:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5235:9:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5246:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5246:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5231:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5231:3:14"
																},
																"nativeSrc": "5231:22:14",
																"nodeType": "YulFunctionCall",
																"src": "5231:22:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5225:2:14",
																	"nodeType": "YulTypedName",
																	"src": "5225:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5301:16:14",
																"nodeType": "YulBlock",
																"src": "5301:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5310:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5310:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5313:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5313:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5303:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5303:6:14"
																			},
																			"nativeSrc": "5303:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5303:12:14"
																		},
																		"nativeSrc": "5303:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5303:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "5280:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "5280:2:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5284:4:14",
																						"nodeType": "YulLiteral",
																						"src": "5284:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5276:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5276:3:14"
																				},
																				"nativeSrc": "5276:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5276:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5291:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5291:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5272:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5272:3:14"
																		},
																		"nativeSrc": "5272:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5272:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5265:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:14"
																},
																"nativeSrc": "5265:35:14",
																"nodeType": "YulFunctionCall",
																"src": "5265:35:14"
															},
															"nativeSrc": "5262:55:14",
															"nodeType": "YulIf",
															"src": "5262:55:14"
														},
														{
															"nativeSrc": "5326:84:14",
															"nodeType": "YulAssignment",
															"src": "5326:84:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5375:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "5375:2:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5379:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5379:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5371:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:14"
																		},
																		"nativeSrc": "5371:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5371:11:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5397:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "5397:2:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5384:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "5384:12:14"
																		},
																		"nativeSrc": "5384:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5384:16:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5402:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "5402:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "5336:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "5336:34:14"
																},
																"nativeSrc": "5336:74:14",
																"nodeType": "YulFunctionCall",
																"src": "5336:74:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5326:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5326:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "4892:524:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4946:9:14",
														"nodeType": "YulTypedName",
														"src": "4946:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4957:7:14",
														"nodeType": "YulTypedName",
														"src": "4957:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4969:6:14",
														"nodeType": "YulTypedName",
														"src": "4969:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4977:6:14",
														"nodeType": "YulTypedName",
														"src": "4977:6:14",
														"type": ""
													}
												],
												"src": "4892:524:14"
											},
											{
												"body": {
													"nativeSrc": "5518:299:14",
													"nodeType": "YulBlock",
													"src": "5518:299:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5564:16:14",
																"nodeType": "YulBlock",
																"src": "5564:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5573:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5573:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5576:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5576:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5566:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5566:6:14"
																			},
																			"nativeSrc": "5566:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5566:12:14"
																		},
																		"nativeSrc": "5566:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5566:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5539:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5539:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5548:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5548:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5535:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5535:3:14"
																		},
																		"nativeSrc": "5535:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5535:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5560:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5560:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5531:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5531:3:14"
																},
																"nativeSrc": "5531:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5531:32:14"
															},
															"nativeSrc": "5528:52:14",
															"nodeType": "YulIf",
															"src": "5528:52:14"
														},
														{
															"nativeSrc": "5589:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5589:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5616:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5616:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5603:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5603:12:14"
																},
																"nativeSrc": "5603:23:14",
																"nodeType": "YulFunctionCall",
																"src": "5603:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5593:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5593:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5669:16:14",
																"nodeType": "YulBlock",
																"src": "5669:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5678:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5678:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5681:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5681:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5671:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5671:6:14"
																			},
																			"nativeSrc": "5671:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5671:12:14"
																		},
																		"nativeSrc": "5671:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5641:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5641:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5649:18:14",
																		"nodeType": "YulLiteral",
																		"src": "5649:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5638:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5638:2:14"
																},
																"nativeSrc": "5638:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5638:30:14"
															},
															"nativeSrc": "5635:50:14",
															"nodeType": "YulIf",
															"src": "5635:50:14"
														},
														{
															"nativeSrc": "5694:60:14",
															"nodeType": "YulAssignment",
															"src": "5694:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5726:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5726:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5737:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5737:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5722:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5722:3:14"
																		},
																		"nativeSrc": "5722:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5722:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5746:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "5746:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "5704:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "5704:17:14"
																},
																"nativeSrc": "5704:50:14",
																"nodeType": "YulFunctionCall",
																"src": "5704:50:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5694:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5694:6:14"
																}
															]
														},
														{
															"nativeSrc": "5763:48:14",
															"nodeType": "YulAssignment",
															"src": "5763:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5796:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5796:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5807:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5807:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5792:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5792:3:14"
																		},
																		"nativeSrc": "5792:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5792:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5773:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5773:18:14"
																},
																"nativeSrc": "5773:38:14",
																"nodeType": "YulFunctionCall",
																"src": "5773:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5763:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5763:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address",
												"nativeSrc": "5421:396:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5476:9:14",
														"nodeType": "YulTypedName",
														"src": "5476:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5487:7:14",
														"nodeType": "YulTypedName",
														"src": "5487:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5499:6:14",
														"nodeType": "YulTypedName",
														"src": "5499:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5507:6:14",
														"nodeType": "YulTypedName",
														"src": "5507:6:14",
														"type": ""
													}
												],
												"src": "5421:396:14"
											},
											{
												"body": {
													"nativeSrc": "5939:102:14",
													"nodeType": "YulBlock",
													"src": "5939:102:14",
													"statements": [
														{
															"nativeSrc": "5949:26:14",
															"nodeType": "YulAssignment",
															"src": "5949:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5961:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5961:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5972:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5972:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5957:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5957:3:14"
																},
																"nativeSrc": "5957:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5957:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5949:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5949:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5991:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5991:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6006:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6022:3:14",
																								"nodeType": "YulLiteral",
																								"src": "6022:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6027:1:14",
																								"nodeType": "YulLiteral",
																								"src": "6027:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6018:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6018:3:14"
																						},
																						"nativeSrc": "6018:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "6018:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6031:1:14",
																						"nodeType": "YulLiteral",
																						"src": "6031:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6014:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6014:3:14"
																				},
																				"nativeSrc": "6014:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6014:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6002:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6002:3:14"
																		},
																		"nativeSrc": "6002:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6002:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5984:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5984:6:14"
																},
																"nativeSrc": "5984:51:14",
																"nodeType": "YulFunctionCall",
																"src": "5984:51:14"
															},
															"nativeSrc": "5984:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "5984:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$1867__to_t_address__fromStack_reversed",
												"nativeSrc": "5822:219:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5908:9:14",
														"nodeType": "YulTypedName",
														"src": "5908:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5919:6:14",
														"nodeType": "YulTypedName",
														"src": "5919:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5930:4:14",
														"nodeType": "YulTypedName",
														"src": "5930:4:14",
														"type": ""
													}
												],
												"src": "5822:219:14"
											},
											{
												"body": {
													"nativeSrc": "6170:528:14",
													"nodeType": "YulBlock",
													"src": "6170:528:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6216:16:14",
																"nodeType": "YulBlock",
																"src": "6216:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6225:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6225:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6228:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6228:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6218:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6218:6:14"
																			},
																			"nativeSrc": "6218:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6218:12:14"
																		},
																		"nativeSrc": "6218:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6218:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6191:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6191:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6200:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6200:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6187:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6187:3:14"
																		},
																		"nativeSrc": "6187:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6187:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6212:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6212:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6183:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:14"
																},
																"nativeSrc": "6183:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6183:32:14"
															},
															"nativeSrc": "6180:52:14",
															"nodeType": "YulIf",
															"src": "6180:52:14"
														},
														{
															"nativeSrc": "6241:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6241:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6268:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6268:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6255:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "6255:12:14"
																},
																"nativeSrc": "6255:23:14",
																"nodeType": "YulFunctionCall",
																"src": "6255:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6245:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6245:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6321:16:14",
																"nodeType": "YulBlock",
																"src": "6321:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6330:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6330:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6333:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6333:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6323:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6323:6:14"
																			},
																			"nativeSrc": "6323:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6323:12:14"
																		},
																		"nativeSrc": "6323:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6323:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6293:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6293:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6301:18:14",
																		"nodeType": "YulLiteral",
																		"src": "6301:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6290:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6290:2:14"
																},
																"nativeSrc": "6290:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6290:30:14"
															},
															"nativeSrc": "6287:50:14",
															"nodeType": "YulIf",
															"src": "6287:50:14"
														},
														{
															"nativeSrc": "6346:60:14",
															"nodeType": "YulAssignment",
															"src": "6346:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6378:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6378:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6389:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6374:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6374:3:14"
																		},
																		"nativeSrc": "6374:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6374:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6398:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "6398:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "6356:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "6356:17:14"
																},
																"nativeSrc": "6356:50:14",
																"nodeType": "YulFunctionCall",
																"src": "6356:50:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6346:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6346:6:14"
																}
															]
														},
														{
															"nativeSrc": "6415:48:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6415:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6448:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6448:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6459:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6459:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6444:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6444:3:14"
																		},
																		"nativeSrc": "6444:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6444:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6431:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "6431:12:14"
																},
																"nativeSrc": "6431:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6431:32:14"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "6419:8:14",
																	"nodeType": "YulTypedName",
																	"src": "6419:8:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6508:16:14",
																"nodeType": "YulBlock",
																"src": "6508:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6517:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6517:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6520:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6520:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6510:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6510:6:14"
																			},
																			"nativeSrc": "6510:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6510:12:14"
																		},
																		"nativeSrc": "6510:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6510:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "6478:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "6478:8:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6488:18:14",
																		"nodeType": "YulLiteral",
																		"src": "6488:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6475:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6475:2:14"
																},
																"nativeSrc": "6475:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6475:32:14"
															},
															"nativeSrc": "6472:52:14",
															"nodeType": "YulIf",
															"src": "6472:52:14"
														},
														{
															"nativeSrc": "6533:62:14",
															"nodeType": "YulAssignment",
															"src": "6533:62:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6565:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6565:9:14"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "6576:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "6576:8:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6561:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6561:3:14"
																		},
																		"nativeSrc": "6561:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6561:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6587:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "6587:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "6543:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "6543:17:14"
																},
																"nativeSrc": "6543:52:14",
																"nodeType": "YulFunctionCall",
																"src": "6543:52:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6533:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6533:6:14"
																}
															]
														},
														{
															"nativeSrc": "6604:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6604:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "6617:1:14",
																"nodeType": "YulLiteral",
																"src": "6617:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6608:5:14",
																	"nodeType": "YulTypedName",
																	"src": "6608:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6627:41:14",
															"nodeType": "YulAssignment",
															"src": "6627:41:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6653:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6653:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6664:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6664:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6649:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6649:3:14"
																		},
																		"nativeSrc": "6649:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6649:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6636:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "6636:12:14"
																},
																"nativeSrc": "6636:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6636:32:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6627:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6627:5:14"
																}
															]
														},
														{
															"nativeSrc": "6677:15:14",
															"nodeType": "YulAssignment",
															"src": "6677:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "6687:5:14",
																"nodeType": "YulIdentifier",
																"src": "6687:5:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6677:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6677:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
												"nativeSrc": "6046:652:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6120:9:14",
														"nodeType": "YulTypedName",
														"src": "6120:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6131:7:14",
														"nodeType": "YulTypedName",
														"src": "6131:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6143:6:14",
														"nodeType": "YulTypedName",
														"src": "6143:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6151:6:14",
														"nodeType": "YulTypedName",
														"src": "6151:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6159:6:14",
														"nodeType": "YulTypedName",
														"src": "6159:6:14",
														"type": ""
													}
												],
												"src": "6046:652:14"
											},
											{
												"body": {
													"nativeSrc": "6819:102:14",
													"nodeType": "YulBlock",
													"src": "6819:102:14",
													"statements": [
														{
															"nativeSrc": "6829:26:14",
															"nodeType": "YulAssignment",
															"src": "6829:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6841:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6841:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6852:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6852:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6837:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6837:3:14"
																},
																"nativeSrc": "6837:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6837:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6829:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6829:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6871:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6871:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6886:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6886:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6902:3:14",
																								"nodeType": "YulLiteral",
																								"src": "6902:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6907:1:14",
																								"nodeType": "YulLiteral",
																								"src": "6907:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6898:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6898:3:14"
																						},
																						"nativeSrc": "6898:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "6898:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6911:1:14",
																						"nodeType": "YulLiteral",
																						"src": "6911:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6894:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6894:3:14"
																				},
																				"nativeSrc": "6894:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6894:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6882:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6882:3:14"
																		},
																		"nativeSrc": "6882:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6882:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6864:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6864:6:14"
																},
																"nativeSrc": "6864:51:14",
																"nodeType": "YulFunctionCall",
																"src": "6864:51:14"
															},
															"nativeSrc": "6864:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "6864:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1857__to_t_address__fromStack_reversed",
												"nativeSrc": "6703:218:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6788:9:14",
														"nodeType": "YulTypedName",
														"src": "6788:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6799:6:14",
														"nodeType": "YulTypedName",
														"src": "6799:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6810:4:14",
														"nodeType": "YulTypedName",
														"src": "6810:4:14",
														"type": ""
													}
												],
												"src": "6703:218:14"
											},
											{
												"body": {
													"nativeSrc": "6987:239:14",
													"nodeType": "YulBlock",
													"src": "6987:239:14",
													"statements": [
														{
															"nativeSrc": "6997:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6997:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7017:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7017:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7011:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7011:5:14"
																},
																"nativeSrc": "7011:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7011:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7001:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7001:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7039:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7039:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7044:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7044:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7032:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:14"
																},
																"nativeSrc": "7032:19:14",
																"nodeType": "YulFunctionCall",
																"src": "7032:19:14"
															},
															"nativeSrc": "7032:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "7032:19:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7070:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7070:3:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7075:4:14",
																				"nodeType": "YulLiteral",
																				"src": "7075:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7066:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7066:3:14"
																		},
																		"nativeSrc": "7066:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7066:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7086:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7086:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7093:4:14",
																				"nodeType": "YulLiteral",
																				"src": "7093:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7082:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7082:3:14"
																		},
																		"nativeSrc": "7082:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7082:16:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7100:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7100:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7060:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7060:5:14"
																},
																"nativeSrc": "7060:47:14",
																"nodeType": "YulFunctionCall",
																"src": "7060:47:14"
															},
															"nativeSrc": "7060:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "7060:47:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7131:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "7131:3:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "7136:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7136:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7127:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7127:3:14"
																				},
																				"nativeSrc": "7127:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7127:16:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7145:4:14",
																				"nodeType": "YulLiteral",
																				"src": "7145:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7123:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7123:3:14"
																		},
																		"nativeSrc": "7123:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7123:27:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7152:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7152:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7116:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7116:6:14"
																},
																"nativeSrc": "7116:38:14",
																"nodeType": "YulFunctionCall",
																"src": "7116:38:14"
															},
															"nativeSrc": "7116:38:14",
															"nodeType": "YulExpressionStatement",
															"src": "7116:38:14"
														},
														{
															"nativeSrc": "7163:57:14",
															"nodeType": "YulAssignment",
															"src": "7163:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7178:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7178:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "7191:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "7191:6:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7199:2:14",
																								"nodeType": "YulLiteral",
																								"src": "7199:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "7187:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7187:3:14"
																						},
																						"nativeSrc": "7187:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7187:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7208:2:14",
																								"nodeType": "YulLiteral",
																								"src": "7208:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "7204:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7204:3:14"
																						},
																						"nativeSrc": "7204:7:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7204:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "7183:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7183:3:14"
																				},
																				"nativeSrc": "7183:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7183:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7174:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7174:3:14"
																		},
																		"nativeSrc": "7174:39:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7174:39:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7215:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7215:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7170:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7170:3:14"
																},
																"nativeSrc": "7170:50:14",
																"nodeType": "YulFunctionCall",
																"src": "7170:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7163:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7163:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "6926:300:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6964:5:14",
														"nodeType": "YulTypedName",
														"src": "6964:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6971:3:14",
														"nodeType": "YulTypedName",
														"src": "6971:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6979:3:14",
														"nodeType": "YulTypedName",
														"src": "6979:3:14",
														"type": ""
													}
												],
												"src": "6926:300:14"
											},
											{
												"body": {
													"nativeSrc": "7380:179:14",
													"nodeType": "YulBlock",
													"src": "7380:179:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7397:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7397:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7408:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7408:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7390:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:14"
																},
																"nativeSrc": "7390:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7390:21:14"
															},
															"nativeSrc": "7390:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7390:21:14"
														},
														{
															"nativeSrc": "7420:64:14",
															"nodeType": "YulAssignment",
															"src": "7420:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7457:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7457:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7469:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7469:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7480:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7480:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7465:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7465:3:14"
																		},
																		"nativeSrc": "7465:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7465:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "7428:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "7428:28:14"
																},
																"nativeSrc": "7428:56:14",
																"nodeType": "YulFunctionCall",
																"src": "7428:56:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7420:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7420:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7504:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7504:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7515:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7515:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7500:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7500:3:14"
																		},
																		"nativeSrc": "7500:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7500:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7524:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7524:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7540:3:14",
																								"nodeType": "YulLiteral",
																								"src": "7540:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7545:1:14",
																								"nodeType": "YulLiteral",
																								"src": "7545:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7536:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7536:3:14"
																						},
																						"nativeSrc": "7536:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7536:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7549:1:14",
																						"nodeType": "YulLiteral",
																						"src": "7549:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7532:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7532:3:14"
																				},
																				"nativeSrc": "7532:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7532:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7520:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7520:3:14"
																		},
																		"nativeSrc": "7520:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7520:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7493:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7493:6:14"
																},
																"nativeSrc": "7493:60:14",
																"nodeType": "YulFunctionCall",
																"src": "7493:60:14"
															},
															"nativeSrc": "7493:60:14",
															"nodeType": "YulExpressionStatement",
															"src": "7493:60:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "7231:328:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7341:9:14",
														"nodeType": "YulTypedName",
														"src": "7341:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7352:6:14",
														"nodeType": "YulTypedName",
														"src": "7352:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7360:6:14",
														"nodeType": "YulTypedName",
														"src": "7360:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7371:4:14",
														"nodeType": "YulTypedName",
														"src": "7371:4:14",
														"type": ""
													}
												],
												"src": "7231:328:14"
											},
											{
												"body": {
													"nativeSrc": "7676:1012:14",
													"nodeType": "YulBlock",
													"src": "7676:1012:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7722:16:14",
																"nodeType": "YulBlock",
																"src": "7722:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7731:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7731:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7734:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7734:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7724:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7724:6:14"
																			},
																			"nativeSrc": "7724:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7724:12:14"
																		},
																		"nativeSrc": "7724:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7724:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7697:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7697:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7706:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7706:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7693:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7693:3:14"
																		},
																		"nativeSrc": "7693:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7693:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7718:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7718:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7689:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7689:3:14"
																},
																"nativeSrc": "7689:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7689:32:14"
															},
															"nativeSrc": "7686:52:14",
															"nodeType": "YulIf",
															"src": "7686:52:14"
														},
														{
															"nativeSrc": "7747:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7747:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7774:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7774:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7761:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7761:12:14"
																},
																"nativeSrc": "7761:23:14",
																"nodeType": "YulFunctionCall",
																"src": "7761:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "7751:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7751:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7827:16:14",
																"nodeType": "YulBlock",
																"src": "7827:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7836:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7836:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7839:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7839:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7829:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7829:6:14"
																			},
																			"nativeSrc": "7829:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7829:12:14"
																		},
																		"nativeSrc": "7829:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7829:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7799:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7799:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7807:18:14",
																		"nodeType": "YulLiteral",
																		"src": "7807:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7796:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7796:2:14"
																},
																"nativeSrc": "7796:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7796:30:14"
															},
															"nativeSrc": "7793:50:14",
															"nodeType": "YulIf",
															"src": "7793:50:14"
														},
														{
															"nativeSrc": "7852:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7852:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7866:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7866:9:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7877:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7877:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7862:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7862:3:14"
																},
																"nativeSrc": "7862:22:14",
																"nodeType": "YulFunctionCall",
																"src": "7862:22:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7856:2:14",
																	"nodeType": "YulTypedName",
																	"src": "7856:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7932:16:14",
																"nodeType": "YulBlock",
																"src": "7932:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7941:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7941:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7944:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7944:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7934:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7934:6:14"
																			},
																			"nativeSrc": "7934:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7934:12:14"
																		},
																		"nativeSrc": "7934:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7934:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "7911:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "7911:2:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7915:4:14",
																						"nodeType": "YulLiteral",
																						"src": "7915:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7907:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7907:3:14"
																				},
																				"nativeSrc": "7907:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7907:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7922:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7922:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7903:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:14"
																		},
																		"nativeSrc": "7903:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7903:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7896:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:14"
																},
																"nativeSrc": "7896:35:14",
																"nodeType": "YulFunctionCall",
																"src": "7896:35:14"
															},
															"nativeSrc": "7893:55:14",
															"nodeType": "YulIf",
															"src": "7893:55:14"
														},
														{
															"nativeSrc": "7957:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7957:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "7984:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "7984:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7971:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7971:12:14"
																},
																"nativeSrc": "7971:16:14",
																"nodeType": "YulFunctionCall",
																"src": "7971:16:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7961:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7961:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8030:22:14",
																"nodeType": "YulBlock",
																"src": "8030:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8032:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8032:16:14"
																			},
																			"nativeSrc": "8032:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8032:18:14"
																		},
																		"nativeSrc": "8032:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8032:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8002:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8002:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:18:14",
																		"nodeType": "YulLiteral",
																		"src": "8010:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7999:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7999:2:14"
																},
																"nativeSrc": "7999:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7999:30:14"
															},
															"nativeSrc": "7996:56:14",
															"nodeType": "YulIf",
															"src": "7996:56:14"
														},
														{
															"nativeSrc": "8061:24:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8061:24:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8075:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8075:1:14",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8078:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8078:6:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "8071:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8071:3:14"
																},
																"nativeSrc": "8071:14:14",
																"nodeType": "YulFunctionCall",
																"src": "8071:14:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "8065:2:14",
																	"nodeType": "YulTypedName",
																	"src": "8065:2:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8094:41:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8094:41:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "8125:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "8125:2:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8129:4:14",
																				"nodeType": "YulLiteral",
																				"src": "8129:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8121:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8121:3:14"
																		},
																		"nativeSrc": "8121:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8121:13:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8105:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "8105:15:14"
																},
																"nativeSrc": "8105:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8105:30:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8098:3:14",
																	"nodeType": "YulTypedName",
																	"src": "8098:3:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8144:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8144:16:14",
															"value": {
																"name": "dst",
																"nativeSrc": "8157:3:14",
																"nodeType": "YulIdentifier",
																"src": "8157:3:14"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "8148:5:14",
																	"nodeType": "YulTypedName",
																	"src": "8148:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8176:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8176:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8181:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8181:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8169:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:14"
																},
																"nativeSrc": "8169:19:14",
																"nodeType": "YulFunctionCall",
																"src": "8169:19:14"
															},
															"nativeSrc": "8169:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "8169:19:14"
														},
														{
															"nativeSrc": "8197:21:14",
															"nodeType": "YulAssignment",
															"src": "8197:21:14",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8208:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8208:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8213:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8213:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8204:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8204:3:14"
																},
																"nativeSrc": "8204:14:14",
																"nodeType": "YulFunctionCall",
																"src": "8204:14:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "8197:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8197:3:14"
																}
															]
														},
														{
															"nativeSrc": "8227:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8227:36:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8249:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "8249:2:14"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "8253:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "8253:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8245:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8245:3:14"
																		},
																		"nativeSrc": "8245:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8245:11:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8258:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8258:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8241:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8241:3:14"
																},
																"nativeSrc": "8241:22:14",
																"nodeType": "YulFunctionCall",
																"src": "8241:22:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "8231:6:14",
																	"nodeType": "YulTypedName",
																	"src": "8231:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8295:16:14",
																"nodeType": "YulBlock",
																"src": "8295:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8304:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8304:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8307:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8307:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8297:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8297:6:14"
																			},
																			"nativeSrc": "8297:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8297:12:14"
																		},
																		"nativeSrc": "8297:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8297:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8278:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8278:6:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8286:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "8286:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8275:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8275:2:14"
																},
																"nativeSrc": "8275:19:14",
																"nodeType": "YulFunctionCall",
																"src": "8275:19:14"
															},
															"nativeSrc": "8272:39:14",
															"nodeType": "YulIf",
															"src": "8272:39:14"
														},
														{
															"nativeSrc": "8320:24:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8320:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "8335:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "8335:2:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8339:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8339:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8331:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8331:3:14"
																},
																"nativeSrc": "8331:13:14",
																"nodeType": "YulFunctionCall",
																"src": "8331:13:14"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "8324:3:14",
																	"nodeType": "YulTypedName",
																	"src": "8324:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8411:142:14",
																"nodeType": "YulBlock",
																"src": "8411:142:14",
																"statements": [
																	{
																		"nativeSrc": "8425:14:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8425:14:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8438:1:14",
																			"nodeType": "YulLiteral",
																			"src": "8438:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "8429:5:14",
																				"nodeType": "YulTypedName",
																				"src": "8429:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8452:26:14",
																		"nodeType": "YulAssignment",
																		"src": "8452:26:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "8474:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8474:3:14"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "8461:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "8461:12:14"
																			},
																			"nativeSrc": "8461:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8461:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "8452:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8452:5:14"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8498:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8498:3:14"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "8503:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "8503:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8491:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8491:6:14"
																			},
																			"nativeSrc": "8491:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8491:18:14"
																		},
																		"nativeSrc": "8491:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8491:18:14"
																	},
																	{
																		"nativeSrc": "8522:21:14",
																		"nodeType": "YulAssignment",
																		"src": "8522:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8533:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8533:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8538:4:14",
																					"nodeType": "YulLiteral",
																					"src": "8538:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8529:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8529:3:14"
																			},
																			"nativeSrc": "8529:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8529:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "8522:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8522:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8364:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8364:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8369:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8369:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8361:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8361:2:14"
																},
																"nativeSrc": "8361:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8361:15:14"
															},
															"nativeSrc": "8353:200:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8377:25:14",
																"nodeType": "YulBlock",
																"src": "8377:25:14",
																"statements": [
																	{
																		"nativeSrc": "8379:21:14",
																		"nodeType": "YulAssignment",
																		"src": "8379:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "8390:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8390:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8395:4:14",
																					"nodeType": "YulLiteral",
																					"src": "8395:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8386:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8386:3:14"
																			},
																			"nativeSrc": "8386:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8386:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "8379:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8379:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8357:3:14",
																"nodeType": "YulBlock",
																"src": "8357:3:14",
																"statements": []
															},
															"src": "8353:200:14"
														},
														{
															"nativeSrc": "8562:15:14",
															"nodeType": "YulAssignment",
															"src": "8562:15:14",
															"value": {
																"name": "array",
																"nativeSrc": "8572:5:14",
																"nodeType": "YulIdentifier",
																"src": "8572:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8562:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8562:6:14"
																}
															]
														},
														{
															"nativeSrc": "8586:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8586:16:14",
															"value": {
																"kind": "number",
																"nativeSrc": "8601:1:14",
																"nodeType": "YulLiteral",
																"src": "8601:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "8590:7:14",
																	"nodeType": "YulTypedName",
																	"src": "8590:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8611:45:14",
															"nodeType": "YulAssignment",
															"src": "8611:45:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8639:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8639:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8650:4:14",
																				"nodeType": "YulLiteral",
																				"src": "8650:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8635:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8635:3:14"
																		},
																		"nativeSrc": "8635:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8635:20:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8622:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8622:12:14"
																},
																"nativeSrc": "8622:34:14",
																"nodeType": "YulFunctionCall",
																"src": "8622:34:14"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "8611:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "8611:7:14"
																}
															]
														},
														{
															"nativeSrc": "8665:17:14",
															"nodeType": "YulAssignment",
															"src": "8665:17:14",
															"value": {
																"name": "value_1",
																"nativeSrc": "8675:7:14",
																"nodeType": "YulIdentifier",
																"src": "8675:7:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8665:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8665:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256",
												"nativeSrc": "7564:1124:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7634:9:14",
														"nodeType": "YulTypedName",
														"src": "7634:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7645:7:14",
														"nodeType": "YulTypedName",
														"src": "7645:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7657:6:14",
														"nodeType": "YulTypedName",
														"src": "7657:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7665:6:14",
														"nodeType": "YulTypedName",
														"src": "7665:6:14",
														"type": ""
													}
												],
												"src": "7564:1124:14"
											},
											{
												"body": {
													"nativeSrc": "8814:110:14",
													"nodeType": "YulBlock",
													"src": "8814:110:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8831:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8831:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8842:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8842:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8824:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8824:6:14"
																},
																"nativeSrc": "8824:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8824:21:14"
															},
															"nativeSrc": "8824:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8824:21:14"
														},
														{
															"nativeSrc": "8854:64:14",
															"nodeType": "YulAssignment",
															"src": "8854:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8891:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8891:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8903:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8903:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8914:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8914:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8899:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8899:3:14"
																		},
																		"nativeSrc": "8899:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8899:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "8862:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "8862:28:14"
																},
																"nativeSrc": "8862:56:14",
																"nodeType": "YulFunctionCall",
																"src": "8862:56:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8854:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8854:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8693:231:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8783:9:14",
														"nodeType": "YulTypedName",
														"src": "8783:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8794:6:14",
														"nodeType": "YulTypedName",
														"src": "8794:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8805:4:14",
														"nodeType": "YulTypedName",
														"src": "8805:4:14",
														"type": ""
													}
												],
												"src": "8693:231:14"
											},
											{
												"body": {
													"nativeSrc": "9190:329:14",
													"nodeType": "YulBlock",
													"src": "9190:329:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9207:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9207:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9218:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9218:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9200:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9200:6:14"
																},
																"nativeSrc": "9200:25:14",
																"nodeType": "YulFunctionCall",
																"src": "9200:25:14"
															},
															"nativeSrc": "9200:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "9200:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9245:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9245:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9256:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9256:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9241:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9241:3:14"
																		},
																		"nativeSrc": "9241:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9241:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9261:3:14",
																		"nodeType": "YulLiteral",
																		"src": "9261:3:14",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9234:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9234:6:14"
																},
																"nativeSrc": "9234:31:14",
																"nodeType": "YulFunctionCall",
																"src": "9234:31:14"
															},
															"nativeSrc": "9234:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "9234:31:14"
														},
														{
															"nativeSrc": "9274:65:14",
															"nodeType": "YulAssignment",
															"src": "9274:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9311:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9311:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9323:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9323:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9334:3:14",
																				"nodeType": "YulLiteral",
																				"src": "9334:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9319:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9319:3:14"
																		},
																		"nativeSrc": "9319:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9319:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "9282:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "9282:28:14"
																},
																"nativeSrc": "9282:57:14",
																"nodeType": "YulFunctionCall",
																"src": "9282:57:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9274:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9274:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9359:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9359:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9370:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9370:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9355:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9355:3:14"
																		},
																		"nativeSrc": "9355:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9355:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9375:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9375:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9348:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9348:6:14"
																},
																"nativeSrc": "9348:34:14",
																"nodeType": "YulFunctionCall",
																"src": "9348:34:14"
															},
															"nativeSrc": "9348:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "9348:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9402:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9402:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9413:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9413:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9398:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9398:3:14"
																		},
																		"nativeSrc": "9398:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9398:18:14"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9418:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9418:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9391:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9391:6:14"
																},
																"nativeSrc": "9391:34:14",
																"nodeType": "YulFunctionCall",
																"src": "9391:34:14"
															},
															"nativeSrc": "9391:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "9391:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9445:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9445:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9456:3:14",
																				"nodeType": "YulLiteral",
																				"src": "9456:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9441:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9441:3:14"
																		},
																		"nativeSrc": "9441:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9441:19:14"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "9462:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9462:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9434:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9434:6:14"
																},
																"nativeSrc": "9434:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9434:35:14"
															},
															"nativeSrc": "9434:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "9434:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9489:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9489:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9500:3:14",
																				"nodeType": "YulLiteral",
																				"src": "9500:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9485:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9485:3:14"
																		},
																		"nativeSrc": "9485:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9485:19:14"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "9506:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9506:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9478:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9478:6:14"
																},
																"nativeSrc": "9478:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9478:35:14"
															},
															"nativeSrc": "9478:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "9478:35:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8929:590:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9119:9:14",
														"nodeType": "YulTypedName",
														"src": "9119:9:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9130:6:14",
														"nodeType": "YulTypedName",
														"src": "9130:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9138:6:14",
														"nodeType": "YulTypedName",
														"src": "9138:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9146:6:14",
														"nodeType": "YulTypedName",
														"src": "9146:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9154:6:14",
														"nodeType": "YulTypedName",
														"src": "9154:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9162:6:14",
														"nodeType": "YulTypedName",
														"src": "9162:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9170:6:14",
														"nodeType": "YulTypedName",
														"src": "9170:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9181:4:14",
														"nodeType": "YulTypedName",
														"src": "9181:4:14",
														"type": ""
													}
												],
												"src": "8929:590:14"
											},
											{
												"body": {
													"nativeSrc": "9611:213:14",
													"nodeType": "YulBlock",
													"src": "9611:213:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9657:16:14",
																"nodeType": "YulBlock",
																"src": "9657:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9666:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9666:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9669:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9669:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9659:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9659:6:14"
																			},
																			"nativeSrc": "9659:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9659:12:14"
																		},
																		"nativeSrc": "9659:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9659:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9632:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9632:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9641:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9641:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9628:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9628:3:14"
																		},
																		"nativeSrc": "9628:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9628:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9653:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9653:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9624:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9624:3:14"
																},
																"nativeSrc": "9624:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9624:32:14"
															},
															"nativeSrc": "9621:52:14",
															"nodeType": "YulIf",
															"src": "9621:52:14"
														},
														{
															"nativeSrc": "9682:39:14",
															"nodeType": "YulAssignment",
															"src": "9682:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9711:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9711:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "9692:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "9692:18:14"
																},
																"nativeSrc": "9692:29:14",
																"nodeType": "YulFunctionCall",
																"src": "9692:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9682:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9682:6:14"
																}
															]
														},
														{
															"nativeSrc": "9730:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9730:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "9743:1:14",
																"nodeType": "YulLiteral",
																"src": "9743:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9734:5:14",
																	"nodeType": "YulTypedName",
																	"src": "9734:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9753:41:14",
															"nodeType": "YulAssignment",
															"src": "9753:41:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9779:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9779:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9790:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9790:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9775:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9775:3:14"
																		},
																		"nativeSrc": "9775:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9775:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9762:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "9762:12:14"
																},
																"nativeSrc": "9762:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9762:32:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9753:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9753:5:14"
																}
															]
														},
														{
															"nativeSrc": "9803:15:14",
															"nodeType": "YulAssignment",
															"src": "9803:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "9813:5:14",
																"nodeType": "YulIdentifier",
																"src": "9813:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "9803:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9803:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "9524:300:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9569:9:14",
														"nodeType": "YulTypedName",
														"src": "9569:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9580:7:14",
														"nodeType": "YulTypedName",
														"src": "9580:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9592:6:14",
														"nodeType": "YulTypedName",
														"src": "9592:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9600:6:14",
														"nodeType": "YulTypedName",
														"src": "9600:6:14",
														"type": ""
													}
												],
												"src": "9524:300:14"
											},
											{
												"body": {
													"nativeSrc": "10048:340:14",
													"nodeType": "YulBlock",
													"src": "10048:340:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10065:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10065:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10076:3:14",
																		"nodeType": "YulLiteral",
																		"src": "10076:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10058:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10058:6:14"
																},
																"nativeSrc": "10058:22:14",
																"nodeType": "YulFunctionCall",
																"src": "10058:22:14"
															},
															"nativeSrc": "10058:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "10058:22:14"
														},
														{
															"nativeSrc": "10089:71:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10089:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10132:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10132:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10144:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10144:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10155:3:14",
																				"nodeType": "YulLiteral",
																				"src": "10155:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10140:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10140:3:14"
																		},
																		"nativeSrc": "10140:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10140:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "10103:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "10103:28:14"
																},
																"nativeSrc": "10103:57:14",
																"nodeType": "YulFunctionCall",
																"src": "10103:57:14"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "10093:6:14",
																	"nodeType": "YulTypedName",
																	"src": "10093:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10180:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10180:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10191:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10191:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10176:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10176:3:14"
																		},
																		"nativeSrc": "10176:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10176:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "10200:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10200:6:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10208:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10208:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10196:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10196:3:14"
																		},
																		"nativeSrc": "10196:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10196:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10169:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10169:6:14"
																},
																"nativeSrc": "10169:50:14",
																"nodeType": "YulFunctionCall",
																"src": "10169:50:14"
															},
															"nativeSrc": "10169:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "10169:50:14"
														},
														{
															"nativeSrc": "10228:52:14",
															"nodeType": "YulAssignment",
															"src": "10228:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10265:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10265:6:14"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "10273:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10273:6:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "10236:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "10236:28:14"
																},
																"nativeSrc": "10236:44:14",
																"nodeType": "YulFunctionCall",
																"src": "10236:44:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10228:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10228:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10300:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10300:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10311:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10311:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10296:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10296:3:14"
																		},
																		"nativeSrc": "10296:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10296:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10316:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10316:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10289:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10289:6:14"
																},
																"nativeSrc": "10289:34:14",
																"nodeType": "YulFunctionCall",
																"src": "10289:34:14"
															},
															"nativeSrc": "10289:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "10289:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10343:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10343:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10354:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10354:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10339:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10339:3:14"
																		},
																		"nativeSrc": "10339:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10339:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "10373:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10373:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10366:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "10366:6:14"
																				},
																				"nativeSrc": "10366:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10366:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "10359:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10359:6:14"
																		},
																		"nativeSrc": "10359:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10359:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10332:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10332:6:14"
																},
																"nativeSrc": "10332:50:14",
																"nodeType": "YulFunctionCall",
																"src": "10332:50:14"
															},
															"nativeSrc": "10332:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "10332:50:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "9829:559:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9993:9:14",
														"nodeType": "YulTypedName",
														"src": "9993:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10004:6:14",
														"nodeType": "YulTypedName",
														"src": "10004:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10012:6:14",
														"nodeType": "YulTypedName",
														"src": "10012:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10020:6:14",
														"nodeType": "YulTypedName",
														"src": "10020:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10028:6:14",
														"nodeType": "YulTypedName",
														"src": "10028:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10039:4:14",
														"nodeType": "YulTypedName",
														"src": "10039:4:14",
														"type": ""
													}
												],
												"src": "9829:559:14"
											},
											{
												"body": {
													"nativeSrc": "10690:382:14",
													"nodeType": "YulBlock",
													"src": "10690:382:14",
													"statements": [
														{
															"nativeSrc": "10700:27:14",
															"nodeType": "YulAssignment",
															"src": "10700:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10712:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10712:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10723:3:14",
																		"nodeType": "YulLiteral",
																		"src": "10723:3:14",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10708:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10708:3:14"
																},
																"nativeSrc": "10708:19:14",
																"nodeType": "YulFunctionCall",
																"src": "10708:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10700:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10700:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10743:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10743:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "10754:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10754:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10736:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10736:6:14"
																},
																"nativeSrc": "10736:25:14",
																"nodeType": "YulFunctionCall",
																"src": "10736:25:14"
															},
															"nativeSrc": "10736:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "10736:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10781:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10781:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10792:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10792:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10777:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10777:3:14"
																		},
																		"nativeSrc": "10777:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10777:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10797:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10797:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10770:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10770:6:14"
																},
																"nativeSrc": "10770:34:14",
																"nodeType": "YulFunctionCall",
																"src": "10770:34:14"
															},
															"nativeSrc": "10770:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "10770:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10824:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10824:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10835:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10835:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10820:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10820:3:14"
																		},
																		"nativeSrc": "10820:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10820:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10840:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10840:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10813:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10813:6:14"
																},
																"nativeSrc": "10813:34:14",
																"nodeType": "YulFunctionCall",
																"src": "10813:34:14"
															},
															"nativeSrc": "10813:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "10813:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10867:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10867:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10878:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10878:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10863:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10863:3:14"
																		},
																		"nativeSrc": "10863:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10863:18:14"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "10883:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10883:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10856:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10856:6:14"
																},
																"nativeSrc": "10856:34:14",
																"nodeType": "YulFunctionCall",
																"src": "10856:34:14"
															},
															"nativeSrc": "10856:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "10856:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10910:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10910:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10921:3:14",
																				"nodeType": "YulLiteral",
																				"src": "10921:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10906:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10906:3:14"
																		},
																		"nativeSrc": "10906:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10906:19:14"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "10927:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10927:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10899:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10899:6:14"
																},
																"nativeSrc": "10899:35:14",
																"nodeType": "YulFunctionCall",
																"src": "10899:35:14"
															},
															"nativeSrc": "10899:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "10899:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10954:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10954:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10965:3:14",
																				"nodeType": "YulLiteral",
																				"src": "10965:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10950:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10950:3:14"
																		},
																		"nativeSrc": "10950:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10950:19:14"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "10971:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10971:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10943:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10943:6:14"
																},
																"nativeSrc": "10943:35:14",
																"nodeType": "YulFunctionCall",
																"src": "10943:35:14"
															},
															"nativeSrc": "10943:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "10943:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10998:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10998:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11009:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11009:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10994:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10994:3:14"
																		},
																		"nativeSrc": "10994:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10994:19:14"
																	},
																	{
																		"name": "value6",
																		"nativeSrc": "11015:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11015:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10987:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10987:6:14"
																},
																"nativeSrc": "10987:35:14",
																"nodeType": "YulFunctionCall",
																"src": "10987:35:14"
															},
															"nativeSrc": "10987:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "10987:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11042:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11042:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11053:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11053:3:14",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11038:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11038:3:14"
																		},
																		"nativeSrc": "11038:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11038:19:14"
																	},
																	{
																		"name": "value7",
																		"nativeSrc": "11059:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11059:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11031:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11031:6:14"
																},
																"nativeSrc": "11031:35:14",
																"nodeType": "YulFunctionCall",
																"src": "11031:35:14"
															},
															"nativeSrc": "11031:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "11031:35:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10393:679:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10603:9:14",
														"nodeType": "YulTypedName",
														"src": "10603:9:14",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "10614:6:14",
														"nodeType": "YulTypedName",
														"src": "10614:6:14",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "10622:6:14",
														"nodeType": "YulTypedName",
														"src": "10622:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "10630:6:14",
														"nodeType": "YulTypedName",
														"src": "10630:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10638:6:14",
														"nodeType": "YulTypedName",
														"src": "10638:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10646:6:14",
														"nodeType": "YulTypedName",
														"src": "10646:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10654:6:14",
														"nodeType": "YulTypedName",
														"src": "10654:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10662:6:14",
														"nodeType": "YulTypedName",
														"src": "10662:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10670:6:14",
														"nodeType": "YulTypedName",
														"src": "10670:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10681:4:14",
														"nodeType": "YulTypedName",
														"src": "10681:4:14",
														"type": ""
													}
												],
												"src": "10393:679:14"
											},
											{
												"body": {
													"nativeSrc": "11195:102:14",
													"nodeType": "YulBlock",
													"src": "11195:102:14",
													"statements": [
														{
															"nativeSrc": "11205:26:14",
															"nodeType": "YulAssignment",
															"src": "11205:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11217:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11217:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11228:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11228:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11213:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11213:3:14"
																},
																"nativeSrc": "11213:18:14",
																"nodeType": "YulFunctionCall",
																"src": "11213:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11205:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11205:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11247:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11247:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11262:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11262:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11278:3:14",
																								"nodeType": "YulLiteral",
																								"src": "11278:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11283:1:14",
																								"nodeType": "YulLiteral",
																								"src": "11283:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11274:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11274:3:14"
																						},
																						"nativeSrc": "11274:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "11274:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11287:1:14",
																						"nodeType": "YulLiteral",
																						"src": "11287:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11270:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11270:3:14"
																				},
																				"nativeSrc": "11270:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11270:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11258:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11258:3:14"
																		},
																		"nativeSrc": "11258:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11258:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11240:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11240:6:14"
																},
																"nativeSrc": "11240:51:14",
																"nodeType": "YulFunctionCall",
																"src": "11240:51:14"
															},
															"nativeSrc": "11240:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "11240:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IStaking_$1883__to_t_address__fromStack_reversed",
												"nativeSrc": "11077:220:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11164:9:14",
														"nodeType": "YulTypedName",
														"src": "11164:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11175:6:14",
														"nodeType": "YulTypedName",
														"src": "11175:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11186:4:14",
														"nodeType": "YulTypedName",
														"src": "11186:4:14",
														"type": ""
													}
												],
												"src": "11077:220:14"
											},
											{
												"body": {
													"nativeSrc": "11508:578:14",
													"nodeType": "YulBlock",
													"src": "11508:578:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11555:16:14",
																"nodeType": "YulBlock",
																"src": "11555:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11564:1:14",
																					"nodeType": "YulLiteral",
																					"src": "11564:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11567:1:14",
																					"nodeType": "YulLiteral",
																					"src": "11567:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11557:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11557:6:14"
																			},
																			"nativeSrc": "11557:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11557:12:14"
																		},
																		"nativeSrc": "11557:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11557:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11529:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11529:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11538:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11538:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11525:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11525:3:14"
																		},
																		"nativeSrc": "11525:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11525:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11550:3:14",
																		"nodeType": "YulLiteral",
																		"src": "11550:3:14",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11521:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11521:3:14"
																},
																"nativeSrc": "11521:33:14",
																"nodeType": "YulFunctionCall",
																"src": "11521:33:14"
															},
															"nativeSrc": "11518:53:14",
															"nodeType": "YulIf",
															"src": "11518:53:14"
														},
														{
															"nativeSrc": "11580:39:14",
															"nodeType": "YulAssignment",
															"src": "11580:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11609:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11609:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "11590:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "11590:18:14"
																},
																"nativeSrc": "11590:29:14",
																"nodeType": "YulFunctionCall",
																"src": "11590:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11580:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11580:6:14"
																}
															]
														},
														{
															"nativeSrc": "11628:48:14",
															"nodeType": "YulAssignment",
															"src": "11628:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11661:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11661:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11672:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11672:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11657:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11657:3:14"
																		},
																		"nativeSrc": "11657:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11657:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "11638:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "11638:18:14"
																},
																"nativeSrc": "11638:38:14",
																"nodeType": "YulFunctionCall",
																"src": "11638:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "11628:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11628:6:14"
																}
															]
														},
														{
															"nativeSrc": "11685:48:14",
															"nodeType": "YulAssignment",
															"src": "11685:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11718:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11718:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11729:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11729:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11714:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11714:3:14"
																		},
																		"nativeSrc": "11714:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11714:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "11695:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "11695:18:14"
																},
																"nativeSrc": "11695:38:14",
																"nodeType": "YulFunctionCall",
																"src": "11695:38:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "11685:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11685:6:14"
																}
															]
														},
														{
															"nativeSrc": "11742:48:14",
															"nodeType": "YulAssignment",
															"src": "11742:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11775:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11775:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11786:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11786:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11771:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11771:3:14"
																		},
																		"nativeSrc": "11771:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11771:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "11752:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "11752:18:14"
																},
																"nativeSrc": "11752:38:14",
																"nodeType": "YulFunctionCall",
																"src": "11752:38:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "11742:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11742:6:14"
																}
															]
														},
														{
															"nativeSrc": "11799:49:14",
															"nodeType": "YulAssignment",
															"src": "11799:49:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11832:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11832:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11843:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11843:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11828:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11828:3:14"
																		},
																		"nativeSrc": "11828:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11828:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "11809:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "11809:18:14"
																},
																"nativeSrc": "11809:39:14",
																"nodeType": "YulFunctionCall",
																"src": "11809:39:14"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "11799:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11799:6:14"
																}
															]
														},
														{
															"nativeSrc": "11857:49:14",
															"nodeType": "YulAssignment",
															"src": "11857:49:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11890:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11890:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11901:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11901:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11886:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11886:3:14"
																		},
																		"nativeSrc": "11886:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11886:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "11867:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "11867:18:14"
																},
																"nativeSrc": "11867:39:14",
																"nodeType": "YulFunctionCall",
																"src": "11867:39:14"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "11857:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11857:6:14"
																}
															]
														},
														{
															"nativeSrc": "11915:49:14",
															"nodeType": "YulAssignment",
															"src": "11915:49:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11948:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11948:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11959:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11959:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11944:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11944:3:14"
																		},
																		"nativeSrc": "11944:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11944:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "11925:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "11925:18:14"
																},
																"nativeSrc": "11925:39:14",
																"nodeType": "YulFunctionCall",
																"src": "11925:39:14"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "11915:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11915:6:14"
																}
															]
														},
														{
															"nativeSrc": "11973:49:14",
															"nodeType": "YulAssignment",
															"src": "11973:49:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12006:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12006:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12017:3:14",
																				"nodeType": "YulLiteral",
																				"src": "12017:3:14",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12002:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12002:3:14"
																		},
																		"nativeSrc": "12002:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12002:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "11983:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "11983:18:14"
																},
																"nativeSrc": "11983:39:14",
																"nodeType": "YulFunctionCall",
																"src": "11983:39:14"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "11973:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11973:6:14"
																}
															]
														},
														{
															"nativeSrc": "12031:49:14",
															"nodeType": "YulAssignment",
															"src": "12031:49:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12064:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12064:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12075:3:14",
																				"nodeType": "YulLiteral",
																				"src": "12075:3:14",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12060:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12060:3:14"
																		},
																		"nativeSrc": "12060:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12060:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "12041:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "12041:18:14"
																},
																"nativeSrc": "12041:39:14",
																"nodeType": "YulFunctionCall",
																"src": "12041:39:14"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nativeSrc": "12031:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12031:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address",
												"nativeSrc": "11302:784:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11410:9:14",
														"nodeType": "YulTypedName",
														"src": "11410:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11421:7:14",
														"nodeType": "YulTypedName",
														"src": "11421:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11433:6:14",
														"nodeType": "YulTypedName",
														"src": "11433:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11441:6:14",
														"nodeType": "YulTypedName",
														"src": "11441:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11449:6:14",
														"nodeType": "YulTypedName",
														"src": "11449:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11457:6:14",
														"nodeType": "YulTypedName",
														"src": "11457:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11465:6:14",
														"nodeType": "YulTypedName",
														"src": "11465:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "11473:6:14",
														"nodeType": "YulTypedName",
														"src": "11473:6:14",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "11481:6:14",
														"nodeType": "YulTypedName",
														"src": "11481:6:14",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "11489:6:14",
														"nodeType": "YulTypedName",
														"src": "11489:6:14",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "11497:6:14",
														"nodeType": "YulTypedName",
														"src": "11497:6:14",
														"type": ""
													}
												],
												"src": "11302:784:14"
											},
											{
												"body": {
													"nativeSrc": "12123:95:14",
													"nodeType": "YulBlock",
													"src": "12123:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12140:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12140:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12147:3:14",
																				"nodeType": "YulLiteral",
																				"src": "12147:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12152:10:14",
																				"nodeType": "YulLiteral",
																				"src": "12152:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12143:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12143:3:14"
																		},
																		"nativeSrc": "12143:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12143:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12133:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12133:6:14"
																},
																"nativeSrc": "12133:31:14",
																"nodeType": "YulFunctionCall",
																"src": "12133:31:14"
															},
															"nativeSrc": "12133:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "12133:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12180:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12180:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12183:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12183:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12173:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12173:6:14"
																},
																"nativeSrc": "12173:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12173:15:14"
															},
															"nativeSrc": "12173:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "12173:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12204:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12204:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12207:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12207:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12197:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12197:6:14"
																},
																"nativeSrc": "12197:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12197:15:14"
															},
															"nativeSrc": "12197:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "12197:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12091:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "12091:127:14"
											},
											{
												"body": {
													"nativeSrc": "12273:162:14",
													"nodeType": "YulBlock",
													"src": "12273:162:14",
													"statements": [
														{
															"nativeSrc": "12283:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12283:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12303:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "12303:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12297:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12297:5:14"
																},
																"nativeSrc": "12297:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12297:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12287:6:14",
																	"nodeType": "YulTypedName",
																	"src": "12287:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12324:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12324:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12333:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "12333:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12340:4:14",
																				"nodeType": "YulLiteral",
																				"src": "12340:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12329:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12329:3:14"
																		},
																		"nativeSrc": "12329:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12329:16:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12347:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12347:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "12318:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12318:5:14"
																},
																"nativeSrc": "12318:36:14",
																"nodeType": "YulFunctionCall",
																"src": "12318:36:14"
															},
															"nativeSrc": "12318:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "12318:36:14"
														},
														{
															"nativeSrc": "12363:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12363:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12377:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12377:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12382:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12382:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12373:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12373:3:14"
																},
																"nativeSrc": "12373:16:14",
																"nodeType": "YulFunctionCall",
																"src": "12373:16:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12367:2:14",
																	"nodeType": "YulTypedName",
																	"src": "12367:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "12405:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "12405:2:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12409:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12409:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12398:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12398:6:14"
																},
																"nativeSrc": "12398:13:14",
																"nodeType": "YulFunctionCall",
																"src": "12398:13:14"
															},
															"nativeSrc": "12398:13:14",
															"nodeType": "YulExpressionStatement",
															"src": "12398:13:14"
														},
														{
															"nativeSrc": "12420:9:14",
															"nodeType": "YulAssignment",
															"src": "12420:9:14",
															"value": {
																"name": "_1",
																"nativeSrc": "12427:2:14",
																"nodeType": "YulIdentifier",
																"src": "12427:2:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12420:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12420:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "12223:212:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12250:5:14",
														"nodeType": "YulTypedName",
														"src": "12250:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12257:3:14",
														"nodeType": "YulTypedName",
														"src": "12257:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12265:3:14",
														"nodeType": "YulTypedName",
														"src": "12265:3:14",
														"type": ""
													}
												],
												"src": "12223:212:14"
											},
											{
												"body": {
													"nativeSrc": "12579:53:14",
													"nodeType": "YulBlock",
													"src": "12579:53:14",
													"statements": [
														{
															"nativeSrc": "12589:37:14",
															"nodeType": "YulAssignment",
															"src": "12589:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12614:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12614:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12622:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12622:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "12596:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "12596:17:14"
																},
																"nativeSrc": "12596:30:14",
																"nodeType": "YulFunctionCall",
																"src": "12596:30:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12589:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12589:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12440:192:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12555:3:14",
														"nodeType": "YulTypedName",
														"src": "12555:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12560:6:14",
														"nodeType": "YulTypedName",
														"src": "12560:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12571:3:14",
														"nodeType": "YulTypedName",
														"src": "12571:3:14",
														"type": ""
													}
												],
												"src": "12440:192:14"
											},
											{
												"body": {
													"nativeSrc": "12692:325:14",
													"nodeType": "YulBlock",
													"src": "12692:325:14",
													"statements": [
														{
															"nativeSrc": "12702:22:14",
															"nodeType": "YulAssignment",
															"src": "12702:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12716:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12716:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "12719:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12719:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "12712:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12712:3:14"
																},
																"nativeSrc": "12712:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12712:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12702:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12702:6:14"
																}
															]
														},
														{
															"nativeSrc": "12733:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12733:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12763:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12763:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12769:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12769:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12759:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12759:3:14"
																},
																"nativeSrc": "12759:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12759:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12737:18:14",
																	"nodeType": "YulTypedName",
																	"src": "12737:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12810:31:14",
																"nodeType": "YulBlock",
																"src": "12810:31:14",
																"statements": [
																	{
																		"nativeSrc": "12812:27:14",
																		"nodeType": "YulAssignment",
																		"src": "12812:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12826:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "12826:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12834:4:14",
																					"nodeType": "YulLiteral",
																					"src": "12834:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12822:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12822:3:14"
																			},
																			"nativeSrc": "12822:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12822:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12812:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12812:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12790:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "12790:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12783:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12783:6:14"
																},
																"nativeSrc": "12783:26:14",
																"nodeType": "YulFunctionCall",
																"src": "12783:26:14"
															},
															"nativeSrc": "12780:61:14",
															"nodeType": "YulIf",
															"src": "12780:61:14"
														},
														{
															"body": {
																"nativeSrc": "12900:111:14",
																"nodeType": "YulBlock",
																"src": "12900:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12921:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12921:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12928:3:14",
																							"nodeType": "YulLiteral",
																							"src": "12928:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12933:10:14",
																							"nodeType": "YulLiteral",
																							"src": "12933:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "12924:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "12924:3:14"
																					},
																					"nativeSrc": "12924:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "12924:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12914:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12914:6:14"
																			},
																			"nativeSrc": "12914:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12914:31:14"
																		},
																		"nativeSrc": "12914:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12914:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12965:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12965:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12968:4:14",
																					"nodeType": "YulLiteral",
																					"src": "12968:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12958:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12958:6:14"
																			},
																			"nativeSrc": "12958:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12958:15:14"
																		},
																		"nativeSrc": "12958:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12958:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12993:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12993:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12996:4:14",
																					"nodeType": "YulLiteral",
																					"src": "12996:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12986:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12986:6:14"
																			},
																			"nativeSrc": "12986:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12986:15:14"
																		},
																		"nativeSrc": "12986:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12986:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12856:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "12856:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12879:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12879:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12887:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12887:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12876:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "12876:2:14"
																		},
																		"nativeSrc": "12876:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12876:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12853:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12853:2:14"
																},
																"nativeSrc": "12853:38:14",
																"nodeType": "YulFunctionCall",
																"src": "12853:38:14"
															},
															"nativeSrc": "12850:161:14",
															"nodeType": "YulIf",
															"src": "12850:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12637:380:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12672:4:14",
														"nodeType": "YulTypedName",
														"src": "12672:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12681:6:14",
														"nodeType": "YulTypedName",
														"src": "12681:6:14",
														"type": ""
													}
												],
												"src": "12637:380:14"
											},
											{
												"body": {
													"nativeSrc": "13078:65:14",
													"nodeType": "YulBlock",
													"src": "13078:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13095:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13095:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13098:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13098:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13088:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13088:6:14"
																},
																"nativeSrc": "13088:14:14",
																"nodeType": "YulFunctionCall",
																"src": "13088:14:14"
															},
															"nativeSrc": "13088:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "13088:14:14"
														},
														{
															"nativeSrc": "13111:26:14",
															"nodeType": "YulAssignment",
															"src": "13111:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13129:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13129:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13132:4:14",
																		"nodeType": "YulLiteral",
																		"src": "13132:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13119:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "13119:9:14"
																},
																"nativeSrc": "13119:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13119:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13111:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13111:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "13022:121:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13061:3:14",
														"nodeType": "YulTypedName",
														"src": "13061:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13069:4:14",
														"nodeType": "YulTypedName",
														"src": "13069:4:14",
														"type": ""
													}
												],
												"src": "13022:121:14"
											},
											{
												"body": {
													"nativeSrc": "13284:661:14",
													"nodeType": "YulBlock",
													"src": "13284:661:14",
													"statements": [
														{
															"nativeSrc": "13294:12:14",
															"nodeType": "YulVariableDeclaration",
															"src": "13294:12:14",
															"value": {
																"kind": "number",
																"nativeSrc": "13305:1:14",
																"nodeType": "YulLiteral",
																"src": "13305:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nativeSrc": "13298:3:14",
																	"nodeType": "YulTypedName",
																	"src": "13298:3:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13315:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "13315:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13338:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13338:6:14"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "13332:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13332:5:14"
																},
																"nativeSrc": "13332:13:14",
																"nodeType": "YulFunctionCall",
																"src": "13332:13:14"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "13319:9:14",
																	"nodeType": "YulTypedName",
																	"src": "13319:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13354:50:14",
															"nodeType": "YulVariableDeclaration",
															"src": "13354:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "13394:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13394:9:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "13368:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "13368:25:14"
																},
																"nativeSrc": "13368:36:14",
																"nodeType": "YulFunctionCall",
																"src": "13368:36:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13358:6:14",
																	"nodeType": "YulTypedName",
																	"src": "13358:6:14",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "13453:126:14",
																		"nodeType": "YulBlock",
																		"src": "13453:126:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "13474:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "13474:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "13483:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "13483:9:14"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "13498:3:14",
																											"nodeType": "YulLiteral",
																											"src": "13498:3:14",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "13494:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "13494:3:14"
																									},
																									"nativeSrc": "13494:8:14",
																									"nodeType": "YulFunctionCall",
																									"src": "13494:8:14"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "13479:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "13479:3:14"
																							},
																							"nativeSrc": "13479:24:14",
																							"nodeType": "YulFunctionCall",
																							"src": "13479:24:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "13467:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13467:6:14"
																					},
																					"nativeSrc": "13467:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13467:37:14"
																				},
																				"nativeSrc": "13467:37:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "13467:37:14"
																			},
																			{
																				"nativeSrc": "13517:52:14",
																				"nodeType": "YulAssignment",
																				"src": "13517:52:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "13528:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "13528:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "13537:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "13537:6:14"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "13559:6:14",
																													"nodeType": "YulIdentifier",
																													"src": "13559:6:14"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "13552:6:14",
																												"nodeType": "YulIdentifier",
																												"src": "13552:6:14"
																											},
																											"nativeSrc": "13552:14:14",
																											"nodeType": "YulFunctionCall",
																											"src": "13552:14:14"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "13545:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "13545:6:14"
																									},
																									"nativeSrc": "13545:22:14",
																									"nodeType": "YulFunctionCall",
																									"src": "13545:22:14"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "13533:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "13533:3:14"
																							},
																							"nativeSrc": "13533:35:14",
																							"nodeType": "YulFunctionCall",
																							"src": "13533:35:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13524:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13524:3:14"
																					},
																					"nativeSrc": "13524:45:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13524:45:14"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "13517:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13517:3:14"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "13446:133:14",
																	"nodeType": "YulCase",
																	"src": "13446:133:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13451:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13451:1:14",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13595:325:14",
																		"nodeType": "YulBlock",
																		"src": "13595:325:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13616:1:14",
																							"nodeType": "YulLiteral",
																							"src": "13616:1:14",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value0",
																							"nativeSrc": "13619:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "13619:6:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "13609:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13609:6:14"
																					},
																					"nativeSrc": "13609:17:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13609:17:14"
																				},
																				"nativeSrc": "13609:17:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "13609:17:14"
																			},
																			{
																				"nativeSrc": "13639:33:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13639:33:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13664:1:14",
																							"nodeType": "YulLiteral",
																							"src": "13664:1:14",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "13667:4:14",
																							"nodeType": "YulLiteral",
																							"src": "13667:4:14",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nativeSrc": "13654:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13654:9:14"
																					},
																					"nativeSrc": "13654:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13654:18:14"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "13643:7:14",
																						"nodeType": "YulTypedName",
																						"src": "13643:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13685:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13685:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13694:1:14",
																					"nodeType": "YulLiteral",
																					"src": "13694:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "13689:1:14",
																						"nodeType": "YulTypedName",
																						"src": "13689:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13764:110:14",
																					"nodeType": "YulBlock",
																					"src": "13764:110:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "13793:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "13793:3:14"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "13798:1:14",
																												"nodeType": "YulIdentifier",
																												"src": "13798:1:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13789:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "13789:3:14"
																										},
																										"nativeSrc": "13789:11:14",
																										"nodeType": "YulFunctionCall",
																										"src": "13789:11:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "13808:7:14",
																												"nodeType": "YulIdentifier",
																												"src": "13808:7:14"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "13802:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "13802:5:14"
																										},
																										"nativeSrc": "13802:14:14",
																										"nodeType": "YulFunctionCall",
																										"src": "13802:14:14"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "13782:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "13782:6:14"
																								},
																								"nativeSrc": "13782:35:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13782:35:14"
																							},
																							"nativeSrc": "13782:35:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "13782:35:14"
																						},
																						{
																							"nativeSrc": "13834:26:14",
																							"nodeType": "YulAssignment",
																							"src": "13834:26:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "13849:7:14",
																										"nodeType": "YulIdentifier",
																										"src": "13849:7:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13858:1:14",
																										"nodeType": "YulLiteral",
																										"src": "13858:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13845:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "13845:3:14"
																								},
																								"nativeSrc": "13845:15:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13845:15:14"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "13834:7:14",
																									"nodeType": "YulIdentifier",
																									"src": "13834:7:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "13719:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "13719:1:14"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "13722:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "13722:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13716:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "13716:2:14"
																					},
																					"nativeSrc": "13716:13:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13716:13:14"
																				},
																				"nativeSrc": "13708:166:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "13730:21:14",
																					"nodeType": "YulBlock",
																					"src": "13730:21:14",
																					"statements": [
																						{
																							"nativeSrc": "13732:17:14",
																							"nodeType": "YulAssignment",
																							"src": "13732:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "13741:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "13741:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13744:4:14",
																										"nodeType": "YulLiteral",
																										"src": "13744:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13737:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "13737:3:14"
																								},
																								"nativeSrc": "13737:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13737:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "13732:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "13732:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "13712:3:14",
																					"nodeType": "YulBlock",
																					"src": "13712:3:14",
																					"statements": []
																				},
																				"src": "13708:166:14"
																			},
																			{
																				"nativeSrc": "13887:23:14",
																				"nodeType": "YulAssignment",
																				"src": "13887:23:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "13898:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "13898:3:14"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "13903:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "13903:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13894:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13894:3:14"
																					},
																					"nativeSrc": "13894:16:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13894:16:14"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "13887:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13887:3:14"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "13588:332:14",
																	"nodeType": "YulCase",
																	"src": "13588:332:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13593:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13593:1:14",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "13424:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13424:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13435:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13435:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13420:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13420:3:14"
																},
																"nativeSrc": "13420:17:14",
																"nodeType": "YulFunctionCall",
																"src": "13420:17:14"
															},
															"nativeSrc": "13413:507:14",
															"nodeType": "YulSwitch",
															"src": "13413:507:14"
														},
														{
															"nativeSrc": "13929:10:14",
															"nodeType": "YulAssignment",
															"src": "13929:10:14",
															"value": {
																"name": "ret",
																"nativeSrc": "13936:3:14",
																"nodeType": "YulIdentifier",
																"src": "13936:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13929:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13929:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13148:797:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13260:3:14",
														"nodeType": "YulTypedName",
														"src": "13260:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13265:6:14",
														"nodeType": "YulTypedName",
														"src": "13265:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13276:3:14",
														"nodeType": "YulTypedName",
														"src": "13276:3:14",
														"type": ""
													}
												],
												"src": "13148:797:14"
											},
											{
												"body": {
													"nativeSrc": "13982:95:14",
													"nodeType": "YulBlock",
													"src": "13982:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13999:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13999:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14006:3:14",
																				"nodeType": "YulLiteral",
																				"src": "14006:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14011:10:14",
																				"nodeType": "YulLiteral",
																				"src": "14011:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "14002:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14002:3:14"
																		},
																		"nativeSrc": "14002:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14002:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13992:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13992:6:14"
																},
																"nativeSrc": "13992:31:14",
																"nodeType": "YulFunctionCall",
																"src": "13992:31:14"
															},
															"nativeSrc": "13992:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "13992:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14039:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14039:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14042:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14042:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14032:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14032:6:14"
																},
																"nativeSrc": "14032:15:14",
																"nodeType": "YulFunctionCall",
																"src": "14032:15:14"
															},
															"nativeSrc": "14032:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "14032:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14063:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14063:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14066:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14066:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14056:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14056:6:14"
																},
																"nativeSrc": "14056:15:14",
																"nodeType": "YulFunctionCall",
																"src": "14056:15:14"
															},
															"nativeSrc": "14056:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "14056:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13950:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "13950:127:14"
											},
											{
												"body": {
													"nativeSrc": "14130:77:14",
													"nodeType": "YulBlock",
													"src": "14130:77:14",
													"statements": [
														{
															"nativeSrc": "14140:16:14",
															"nodeType": "YulAssignment",
															"src": "14140:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14151:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14151:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14154:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14154:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14147:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14147:3:14"
																},
																"nativeSrc": "14147:9:14",
																"nodeType": "YulFunctionCall",
																"src": "14147:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14140:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14140:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14179:22:14",
																"nodeType": "YulBlock",
																"src": "14179:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14181:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "14181:16:14"
																			},
																			"nativeSrc": "14181:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14181:18:14"
																		},
																		"nativeSrc": "14181:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14181:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14171:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14171:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14174:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14174:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14168:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "14168:2:14"
																},
																"nativeSrc": "14168:10:14",
																"nodeType": "YulFunctionCall",
																"src": "14168:10:14"
															},
															"nativeSrc": "14165:36:14",
															"nodeType": "YulIf",
															"src": "14165:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14082:125:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14113:1:14",
														"nodeType": "YulTypedName",
														"src": "14113:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14116:1:14",
														"nodeType": "YulTypedName",
														"src": "14116:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14122:3:14",
														"nodeType": "YulTypedName",
														"src": "14122:3:14",
														"type": ""
													}
												],
												"src": "14082:125:14"
											},
											{
												"body": {
													"nativeSrc": "14293:437:14",
													"nodeType": "YulBlock",
													"src": "14293:437:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "14326:398:14",
																"nodeType": "YulBlock",
																"src": "14326:398:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14347:1:14",
																					"nodeType": "YulLiteral",
																					"src": "14347:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "14350:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "14350:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14340:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14340:6:14"
																			},
																			"nativeSrc": "14340:16:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14340:16:14"
																		},
																		"nativeSrc": "14340:16:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14340:16:14"
																	},
																	{
																		"nativeSrc": "14369:30:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14369:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14391:1:14",
																					"nodeType": "YulLiteral",
																					"src": "14391:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14394:4:14",
																					"nodeType": "YulLiteral",
																					"src": "14394:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "14381:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14381:9:14"
																			},
																			"nativeSrc": "14381:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14381:18:14"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "14373:4:14",
																				"nodeType": "YulTypedName",
																				"src": "14373:4:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14412:57:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14412:57:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "14435:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "14435:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "14445:1:14",
																							"nodeType": "YulLiteral",
																							"src": "14445:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "14452:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "14452:10:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "14464:2:14",
																									"nodeType": "YulLiteral",
																									"src": "14464:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "14448:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "14448:3:14"
																							},
																							"nativeSrc": "14448:19:14",
																							"nodeType": "YulFunctionCall",
																							"src": "14448:19:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "14441:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "14441:3:14"
																					},
																					"nativeSrc": "14441:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "14441:27:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14431:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "14431:3:14"
																			},
																			"nativeSrc": "14431:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14431:38:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "14416:11:14",
																				"nodeType": "YulTypedName",
																				"src": "14416:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "14506:23:14",
																			"nodeType": "YulBlock",
																			"src": "14506:23:14",
																			"statements": [
																				{
																					"nativeSrc": "14508:19:14",
																					"nodeType": "YulAssignment",
																					"src": "14508:19:14",
																					"value": {
																						"name": "data",
																						"nativeSrc": "14523:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "14523:4:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "14508:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "14508:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "14488:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "14488:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14500:4:14",
																					"nodeType": "YulLiteral",
																					"src": "14500:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "14485:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "14485:2:14"
																			},
																			"nativeSrc": "14485:20:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14485:20:14"
																		},
																		"nativeSrc": "14482:47:14",
																		"nodeType": "YulIf",
																		"src": "14482:47:14"
																	},
																	{
																		"nativeSrc": "14542:41:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14542:41:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "14556:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "14556:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "14566:1:14",
																							"nodeType": "YulLiteral",
																							"src": "14566:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "14573:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "14573:3:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "14578:2:14",
																									"nodeType": "YulLiteral",
																									"src": "14578:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "14569:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "14569:3:14"
																							},
																							"nativeSrc": "14569:12:14",
																							"nodeType": "YulFunctionCall",
																							"src": "14569:12:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "14562:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "14562:3:14"
																					},
																					"nativeSrc": "14562:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "14562:20:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14552:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "14552:3:14"
																			},
																			"nativeSrc": "14552:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14552:31:14"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "14546:2:14",
																				"nodeType": "YulTypedName",
																				"src": "14546:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14596:24:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14596:24:14",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "14609:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "14609:11:14"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "14600:5:14",
																				"nodeType": "YulTypedName",
																				"src": "14600:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "14694:20:14",
																			"nodeType": "YulBlock",
																			"src": "14694:20:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "14703:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "14703:5:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14710:1:14",
																								"nodeType": "YulLiteral",
																								"src": "14710:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "14696:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "14696:6:14"
																						},
																						"nativeSrc": "14696:16:14",
																						"nodeType": "YulFunctionCall",
																						"src": "14696:16:14"
																					},
																					"nativeSrc": "14696:16:14",
																					"nodeType": "YulExpressionStatement",
																					"src": "14696:16:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "14644:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "14644:5:14"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "14651:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "14651:2:14"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "14641:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "14641:2:14"
																			},
																			"nativeSrc": "14641:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14641:13:14"
																		},
																		"nativeSrc": "14633:81:14",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "14655:26:14",
																			"nodeType": "YulBlock",
																			"src": "14655:26:14",
																			"statements": [
																				{
																					"nativeSrc": "14657:22:14",
																					"nodeType": "YulAssignment",
																					"src": "14657:22:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "14670:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "14670:5:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14677:1:14",
																								"nodeType": "YulLiteral",
																								"src": "14677:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "14666:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "14666:3:14"
																						},
																						"nativeSrc": "14666:13:14",
																						"nodeType": "YulFunctionCall",
																						"src": "14666:13:14"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "14657:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "14657:5:14"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "14637:3:14",
																			"nodeType": "YulBlock",
																			"src": "14637:3:14",
																			"statements": []
																		},
																		"src": "14633:81:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "14309:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14309:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14314:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14314:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14306:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "14306:2:14"
																},
																"nativeSrc": "14306:11:14",
																"nodeType": "YulFunctionCall",
																"src": "14306:11:14"
															},
															"nativeSrc": "14303:421:14",
															"nodeType": "YulIf",
															"src": "14303:421:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "14212:518:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "14265:5:14",
														"nodeType": "YulTypedName",
														"src": "14265:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14272:3:14",
														"nodeType": "YulTypedName",
														"src": "14272:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "14277:10:14",
														"nodeType": "YulTypedName",
														"src": "14277:10:14",
														"type": ""
													}
												],
												"src": "14212:518:14"
											},
											{
												"body": {
													"nativeSrc": "14820:81:14",
													"nodeType": "YulBlock",
													"src": "14820:81:14",
													"statements": [
														{
															"nativeSrc": "14830:65:14",
															"nodeType": "YulAssignment",
															"src": "14830:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "14845:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "14845:4:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "14863:1:14",
																										"nodeType": "YulLiteral",
																										"src": "14863:1:14",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "14866:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "14866:3:14"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "14859:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "14859:3:14"
																								},
																								"nativeSrc": "14859:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "14859:11:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "14876:1:14",
																										"nodeType": "YulLiteral",
																										"src": "14876:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "14872:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "14872:3:14"
																								},
																								"nativeSrc": "14872:6:14",
																								"nodeType": "YulFunctionCall",
																								"src": "14872:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "14855:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "14855:3:14"
																						},
																						"nativeSrc": "14855:24:14",
																						"nodeType": "YulFunctionCall",
																						"src": "14855:24:14"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "14851:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14851:3:14"
																				},
																				"nativeSrc": "14851:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14851:29:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14841:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14841:3:14"
																		},
																		"nativeSrc": "14841:40:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14841:40:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14887:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14887:1:14",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "14890:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "14890:3:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "14883:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14883:3:14"
																		},
																		"nativeSrc": "14883:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14883:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14838:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "14838:2:14"
																},
																"nativeSrc": "14838:57:14",
																"nodeType": "YulFunctionCall",
																"src": "14838:57:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "14830:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14830:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "14735:166:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14797:4:14",
														"nodeType": "YulTypedName",
														"src": "14797:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14803:3:14",
														"nodeType": "YulTypedName",
														"src": "14803:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "14811:4:14",
														"nodeType": "YulTypedName",
														"src": "14811:4:14",
														"type": ""
													}
												],
												"src": "14735:166:14"
											},
											{
												"body": {
													"nativeSrc": "15002:1203:14",
													"nodeType": "YulBlock",
													"src": "15002:1203:14",
													"statements": [
														{
															"nativeSrc": "15012:24:14",
															"nodeType": "YulVariableDeclaration",
															"src": "15012:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "15032:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15032:3:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15026:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "15026:5:14"
																},
																"nativeSrc": "15026:10:14",
																"nodeType": "YulFunctionCall",
																"src": "15026:10:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "15016:6:14",
																	"nodeType": "YulTypedName",
																	"src": "15016:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15079:22:14",
																"nodeType": "YulBlock",
																"src": "15079:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "15081:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "15081:16:14"
																			},
																			"nativeSrc": "15081:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15081:18:14"
																		},
																		"nativeSrc": "15081:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "15081:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "15051:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15051:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15059:18:14",
																		"nodeType": "YulLiteral",
																		"src": "15059:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15048:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "15048:2:14"
																},
																"nativeSrc": "15048:30:14",
																"nodeType": "YulFunctionCall",
																"src": "15048:30:14"
															},
															"nativeSrc": "15045:56:14",
															"nodeType": "YulIf",
															"src": "15045:56:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15154:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15154:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15192:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "15192:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15186:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "15186:5:14"
																				},
																				"nativeSrc": "15186:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15186:11:14"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "15160:25:14",
																			"nodeType": "YulIdentifier",
																			"src": "15160:25:14"
																		},
																		"nativeSrc": "15160:38:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15160:38:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "15200:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15200:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "15110:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "15110:43:14"
																},
																"nativeSrc": "15110:97:14",
																"nodeType": "YulFunctionCall",
																"src": "15110:97:14"
															},
															"nativeSrc": "15110:97:14",
															"nodeType": "YulExpressionStatement",
															"src": "15110:97:14"
														},
														{
															"nativeSrc": "15216:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "15216:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "15233:1:14",
																"nodeType": "YulLiteral",
																"src": "15233:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "15220:9:14",
																	"nodeType": "YulTypedName",
																	"src": "15220:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15243:17:14",
															"nodeType": "YulAssignment",
															"src": "15243:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "15256:4:14",
																"nodeType": "YulLiteral",
																"src": "15256:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "15243:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "15243:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "15306:642:14",
																		"nodeType": "YulBlock",
																		"src": "15306:642:14",
																		"statements": [
																			{
																				"nativeSrc": "15320:35:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15320:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "15339:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "15339:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "15351:2:14",
																									"nodeType": "YulLiteral",
																									"src": "15351:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "15347:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "15347:3:14"
																							},
																							"nativeSrc": "15347:7:14",
																							"nodeType": "YulFunctionCall",
																							"src": "15347:7:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "15335:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "15335:3:14"
																					},
																					"nativeSrc": "15335:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "15335:20:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "15324:7:14",
																						"nodeType": "YulTypedName",
																						"src": "15324:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15368:49:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15368:49:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15412:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "15412:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "15382:29:14",
																						"nodeType": "YulIdentifier",
																						"src": "15382:29:14"
																					},
																					"nativeSrc": "15382:35:14",
																					"nodeType": "YulFunctionCall",
																					"src": "15382:35:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "15372:6:14",
																						"nodeType": "YulTypedName",
																						"src": "15372:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15430:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15430:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15439:1:14",
																					"nodeType": "YulLiteral",
																					"src": "15439:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "15434:1:14",
																						"nodeType": "YulTypedName",
																						"src": "15434:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15510:165:14",
																					"nodeType": "YulBlock",
																					"src": "15510:165:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15535:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "15535:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "15553:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "15553:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "15558:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "15558:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "15549:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "15549:3:14"
																												},
																												"nativeSrc": "15549:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "15549:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "15543:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "15543:5:14"
																										},
																										"nativeSrc": "15543:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "15543:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "15528:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "15528:6:14"
																								},
																								"nativeSrc": "15528:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "15528:42:14"
																							},
																							"nativeSrc": "15528:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "15528:42:14"
																						},
																						{
																							"nativeSrc": "15587:24:14",
																							"nodeType": "YulAssignment",
																							"src": "15587:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15601:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "15601:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15609:1:14",
																										"nodeType": "YulLiteral",
																										"src": "15609:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15597:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "15597:3:14"
																								},
																								"nativeSrc": "15597:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "15597:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "15587:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "15587:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "15628:33:14",
																							"nodeType": "YulAssignment",
																							"src": "15628:33:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "15645:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "15645:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15656:4:14",
																										"nodeType": "YulLiteral",
																										"src": "15656:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15641:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "15641:3:14"
																								},
																								"nativeSrc": "15641:20:14",
																								"nodeType": "YulFunctionCall",
																								"src": "15641:20:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "15628:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "15628:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "15464:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "15464:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "15467:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "15467:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "15461:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "15461:2:14"
																					},
																					"nativeSrc": "15461:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "15461:14:14"
																				},
																				"nativeSrc": "15453:222:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "15476:21:14",
																					"nodeType": "YulBlock",
																					"src": "15476:21:14",
																					"statements": [
																						{
																							"nativeSrc": "15478:17:14",
																							"nodeType": "YulAssignment",
																							"src": "15478:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "15487:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "15487:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15490:4:14",
																										"nodeType": "YulLiteral",
																										"src": "15490:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15483:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "15483:3:14"
																								},
																								"nativeSrc": "15483:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "15483:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "15478:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "15478:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "15457:3:14",
																					"nodeType": "YulBlock",
																					"src": "15457:3:14",
																					"statements": []
																				},
																				"src": "15453:222:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "15723:166:14",
																					"nodeType": "YulBlock",
																					"src": "15723:166:14",
																					"statements": [
																						{
																							"nativeSrc": "15741:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "15741:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "15768:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "15768:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "15773:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "15773:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "15764:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "15764:3:14"
																										},
																										"nativeSrc": "15764:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "15764:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "15758:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "15758:5:14"
																								},
																								"nativeSrc": "15758:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "15758:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "15745:9:14",
																									"nodeType": "YulTypedName",
																									"src": "15745:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15808:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "15808:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "15820:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "15820:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "15847:1:14",
																																				"nodeType": "YulLiteral",
																																				"src": "15847:1:14",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "15850:6:14",
																																				"nodeType": "YulIdentifier",
																																				"src": "15850:6:14"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "15843:3:14",
																																			"nodeType": "YulIdentifier",
																																			"src": "15843:3:14"
																																		},
																																		"nativeSrc": "15843:14:14",
																																		"nodeType": "YulFunctionCall",
																																		"src": "15843:14:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "15859:3:14",
																																		"nodeType": "YulLiteral",
																																		"src": "15859:3:14",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "15839:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "15839:3:14"
																																},
																																"nativeSrc": "15839:24:14",
																																"nodeType": "YulFunctionCall",
																																"src": "15839:24:14"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "15869:1:14",
																																		"nodeType": "YulLiteral",
																																		"src": "15869:1:14",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "15865:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "15865:3:14"
																																},
																																"nativeSrc": "15865:6:14",
																																"nodeType": "YulFunctionCall",
																																"src": "15865:6:14"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "15835:3:14",
																															"nodeType": "YulIdentifier",
																															"src": "15835:3:14"
																														},
																														"nativeSrc": "15835:37:14",
																														"nodeType": "YulFunctionCall",
																														"src": "15835:37:14"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "15831:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "15831:3:14"
																												},
																												"nativeSrc": "15831:42:14",
																												"nodeType": "YulFunctionCall",
																												"src": "15831:42:14"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "15816:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "15816:3:14"
																										},
																										"nativeSrc": "15816:58:14",
																										"nodeType": "YulFunctionCall",
																										"src": "15816:58:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "15801:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "15801:6:14"
																								},
																								"nativeSrc": "15801:74:14",
																								"nodeType": "YulFunctionCall",
																								"src": "15801:74:14"
																							},
																							"nativeSrc": "15801:74:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "15801:74:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "15694:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "15694:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "15703:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "15703:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "15691:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "15691:2:14"
																					},
																					"nativeSrc": "15691:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "15691:19:14"
																				},
																				"nativeSrc": "15688:201:14",
																				"nodeType": "YulIf",
																				"src": "15688:201:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15909:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "15909:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "15923:1:14",
																											"nodeType": "YulLiteral",
																											"src": "15923:1:14",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "15926:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "15926:6:14"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "15919:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "15919:3:14"
																									},
																									"nativeSrc": "15919:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "15919:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "15935:1:14",
																									"nodeType": "YulLiteral",
																									"src": "15935:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "15915:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "15915:3:14"
																							},
																							"nativeSrc": "15915:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "15915:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "15902:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "15902:6:14"
																					},
																					"nativeSrc": "15902:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "15902:36:14"
																				},
																				"nativeSrc": "15902:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "15902:36:14"
																			}
																		]
																	},
																	"nativeSrc": "15299:649:14",
																	"nodeType": "YulCase",
																	"src": "15299:649:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15304:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15304:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "15965:234:14",
																		"nodeType": "YulBlock",
																		"src": "15965:234:14",
																		"statements": [
																			{
																				"nativeSrc": "15979:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15979:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15992:1:14",
																					"nodeType": "YulLiteral",
																					"src": "15992:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "15983:5:14",
																						"nodeType": "YulTypedName",
																						"src": "15983:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16028:67:14",
																					"nodeType": "YulBlock",
																					"src": "16028:67:14",
																					"statements": [
																						{
																							"nativeSrc": "16046:35:14",
																							"nodeType": "YulAssignment",
																							"src": "16046:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "16065:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "16065:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "16070:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "16070:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "16061:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "16061:3:14"
																										},
																										"nativeSrc": "16061:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "16061:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "16055:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "16055:5:14"
																								},
																								"nativeSrc": "16055:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "16055:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "16046:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "16046:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "16009:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "16009:6:14"
																				},
																				"nativeSrc": "16006:89:14",
																				"nodeType": "YulIf",
																				"src": "16006:89:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16115:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "16115:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "16174:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "16174:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "16181:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "16181:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "16121:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "16121:52:14"
																							},
																							"nativeSrc": "16121:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "16121:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "16108:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "16108:6:14"
																					},
																					"nativeSrc": "16108:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "16108:81:14"
																				},
																				"nativeSrc": "16108:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "16108:81:14"
																			}
																		]
																	},
																	"nativeSrc": "15957:242:14",
																	"nodeType": "YulCase",
																	"src": "15957:242:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "15279:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15279:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15287:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15287:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15276:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "15276:2:14"
																},
																"nativeSrc": "15276:14:14",
																"nodeType": "YulFunctionCall",
																"src": "15276:14:14"
															},
															"nativeSrc": "15269:930:14",
															"nodeType": "YulSwitch",
															"src": "15269:930:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "14906:1299:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14987:4:14",
														"nodeType": "YulTypedName",
														"src": "14987:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "14993:3:14",
														"nodeType": "YulTypedName",
														"src": "14993:3:14",
														"type": ""
													}
												],
												"src": "14906:1299:14"
											},
											{
												"body": {
													"nativeSrc": "16359:153:14",
													"nodeType": "YulBlock",
													"src": "16359:153:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16376:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16376:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "16387:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16387:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16369:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16369:6:14"
																},
																"nativeSrc": "16369:25:14",
																"nodeType": "YulFunctionCall",
																"src": "16369:25:14"
															},
															"nativeSrc": "16369:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "16369:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16414:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16414:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16425:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16425:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16410:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16410:3:14"
																		},
																		"nativeSrc": "16410:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16410:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16430:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16430:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16403:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16403:6:14"
																},
																"nativeSrc": "16403:30:14",
																"nodeType": "YulFunctionCall",
																"src": "16403:30:14"
															},
															"nativeSrc": "16403:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "16403:30:14"
														},
														{
															"nativeSrc": "16442:64:14",
															"nodeType": "YulAssignment",
															"src": "16442:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16479:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16479:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16491:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16491:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16502:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16502:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16487:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16487:3:14"
																		},
																		"nativeSrc": "16487:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16487:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "16450:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "16450:28:14"
																},
																"nativeSrc": "16450:56:14",
																"nodeType": "YulFunctionCall",
																"src": "16450:56:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16442:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16442:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16210:302:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16320:9:14",
														"nodeType": "YulTypedName",
														"src": "16320:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16331:6:14",
														"nodeType": "YulTypedName",
														"src": "16331:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16339:6:14",
														"nodeType": "YulTypedName",
														"src": "16339:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16350:4:14",
														"nodeType": "YulTypedName",
														"src": "16350:4:14",
														"type": ""
													}
												],
												"src": "16210:302:14"
											},
											{
												"body": {
													"nativeSrc": "16564:88:14",
													"nodeType": "YulBlock",
													"src": "16564:88:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "16595:22:14",
																"nodeType": "YulBlock",
																"src": "16595:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16597:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "16597:16:14"
																			},
																			"nativeSrc": "16597:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16597:18:14"
																		},
																		"nativeSrc": "16597:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16597:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16580:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16580:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16591:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16591:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16587:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16587:3:14"
																		},
																		"nativeSrc": "16587:6:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16587:6:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "16577:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "16577:2:14"
																},
																"nativeSrc": "16577:17:14",
																"nodeType": "YulFunctionCall",
																"src": "16577:17:14"
															},
															"nativeSrc": "16574:43:14",
															"nodeType": "YulIf",
															"src": "16574:43:14"
														},
														{
															"nativeSrc": "16626:20:14",
															"nodeType": "YulAssignment",
															"src": "16626:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16637:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16637:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16644:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16644:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16633:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16633:3:14"
																},
																"nativeSrc": "16633:13:14",
																"nodeType": "YulFunctionCall",
																"src": "16633:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16626:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16626:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "16517:135:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16546:5:14",
														"nodeType": "YulTypedName",
														"src": "16546:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16556:3:14",
														"nodeType": "YulTypedName",
														"src": "16556:3:14",
														"type": ""
													}
												],
												"src": "16517:135:14"
											},
											{
												"body": {
													"nativeSrc": "16831:171:14",
													"nodeType": "YulBlock",
													"src": "16831:171:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16848:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16848:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16859:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16859:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16841:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16841:6:14"
																},
																"nativeSrc": "16841:21:14",
																"nodeType": "YulFunctionCall",
																"src": "16841:21:14"
															},
															"nativeSrc": "16841:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "16841:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16882:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16882:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16893:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16893:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16878:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16878:3:14"
																		},
																		"nativeSrc": "16878:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16878:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16898:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16898:2:14",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16871:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16871:6:14"
																},
																"nativeSrc": "16871:30:14",
																"nodeType": "YulFunctionCall",
																"src": "16871:30:14"
															},
															"nativeSrc": "16871:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "16871:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16921:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16921:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16932:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16932:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16917:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16917:3:14"
																		},
																		"nativeSrc": "16917:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16917:18:14"
																	},
																	{
																		"hexValue": "506c6179657220616c726561647920657869737473",
																		"kind": "string",
																		"nativeSrc": "16937:23:14",
																		"nodeType": "YulLiteral",
																		"src": "16937:23:14",
																		"type": "",
																		"value": "Player already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16910:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16910:6:14"
																},
																"nativeSrc": "16910:51:14",
																"nodeType": "YulFunctionCall",
																"src": "16910:51:14"
															},
															"nativeSrc": "16910:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "16910:51:14"
														},
														{
															"nativeSrc": "16970:26:14",
															"nodeType": "YulAssignment",
															"src": "16970:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16982:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16982:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16993:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16993:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16978:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16978:3:14"
																},
																"nativeSrc": "16978:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16978:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16970:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16970:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16657:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16808:9:14",
														"nodeType": "YulTypedName",
														"src": "16808:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16822:4:14",
														"nodeType": "YulTypedName",
														"src": "16822:4:14",
														"type": ""
													}
												],
												"src": "16657:345:14"
											},
											{
												"body": {
													"nativeSrc": "17181:170:14",
													"nodeType": "YulBlock",
													"src": "17181:170:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17198:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17198:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17209:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17209:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17191:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17191:6:14"
																},
																"nativeSrc": "17191:21:14",
																"nodeType": "YulFunctionCall",
																"src": "17191:21:14"
															},
															"nativeSrc": "17191:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "17191:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17232:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17232:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17243:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17243:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17228:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17228:3:14"
																		},
																		"nativeSrc": "17228:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17228:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17248:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17248:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17221:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17221:6:14"
																},
																"nativeSrc": "17221:30:14",
																"nodeType": "YulFunctionCall",
																"src": "17221:30:14"
															},
															"nativeSrc": "17221:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "17221:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17271:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17271:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17282:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17282:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17267:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17267:3:14"
																		},
																		"nativeSrc": "17267:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17267:18:14"
																	},
																	{
																		"hexValue": "4775696c6420616c726561647920657869737473",
																		"kind": "string",
																		"nativeSrc": "17287:22:14",
																		"nodeType": "YulLiteral",
																		"src": "17287:22:14",
																		"type": "",
																		"value": "Guild already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17260:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17260:6:14"
																},
																"nativeSrc": "17260:50:14",
																"nodeType": "YulFunctionCall",
																"src": "17260:50:14"
															},
															"nativeSrc": "17260:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "17260:50:14"
														},
														{
															"nativeSrc": "17319:26:14",
															"nodeType": "YulAssignment",
															"src": "17319:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17331:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17331:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17342:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17342:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17327:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17327:3:14"
																},
																"nativeSrc": "17327:18:14",
																"nodeType": "YulFunctionCall",
																"src": "17327:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17319:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17319:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c02f3e50ed6b54b03eba0a4b156b8b2c122f79039273c822fbda9326f1dec609__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17007:344:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17158:9:14",
														"nodeType": "YulTypedName",
														"src": "17158:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17172:4:14",
														"nodeType": "YulTypedName",
														"src": "17172:4:14",
														"type": ""
													}
												],
												"src": "17007:344:14"
											},
											{
												"body": {
													"nativeSrc": "17530:164:14",
													"nodeType": "YulBlock",
													"src": "17530:164:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17547:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17547:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17558:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17558:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17540:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17540:6:14"
																},
																"nativeSrc": "17540:21:14",
																"nodeType": "YulFunctionCall",
																"src": "17540:21:14"
															},
															"nativeSrc": "17540:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "17540:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17581:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17581:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17592:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17592:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17577:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17577:3:14"
																		},
																		"nativeSrc": "17577:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17577:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17597:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17597:2:14",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17570:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17570:6:14"
																},
																"nativeSrc": "17570:30:14",
																"nodeType": "YulFunctionCall",
																"src": "17570:30:14"
															},
															"nativeSrc": "17570:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "17570:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17620:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17620:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17631:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17631:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17616:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17616:3:14"
																		},
																		"nativeSrc": "17616:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17616:18:14"
																	},
																	{
																		"hexValue": "496e76616c696420726563697065",
																		"kind": "string",
																		"nativeSrc": "17636:16:14",
																		"nodeType": "YulLiteral",
																		"src": "17636:16:14",
																		"type": "",
																		"value": "Invalid recipe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17609:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17609:6:14"
																},
																"nativeSrc": "17609:44:14",
																"nodeType": "YulFunctionCall",
																"src": "17609:44:14"
															},
															"nativeSrc": "17609:44:14",
															"nodeType": "YulExpressionStatement",
															"src": "17609:44:14"
														},
														{
															"nativeSrc": "17662:26:14",
															"nodeType": "YulAssignment",
															"src": "17662:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17674:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17674:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17685:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17685:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17670:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17670:3:14"
																},
																"nativeSrc": "17670:18:14",
																"nodeType": "YulFunctionCall",
																"src": "17670:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17662:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17662:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ffd94407a19cf8baf61f33fd1e368fd23471d93aa28c06b7e15811441edc47e5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17356:338:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17507:9:14",
														"nodeType": "YulTypedName",
														"src": "17507:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17521:4:14",
														"nodeType": "YulTypedName",
														"src": "17521:4:14",
														"type": ""
													}
												],
												"src": "17356:338:14"
											},
											{
												"body": {
													"nativeSrc": "17873:229:14",
													"nodeType": "YulBlock",
													"src": "17873:229:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17890:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17890:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17901:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17901:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17883:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17883:6:14"
																},
																"nativeSrc": "17883:21:14",
																"nodeType": "YulFunctionCall",
																"src": "17883:21:14"
															},
															"nativeSrc": "17883:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "17883:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17924:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17924:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17935:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17935:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17920:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17920:3:14"
																		},
																		"nativeSrc": "17920:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17920:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17940:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17940:2:14",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17913:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17913:6:14"
																},
																"nativeSrc": "17913:30:14",
																"nodeType": "YulFunctionCall",
																"src": "17913:30:14"
															},
															"nativeSrc": "17913:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "17913:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17963:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17963:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17974:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17974:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17959:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17959:3:14"
																		},
																		"nativeSrc": "17959:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17959:18:14"
																	},
																	{
																		"hexValue": "506c6179657220646f6573206e6f74206861766520616c6c2072657175697265",
																		"kind": "string",
																		"nativeSrc": "17979:34:14",
																		"nodeType": "YulLiteral",
																		"src": "17979:34:14",
																		"type": "",
																		"value": "Player does not have all require"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17952:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17952:6:14"
																},
																"nativeSrc": "17952:62:14",
																"nodeType": "YulFunctionCall",
																"src": "17952:62:14"
															},
															"nativeSrc": "17952:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "17952:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18034:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18034:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18045:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18045:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18030:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18030:3:14"
																		},
																		"nativeSrc": "18030:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18030:18:14"
																	},
																	{
																		"hexValue": "64206974656d73",
																		"kind": "string",
																		"nativeSrc": "18050:9:14",
																		"nodeType": "YulLiteral",
																		"src": "18050:9:14",
																		"type": "",
																		"value": "d items"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18023:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18023:6:14"
																},
																"nativeSrc": "18023:37:14",
																"nodeType": "YulFunctionCall",
																"src": "18023:37:14"
															},
															"nativeSrc": "18023:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "18023:37:14"
														},
														{
															"nativeSrc": "18069:27:14",
															"nodeType": "YulAssignment",
															"src": "18069:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18081:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18081:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18092:3:14",
																		"nodeType": "YulLiteral",
																		"src": "18092:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18077:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18077:3:14"
																},
																"nativeSrc": "18077:19:14",
																"nodeType": "YulFunctionCall",
																"src": "18077:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18069:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18069:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6549b2fa5584e8c8ec502931a0b58219efc997d0668f171ad9fa4547ef7827c7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17699:403:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17850:9:14",
														"nodeType": "YulTypedName",
														"src": "17850:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17864:4:14",
														"nodeType": "YulTypedName",
														"src": "17864:4:14",
														"type": ""
													}
												],
												"src": "17699:403:14"
											},
											{
												"body": {
													"nativeSrc": "18156:79:14",
													"nodeType": "YulBlock",
													"src": "18156:79:14",
													"statements": [
														{
															"nativeSrc": "18166:17:14",
															"nodeType": "YulAssignment",
															"src": "18166:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18178:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "18178:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18181:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "18181:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18174:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18174:3:14"
																},
																"nativeSrc": "18174:9:14",
																"nodeType": "YulFunctionCall",
																"src": "18174:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18166:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18166:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18207:22:14",
																"nodeType": "YulBlock",
																"src": "18207:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18209:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "18209:16:14"
																			},
																			"nativeSrc": "18209:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18209:18:14"
																		},
																		"nativeSrc": "18209:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "18209:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18198:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18198:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "18204:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "18204:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18195:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "18195:2:14"
																},
																"nativeSrc": "18195:11:14",
																"nodeType": "YulFunctionCall",
																"src": "18195:11:14"
															},
															"nativeSrc": "18192:37:14",
															"nodeType": "YulIf",
															"src": "18192:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "18107:128:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18138:1:14",
														"nodeType": "YulTypedName",
														"src": "18138:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18141:1:14",
														"nodeType": "YulTypedName",
														"src": "18141:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "18147:4:14",
														"nodeType": "YulTypedName",
														"src": "18147:4:14",
														"type": ""
													}
												],
												"src": "18107:128:14"
											},
											{
												"body": {
													"nativeSrc": "18272:95:14",
													"nodeType": "YulBlock",
													"src": "18272:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18289:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18289:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18296:3:14",
																				"nodeType": "YulLiteral",
																				"src": "18296:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18301:10:14",
																				"nodeType": "YulLiteral",
																				"src": "18301:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "18292:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18292:3:14"
																		},
																		"nativeSrc": "18292:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18292:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18282:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18282:6:14"
																},
																"nativeSrc": "18282:31:14",
																"nodeType": "YulFunctionCall",
																"src": "18282:31:14"
															},
															"nativeSrc": "18282:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "18282:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18329:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18329:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18332:4:14",
																		"nodeType": "YulLiteral",
																		"src": "18332:4:14",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18322:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18322:6:14"
																},
																"nativeSrc": "18322:15:14",
																"nodeType": "YulFunctionCall",
																"src": "18322:15:14"
															},
															"nativeSrc": "18322:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "18322:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18353:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18353:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18356:4:14",
																		"nodeType": "YulLiteral",
																		"src": "18356:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18346:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18346:6:14"
																},
																"nativeSrc": "18346:15:14",
																"nodeType": "YulFunctionCall",
																"src": "18346:15:14"
															},
															"nativeSrc": "18346:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "18346:15:14"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "18240:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "18240:127:14"
											},
											{
												"body": {
													"nativeSrc": "18501:119:14",
													"nodeType": "YulBlock",
													"src": "18501:119:14",
													"statements": [
														{
															"nativeSrc": "18511:26:14",
															"nodeType": "YulAssignment",
															"src": "18511:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18523:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18523:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18534:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18534:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18519:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18519:3:14"
																},
																"nativeSrc": "18519:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18519:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18511:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18511:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18553:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18553:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "18564:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18564:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18546:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18546:6:14"
																},
																"nativeSrc": "18546:25:14",
																"nodeType": "YulFunctionCall",
																"src": "18546:25:14"
															},
															"nativeSrc": "18546:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "18546:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18591:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18591:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18602:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18602:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18587:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18587:3:14"
																		},
																		"nativeSrc": "18587:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18587:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "18607:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18607:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18580:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18580:6:14"
																},
																"nativeSrc": "18580:34:14",
																"nodeType": "YulFunctionCall",
																"src": "18580:34:14"
															},
															"nativeSrc": "18580:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "18580:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18372:248:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18462:9:14",
														"nodeType": "YulTypedName",
														"src": "18462:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18473:6:14",
														"nodeType": "YulTypedName",
														"src": "18473:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18481:6:14",
														"nodeType": "YulTypedName",
														"src": "18481:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18492:4:14",
														"nodeType": "YulTypedName",
														"src": "18492:4:14",
														"type": ""
													}
												],
												"src": "18372:248:14"
											},
											{
												"body": {
													"nativeSrc": "18799:170:14",
													"nodeType": "YulBlock",
													"src": "18799:170:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18816:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18816:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18827:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18827:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18809:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18809:6:14"
																},
																"nativeSrc": "18809:21:14",
																"nodeType": "YulFunctionCall",
																"src": "18809:21:14"
															},
															"nativeSrc": "18809:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "18809:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18850:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18850:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18861:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18861:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18846:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18846:3:14"
																		},
																		"nativeSrc": "18846:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18846:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18866:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18866:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18839:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18839:6:14"
																},
																"nativeSrc": "18839:30:14",
																"nodeType": "YulFunctionCall",
																"src": "18839:30:14"
															},
															"nativeSrc": "18839:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "18839:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18889:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18889:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18900:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18900:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18885:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18885:3:14"
																		},
																		"nativeSrc": "18885:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18885:18:14"
																	},
																	{
																		"hexValue": "4775696c6420646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "18905:22:14",
																		"nodeType": "YulLiteral",
																		"src": "18905:22:14",
																		"type": "",
																		"value": "Guild does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18878:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18878:6:14"
																},
																"nativeSrc": "18878:50:14",
																"nodeType": "YulFunctionCall",
																"src": "18878:50:14"
															},
															"nativeSrc": "18878:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "18878:50:14"
														},
														{
															"nativeSrc": "18937:26:14",
															"nodeType": "YulAssignment",
															"src": "18937:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18949:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18949:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18960:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18960:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18945:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18945:3:14"
																},
																"nativeSrc": "18945:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18945:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18937:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18937:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df115ebb113eb795e874836f8b2917a4781efe582dc2481c741971644f30822e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18625:344:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18776:9:14",
														"nodeType": "YulTypedName",
														"src": "18776:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18790:4:14",
														"nodeType": "YulTypedName",
														"src": "18790:4:14",
														"type": ""
													}
												],
												"src": "18625:344:14"
											},
											{
												"body": {
													"nativeSrc": "19148:229:14",
													"nodeType": "YulBlock",
													"src": "19148:229:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19165:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19165:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19176:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19176:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19158:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19158:6:14"
																},
																"nativeSrc": "19158:21:14",
																"nodeType": "YulFunctionCall",
																"src": "19158:21:14"
															},
															"nativeSrc": "19158:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "19158:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19199:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19199:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19210:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19210:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19195:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19195:3:14"
																		},
																		"nativeSrc": "19195:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19195:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19215:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19215:2:14",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19188:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19188:6:14"
																},
																"nativeSrc": "19188:30:14",
																"nodeType": "YulFunctionCall",
																"src": "19188:30:14"
															},
															"nativeSrc": "19188:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "19188:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19238:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19238:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19249:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19249:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19234:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19234:3:14"
																		},
																		"nativeSrc": "19234:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19234:18:14"
																	},
																	{
																		"hexValue": "53656e64657220697320616c72656164792061206d656d626572206f66207468",
																		"kind": "string",
																		"nativeSrc": "19254:34:14",
																		"nodeType": "YulLiteral",
																		"src": "19254:34:14",
																		"type": "",
																		"value": "Sender is already a member of th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19227:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19227:6:14"
																},
																"nativeSrc": "19227:62:14",
																"nodeType": "YulFunctionCall",
																"src": "19227:62:14"
															},
															"nativeSrc": "19227:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "19227:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19309:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19309:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19320:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19320:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19305:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19305:3:14"
																		},
																		"nativeSrc": "19305:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19305:18:14"
																	},
																	{
																		"hexValue": "65206775696c64",
																		"kind": "string",
																		"nativeSrc": "19325:9:14",
																		"nodeType": "YulLiteral",
																		"src": "19325:9:14",
																		"type": "",
																		"value": "e guild"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19298:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19298:6:14"
																},
																"nativeSrc": "19298:37:14",
																"nodeType": "YulFunctionCall",
																"src": "19298:37:14"
															},
															"nativeSrc": "19298:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "19298:37:14"
														},
														{
															"nativeSrc": "19344:27:14",
															"nodeType": "YulAssignment",
															"src": "19344:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19356:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19356:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19367:3:14",
																		"nodeType": "YulLiteral",
																		"src": "19367:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19352:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19352:3:14"
																},
																"nativeSrc": "19352:19:14",
																"nodeType": "YulFunctionCall",
																"src": "19352:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19344:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19344:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60488ddff5208baf36b3dd08007032a8dda5e33f922203c6a10ac3af154485c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18974:403:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19125:9:14",
														"nodeType": "YulTypedName",
														"src": "19125:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19139:4:14",
														"nodeType": "YulTypedName",
														"src": "19139:4:14",
														"type": ""
													}
												],
												"src": "18974:403:14"
											},
											{
												"body": {
													"nativeSrc": "19490:101:14",
													"nodeType": "YulBlock",
													"src": "19490:101:14",
													"statements": [
														{
															"nativeSrc": "19500:26:14",
															"nodeType": "YulAssignment",
															"src": "19500:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19512:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19512:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19523:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19523:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19508:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19508:3:14"
																},
																"nativeSrc": "19508:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19508:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19500:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19500:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19542:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19542:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "19557:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19557:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19565:18:14",
																				"nodeType": "YulLiteral",
																				"src": "19565:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19553:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19553:3:14"
																		},
																		"nativeSrc": "19553:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19553:31:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19535:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19535:6:14"
																},
																"nativeSrc": "19535:50:14",
																"nodeType": "YulFunctionCall",
																"src": "19535:50:14"
															},
															"nativeSrc": "19535:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "19535:50:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "19382:209:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19459:9:14",
														"nodeType": "YulTypedName",
														"src": "19459:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19470:6:14",
														"nodeType": "YulTypedName",
														"src": "19470:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19481:4:14",
														"nodeType": "YulTypedName",
														"src": "19481:4:14",
														"type": ""
													}
												],
												"src": "19382:209:14"
											},
											{
												"body": {
													"nativeSrc": "19697:102:14",
													"nodeType": "YulBlock",
													"src": "19697:102:14",
													"statements": [
														{
															"nativeSrc": "19707:26:14",
															"nodeType": "YulAssignment",
															"src": "19707:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19719:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19719:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19730:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19730:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19715:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19715:3:14"
																},
																"nativeSrc": "19715:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19715:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19707:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19707:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19749:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19749:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "19764:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19764:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "19780:3:14",
																								"nodeType": "YulLiteral",
																								"src": "19780:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "19785:1:14",
																								"nodeType": "YulLiteral",
																								"src": "19785:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "19776:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "19776:3:14"
																						},
																						"nativeSrc": "19776:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "19776:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19789:1:14",
																						"nodeType": "YulLiteral",
																						"src": "19789:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "19772:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "19772:3:14"
																				},
																				"nativeSrc": "19772:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "19772:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19760:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19760:3:14"
																		},
																		"nativeSrc": "19760:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19760:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19742:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19742:6:14"
																},
																"nativeSrc": "19742:51:14",
																"nodeType": "YulFunctionCall",
																"src": "19742:51:14"
															},
															"nativeSrc": "19742:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "19742:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "19596:203:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19666:9:14",
														"nodeType": "YulTypedName",
														"src": "19666:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19677:6:14",
														"nodeType": "YulTypedName",
														"src": "19677:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19688:4:14",
														"nodeType": "YulTypedName",
														"src": "19688:4:14",
														"type": ""
													}
												],
												"src": "19596:203:14"
											},
											{
												"body": {
													"nativeSrc": "19885:103:14",
													"nodeType": "YulBlock",
													"src": "19885:103:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "19931:16:14",
																"nodeType": "YulBlock",
																"src": "19931:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "19940:1:14",
																					"nodeType": "YulLiteral",
																					"src": "19940:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19943:1:14",
																					"nodeType": "YulLiteral",
																					"src": "19943:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "19933:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19933:6:14"
																			},
																			"nativeSrc": "19933:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "19933:12:14"
																		},
																		"nativeSrc": "19933:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "19933:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19906:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "19906:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19915:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19915:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19902:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19902:3:14"
																		},
																		"nativeSrc": "19902:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19902:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19927:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19927:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19898:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19898:3:14"
																},
																"nativeSrc": "19898:32:14",
																"nodeType": "YulFunctionCall",
																"src": "19898:32:14"
															},
															"nativeSrc": "19895:52:14",
															"nodeType": "YulIf",
															"src": "19895:52:14"
														},
														{
															"nativeSrc": "19956:26:14",
															"nodeType": "YulAssignment",
															"src": "19956:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19972:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19972:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19966:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "19966:5:14"
																},
																"nativeSrc": "19966:16:14",
																"nodeType": "YulFunctionCall",
																"src": "19966:16:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "19956:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19956:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "19804:184:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19851:9:14",
														"nodeType": "YulTypedName",
														"src": "19851:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19862:7:14",
														"nodeType": "YulTypedName",
														"src": "19862:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19874:6:14",
														"nodeType": "YulTypedName",
														"src": "19874:6:14",
														"type": ""
													}
												],
												"src": "19804:184:14"
											},
											{
												"body": {
													"nativeSrc": "20122:145:14",
													"nodeType": "YulBlock",
													"src": "20122:145:14",
													"statements": [
														{
															"nativeSrc": "20132:26:14",
															"nodeType": "YulAssignment",
															"src": "20132:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20144:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20144:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20155:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20155:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20140:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20140:3:14"
																},
																"nativeSrc": "20140:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20140:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20132:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20132:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20174:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20174:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "20189:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "20189:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "20205:3:14",
																								"nodeType": "YulLiteral",
																								"src": "20205:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "20210:1:14",
																								"nodeType": "YulLiteral",
																								"src": "20210:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "20201:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "20201:3:14"
																						},
																						"nativeSrc": "20201:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "20201:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20214:1:14",
																						"nodeType": "YulLiteral",
																						"src": "20214:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "20197:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "20197:3:14"
																				},
																				"nativeSrc": "20197:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "20197:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20185:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20185:3:14"
																		},
																		"nativeSrc": "20185:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20185:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20167:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20167:6:14"
																},
																"nativeSrc": "20167:51:14",
																"nodeType": "YulFunctionCall",
																"src": "20167:51:14"
															},
															"nativeSrc": "20167:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "20167:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20238:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20238:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20249:2:14",
																				"nodeType": "YulLiteral",
																				"src": "20249:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20234:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20234:3:14"
																		},
																		"nativeSrc": "20234:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20234:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "20254:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "20254:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20227:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20227:6:14"
																},
																"nativeSrc": "20227:34:14",
																"nodeType": "YulFunctionCall",
																"src": "20227:34:14"
															},
															"nativeSrc": "20227:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "20227:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "19993:274:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20083:9:14",
														"nodeType": "YulTypedName",
														"src": "20083:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20094:6:14",
														"nodeType": "YulTypedName",
														"src": "20094:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20102:6:14",
														"nodeType": "YulTypedName",
														"src": "20102:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20113:4:14",
														"nodeType": "YulTypedName",
														"src": "20113:4:14",
														"type": ""
													}
												],
												"src": "19993:274:14"
											},
											{
												"body": {
													"nativeSrc": "20409:53:14",
													"nodeType": "YulBlock",
													"src": "20409:53:14",
													"statements": [
														{
															"nativeSrc": "20419:37:14",
															"nodeType": "YulAssignment",
															"src": "20419:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20444:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "20444:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20452:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20452:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "20426:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "20426:17:14"
																},
																"nativeSrc": "20426:30:14",
																"nodeType": "YulFunctionCall",
																"src": "20426:30:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20419:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20419:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "20272:190:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20385:3:14",
														"nodeType": "YulTypedName",
														"src": "20385:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20390:6:14",
														"nodeType": "YulTypedName",
														"src": "20390:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20401:3:14",
														"nodeType": "YulTypedName",
														"src": "20401:3:14",
														"type": ""
													}
												],
												"src": "20272:190:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IFarming_$1884__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n        array := allocate_memory(size)\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_IERC1155_$1881__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 96))\n        value3 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 128))\n        value4 := value_3\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IDAO_$1882__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$1867__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1857__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 64))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let _2 := shl(5, length)\n        let dst := allocate_memory(add(_2, 0x20))\n        let array := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(_1, _2), 0x20)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 0x20)\n        }\n        value0 := array\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 0x20))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 192)\n        tail := abi_encode_string_memory_ptr(value1, add(headStart, 192))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string_memory_ptr(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string_memory_ptr(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_encode_tuple_t_contract$_IStaking_$1883__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n        value5 := abi_decode_address(add(headStart, 160))\n        value6 := abi_decode_address(add(headStart, 192))\n        value7 := abi_decode_address(add(headStart, 224))\n        value8 := abi_decode_address(add(headStart, 256))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        end := abi_encode_string(value0, pos)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        switch and(slotValue, 1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let dataPos := keccak256(0, 0x20)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string_memory_ptr(value1, add(headStart, 64))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Player already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c02f3e50ed6b54b03eba0a4b156b8b2c122f79039273c822fbda9326f1dec609__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Guild already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ffd94407a19cf8baf61f33fd1e368fd23471d93aa28c06b7e15811441edc47e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid recipe\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6549b2fa5584e8c8ec502931a0b58219efc997d0668f171ad9fa4547ef7827c7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Player does not have all require\")\n        mstore(add(headStart, 96), \"d items\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_df115ebb113eb795e874836f8b2917a4781efe582dc2481c741971644f30822e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Guild does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60488ddff5208baf36b3dd08007032a8dda5e33f922203c6a10ac3af154485c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Sender is already a member of th\")\n        mstore(add(headStart, 96), \"e guild\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        end := abi_encode_string(value0, pos)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"636": [
									{
										"length": 32,
										"start": 7449
									},
									{
										"length": 32,
										"start": 7490
									},
									{
										"length": 32,
										"start": 7845
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610249575f3560e01c80638a13eea711610134578063bfb231d2116100b3578063e551ba4b11610078578063e551ba4b1461077b578063e63ab1e91461079a578063ee99205c146107ba578063f4e0d9ac146107d9578063f5e95acb146107f8578063f72c0d8b14610817575f80fd5b8063bfb231d214610646578063d3dcff7c14610677578063d547741f146106a6578063d836fc6f146106c5578063e2eb41ff146106e4575f80fd5b8063a75859e1116100f9578063a75859e11461057e578063a9834b67146105ab578063ad3cb1cc146105ca578063b001f61814610607578063be22d27d14610626575f80fd5b80638a13eea7146104f057806391d148541461050e578063965afa891461052d5780639a03d9a31461054c578063a217fddf1461056b575f80fd5b806341bec0d2116101cb57806352d1902d1161019057806352d1902d146104485780635c975abb1461045c5780635f2d6bcd1461047f5780636f347a781461049e5780637309cbbd146104bd5780638456cb59146104dc575f80fd5b806341bec0d2146103aa578063443c227c146103c95780634a7ffcbc146103f75780634f1ef286146104165780634fa4a1bb14610429575f80fd5b80632f2ff15d116102115780632f2ff15d1461032557806331fee8be1461034457806336568abe146103635780633f4ba83a146103825780633fa9fcf814610396575f80fd5b806301ffc9a71461024d57806302eec5681461028157806317435e1a146102b857806321f42268146102d9578063248a9ca3146102f8575b5f80fd5b348015610258575f80fd5b5061026c6102673660046122c5565b61084a565b60405190151581526020015b60405180910390f35b34801561028c575f80fd5b506005546102a0906001600160a01b031681565b6040516001600160a01b039091168152602001610278565b3480156102c3575f80fd5b506102d76102d23660046123a6565b610880565b005b3480156102e4575f80fd5b506002546102a0906001600160a01b031681565b348015610303575f80fd5b506103176103123660046123df565b6109b4565b604051908152602001610278565b348015610330575f80fd5b506102d761033f366004612411565b6109d4565b34801561034f575f80fd5b506102d761035e36600461243b565b6109f6565b34801561036e575f80fd5b506102d761037d366004612411565b610ae7565b34801561038d575f80fd5b506102d7610b1f565b3480156103a1575f80fd5b506102d7610b41565b3480156103b5575f80fd5b506102d76103c4366004612492565b610d0f565b3480156103d4575f80fd5b506103176103e33660046123df565b600d6020525f908152604090206001015481565b348015610402575f80fd5b506003546102a0906001600160a01b031681565b6102d76104243660046124ab565b610d48565b348015610434575f80fd5b506102d7610443366004612508565b610d63565b348015610453575f80fd5b50610317610f69565b348015610467575f80fd5b505f80516020612b0e8339815191525460ff1661026c565b34801561048a575f80fd5b506001546102a0906001600160a01b031681565b3480156104a9575f80fd5b506102d76104b8366004612549565b610f84565b3480156104c8575f80fd5b506102d76104d73660046123df565b61102e565b3480156104e7575f80fd5b506102d761134d565b3480156104fb575f80fd5b505f546102a0906001600160a01b031681565b348015610519575f80fd5b5061026c610528366004612411565b61136c565b348015610538575f80fd5b506102d7610547366004612492565b6113a2565b348015610557575f80fd5b506102d7610566366004612492565b6113dc565b348015610576575f80fd5b506103175f81565b348015610589575f80fd5b5061059d610598366004612492565b611416565b6040516102789291906125e3565b3480156105b6575f80fd5b506102d76105c536600461260c565b6114c0565b3480156105d5575f80fd5b506105fa604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161027891906126be565b348015610612575f80fd5b506102d7610621366004612492565b611570565b348015610631575f80fd5b506103175f80516020612a8e83398151915281565b348015610651575f80fd5b506106656106603660046123df565b6115aa565b604051610278969594939291906126d0565b348015610682575f80fd5b5061069661069136600461270d565b611664565b6040516102789493929190612735565b3480156106b1575f80fd5b506102d76106c0366004612411565b6117ba565b3480156106d0575f80fd5b506102d76106df366004612492565b6117d6565b3480156106ef575f80fd5b506107406106fe366004612492565b60096020525f90815260409020805460018201546002830154600384015460048501546005860154600687015460079097015495969495939492939192909188565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015260e082015261010001610278565b348015610786575f80fd5b506102d76107953660046123a6565b611810565b3480156107a5575f80fd5b506103175f80516020612ace83398151915281565b3480156107c5575f80fd5b506004546102a0906001600160a01b031681565b3480156107e4575f80fd5b506102d76107f3366004612492565b611967565b348015610803575f80fd5b506102d7610812366004612772565b6119a1565b348015610822575f80fd5b506103177f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b148061087a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f5b335f908152600a60205260409020548110156109b057335f908152600a602052604081208054839081106108b8576108b8612814565b905f5260205f2090600402019050826040516020016108d7919061283f565b60408051601f19818403018152908290528051602091820120916108fd91849101612882565b604051602081830303815290604052805190602001201480156109255750600381015460ff16155b156109a75760038101805460ff191660019081179091556002820154335f908152600960205260408120909201805491929091610963908490612907565b909155505060405133907fbe21664565742a9f42cbb6d005f92db59c7bcad35b12ef5b57b79e75676b247a9061099a9086906126be565b60405180910390a2505050565b50600101610882565b5050565b5f9081525f80516020612aee833981519152602052604090206001015490565b6109dd826109b4565b6109e681611b8b565b6109f08383611b95565b50505050565b5f80516020612a8e833981519152610a0d81611b8b565b6040805160c08101825260065480825260208083018a81528385018a9052606084018990526080840188905260a084018790525f92835260089091529290208151815591519091906001820190610a649082612965565b5060408201518160020155606082015181600301556080820151816004015560a082015181600501559050507f78d68ba0e8c23b92e7c700d99efed2719520cbd4af845b2c03ae251f9cdf3d5260065487604051610ac3929190612a1f565b60405180910390a160068054905f610ada83612a37565b9190505550505050505050565b6001600160a01b0381163314610b105760405163334bd91960e11b815260040160405180910390fd5b610b1a8282611c36565b505050565b5f80516020612ace833981519152610b3681611b8b565b610b3e611caf565b50565b335f9081526009602052604090205415610b9a5760405162461bcd60e51b8152602060048201526015602482015274506c6179657220616c72656164792065786973747360581b60448201526064015b60405180910390fd5b604051806101400160405280600181526020015f81526020016064815260200160328152602001600a81526020016005815260200160038152602001600281526020015f6001600160401b03811115610bf557610bf56122ec565b604051908082528060200260200182016040528015610c1e578160200160208202803683370190505b5081526020015f604051908082528060200260200182016040528015610c4e578160200160208202803683370190505b509052335f9081526009602090815260409182902083518155838201516001820155918301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e083015160078301556101008301518051610cc39260088501920190612215565b506101208201518051610ce0916009840191602090910190612215565b50506040513391507fb4cca19a27ce42915c3cee0cee28fc5d90969ee49f09ec71659546a63b5f7bc0905f90a2565b5f80516020612a8e833981519152610d2681611b8b565b505f80546001600160a01b0319166001600160a01b0392909216919091179055565b610d50611d0e565b610d5982611db4565b6109b08282611dde565b5f80516020612a8e833981519152610d7a81611b8b565b5f6001600160a01b0316600c84604051610d94919061283f565b908152604051908190036020019020546001600160a01b031614610df15760405162461bcd60e51b81526020600482015260146024820152734775696c6420616c72656164792065786973747360601b6044820152606401610b91565b604080516060810182528481526001600160a01b0384166020820152815160018082528184018452919283019181602001602082028036833750505090526001600160a01b0383165f908152600b6020526040902081518190610e549082612965565b506020828101516001830180546001600160a01b0319166001600160a01b0390921691909117905560408301518051610e93926002850192019061225e565b5050506001600160a01b0382165f908152600b602052604081206002018054849290610ec157610ec1612814565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600c84604051610efd919061283f565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f072208535a97b2e307167838c66aacd47f8de3a2cb92bc2ddb2b2b52009c9fd590610f5c90859085906125e3565b60405180910390a1505050565b5f610f72611e9a565b505f80516020612aae83398151915290565b5f80516020612a8e833981519152610f9b81611b8b565b335f908152600a602090815260408083208151608081018352888152808401889052918201869052606082018490528054600181018255908452919092208251600490920201908190610fee9082612965565b50602082015160018201906110039082612965565b50604082015160028201556060909101516003909101805460ff191691151591909117905550505050565b5f818152600d6020908152604080832081518154606094810282018501845292810183815290939192849284919084018282801561108957602002820191905f5260205f20905b815481526020019060010190808311611075575b5050505050815260200160018201548152505090505f815f015151116110e25760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642072656369706560901b6044820152606401610b91565b5f5b8151518110156111e3575f805b335f9081526009602052604090206008015481101561117c57835180518490811061111e5761111e612814565b602002602001015160095f336001600160a01b03166001600160a01b031681526020019081526020015f20600801828154811061115d5761115d612814565b905f5260205f20015403611174576001915061117c565b6001016110f1565b50806111da5760405162461bcd60e51b815260206004820152602760248201527f506c6179657220646f6573206e6f74206861766520616c6c207265717569726560448201526664206974656d7360c81b6064820152608401610b91565b506001016110e4565b505f5b815151811015611321575f5b335f9081526009602052604090206008015481101561131857825180518390811061121f5761121f612814565b602002602001015160095f336001600160a01b03166001600160a01b031681526020019081526020015f20600801828154811061125e5761125e612814565b905f5260205f2001540361131057335f908152600960205260409020600801805461128b90600190612a4f565b8154811061129b5761129b612814565b5f918252602080832090910154338352600990915260409091206008018054839081106112ca576112ca612814565b5f9182526020808320909101929092553381526009909152604090206008018054806112f8576112f8612a62565b600190038181905f5260205f20015f90559055611318565b6001016111f2565b506001016111e6565b50335f908152600960209081526040822092810151600890930180546001810182559083529120015550565b5f80516020612ace83398151915261136481611b8b565b610b3e611ee3565b5f9182525f80516020612aee833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b5f80516020612a8e8339815191526113b981611b8b565b50600380546001600160a01b0319166001600160a01b0392909216919091179055565b5f80516020612a8e8339815191526113f381611b8b565b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b600b6020525f90815260409020805481906114309061284a565b80601f016020809104026020016040519081016040528092919081815260200182805461145c9061284a565b80156114a75780601f1061147e576101008083540402835291602001916114a7565b820191905f5260205f20905b81548152906001019060200180831161148a57829003601f168201915b505050600190930154919250506001600160a01b031682565b5f80516020612a8e8339815191526114d781611b8b565b60408051808201825284815260208082018590526007545f908152600d825292909220815180519293919261150f9284920190612215565b50602091820151600190910155600754604080519182529181018490527f9becfd2b1fc8127387c5b0002a6cbc8382e6c8fb9f76dfd6cfd92cbe94383d0e910160405180910390a160078054905f61156683612a37565b9190505550505050565b5f80516020612a8e83398151915261158781611b8b565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b60086020525f9081526040902080546001820180549192916115cb9061284a565b80601f01602080910402602001604051908101604052809291908181526020018280546115f79061284a565b80156116425780601f1061161957610100808354040283529160200191611642565b820191905f5260205f20905b81548152906001019060200180831161162557829003601f168201915b5050505050908060020154908060030154908060040154908060050154905086565b600a602052815f5260405f20818154811061167d575f80fd5b905f5260205f2090600402015f9150915050805f01805461169d9061284a565b80601f01602080910402602001604051908101604052809291908181526020018280546116c99061284a565b80156117145780601f106116eb57610100808354040283529160200191611714565b820191905f5260205f20905b8154815290600101906020018083116116f757829003601f168201915b5050505050908060010180546117299061284a565b80601f01602080910402602001604051908101604052809291908181526020018280546117559061284a565b80156117a05780601f10611777576101008083540402835291602001916117a0565b820191905f5260205f20905b81548152906001019060200180831161178357829003601f168201915b50505050600283015460039093015491929160ff16905084565b6117c3826109b4565b6117cc81611b8b565b6109f08383611c36565b5f80516020612a8e8339815191526117ed81611b8b565b50600280546001600160a01b0319166001600160a01b0392909216919091179055565b5f600c82604051611821919061283f565b908152604051908190036020019020546001600160a01b03169050806118805760405162461bcd60e51b815260206004820152601460248201527311dd5a5b1908191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610b91565b6001600160a01b0381165f908152600b60205260408120905b600282015481101561193d57336001600160a01b03168260020182815481106118c4576118c4612814565b5f918252602090912001546001600160a01b0316036119355760405162461bcd60e51b815260206004820152602760248201527f53656e64657220697320616c72656164792061206d656d626572206f66207468604482015266194819dd5a5b1960ca1b6064820152608401610b91565b600101611899565b5060020180546001810182555f91825260209091200180546001600160a01b031916331790555050565b5f80516020612a8e83398151915261197e81611b8b565b50600480546001600160a01b0319166001600160a01b0392909216919091179055565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f811580156119e55750825b90505f826001600160401b03166001148015611a005750303b155b905081158015611a0e575080155b15611a2c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611a5657845460ff60401b1916600160401b1785555b611a5e611f2b565b611a66611f3b565b611a6e611f3b565b611a785f8f611b95565b50611a905f80516020612ace8339815191528e611b95565b50611abb7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38d611b95565b50611ad35f80516020612a8e8339815191528f611b95565b505f80546001600160a01b03199081166001600160a01b038e8116919091179092556001805482168d84161790556002805482168c84161790556003805482168b84161790556004805482168a8416179055600580549091169188169190911790558315611b7b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050505050565b610b3e8133611f43565b5f5f80516020612aee833981519152611bae848461136c565b611c2d575f848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055611be33390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061087a565b5f91505061087a565b5f5f80516020612aee833981519152611c4f848461136c565b15611c2d575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061087a565b611cb7611f7c565b5f80516020612b0e833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611d9457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611d885f80516020612aae833981519152546001600160a01b031690565b6001600160a01b031614155b15611db25760405163703e46dd60e11b815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36109b081611b8b565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611e38575060408051601f3d908101601f19168201909252611e3591810190612a76565b60015b611e6057604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610b91565b5f80516020612aae8339815191528114611e9057604051632a87526960e21b815260048101829052602401610b91565b610b1a8383611fab565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611db25760405163703e46dd60e11b815260040160405180910390fd5b611eeb612000565b5f80516020612b0e833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611cf0565b611f33612030565b611db2612079565b611db2612030565b611f4d828261136c565b6109b05760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610b91565b5f80516020612b0e8339815191525460ff16611db257604051638dfc202b60e01b815260040160405180910390fd5b611fb482612099565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611ff857610b1a82826120fc565b6109b061216e565b5f80516020612b0e8339815191525460ff1615611db25760405163d93c066560e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16611db257604051631afcd79f60e31b815260040160405180910390fd5b612081612030565b5f80516020612b0e833981519152805460ff19169055565b806001600160a01b03163b5f036120ce57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610b91565b5f80516020612aae83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051612118919061283f565b5f60405180830381855af49150503d805f8114612150576040519150601f19603f3d011682016040523d82523d5f602084013e612155565b606091505b509150915061216585838361218d565b95945050505050565b3415611db25760405163b398979f60e01b815260040160405180910390fd5b6060826121a25761219d826121ec565b6121e5565b81511580156121b957506001600160a01b0384163b155b156121e257604051639996b31560e01b81526001600160a01b0385166004820152602401610b91565b50805b9392505050565b8051156121fc5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b828054828255905f5260205f2090810192821561224e579160200282015b8281111561224e578251825591602001919060010190612233565b5061225a9291506122b1565b5090565b828054828255905f5260205f2090810192821561224e579160200282015b8281111561224e57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061227c565b5b8082111561225a575f81556001016122b2565b5f602082840312156122d5575f80fd5b81356001600160e01b0319811681146121e5575f80fd5b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b0381118282101715612328576123286122ec565b604052919050565b5f806001600160401b03841115612349576123496122ec565b50601f8301601f191660200161235e81612300565b915050828152838383011115612372575f80fd5b828260208301375f602084830101529392505050565b5f82601f830112612397575f80fd5b6121e583833560208501612330565b5f602082840312156123b6575f80fd5b81356001600160401b038111156123cb575f80fd5b6123d784828501612388565b949350505050565b5f602082840312156123ef575f80fd5b5035919050565b80356001600160a01b038116811461240c575f80fd5b919050565b5f8060408385031215612422575f80fd5b82359150612432602084016123f6565b90509250929050565b5f805f805f60a0868803121561244f575f80fd5b85356001600160401b03811115612464575f80fd5b61247088828901612388565b9860208801359850604088013597606081013597506080013595509350505050565b5f602082840312156124a2575f80fd5b6121e5826123f6565b5f80604083850312156124bc575f80fd5b6124c5836123f6565b915060208301356001600160401b038111156124df575f80fd5b8301601f810185136124ef575f80fd5b6124fe85823560208401612330565b9150509250929050565b5f8060408385031215612519575f80fd5b82356001600160401b0381111561252e575f80fd5b61253a85828601612388565b925050612432602084016123f6565b5f805f6060848603121561255b575f80fd5b83356001600160401b03811115612570575f80fd5b61257c86828701612388565b93505060208401356001600160401b03811115612597575f80fd5b6125a386828701612388565b93969395505050506040919091013590565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b604081525f6125f560408301856125b5565b905060018060a01b03831660208301529392505050565b5f806040838503121561261d575f80fd5b82356001600160401b03811115612632575f80fd5b8301601f81018513612642575f80fd5b80356001600160401b0381111561265b5761265b6122ec565b8060051b61266b60208201612300565b91825260208184018101929081019088841115612686575f80fd5b6020850194505b838510156126ac5784358083526020958601959093509091019061268d565b98602097909701359750505050505050565b602081525f6121e560208301846125b5565b86815260c060208201525f6126e860c08301886125b5565b90508560408301528460608301528360808301528260a0830152979650505050505050565b5f806040838503121561271e575f80fd5b612727836123f6565b946020939093013593505050565b608081525f61274760808301876125b5565b828103602084015261275981876125b5565b6040840195909552505090151560609091015292915050565b5f805f805f805f805f6101208a8c03121561278b575f80fd5b6127948a6123f6565b98506127a260208b016123f6565b97506127b060408b016123f6565b96506127be60608b016123f6565b95506127cc60808b016123f6565b94506127da60a08b016123f6565b93506127e860c08b016123f6565b92506127f660e08b016123f6565b91506128056101008b016123f6565b90509295985092959850929598565b634e487b7160e01b5f52603260045260245ffd5b5f81518060208401855e5f93019283525090919050565b5f6121e58284612828565b600181811c9082168061285e57607f821691505b60208210810361287c57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f80835461288f8161284a565b6001821680156128a657600181146128bb576128e8565b60ff19831686528115158202860193506128e8565b865f5260205f205f5b838110156128e0578154888201526001909101906020016128c4565b505081860193505b509195945050505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561087a5761087a6128f3565b601f821115610b1a57805f5260205f20601f840160051c8101602085101561293f5750805b601f840160051c820191505b8181101561295e575f815560010161294b565b5050505050565b81516001600160401b0381111561297e5761297e6122ec565b6129928161298c845461284a565b8461291a565b6020601f8211600181146129c4575f83156129ad5750848201515b5f19600385901b1c1916600184901b17845561295e565b5f84815260208120601f198516915b828110156129f357878501518255602094850194600190920191016129d3565b5084821015612a1057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b828152604060208201525f6123d760408301846125b5565b5f60018201612a4857612a486128f3565b5060010190565b8181038181111561087a5761087a6128f3565b634e487b7160e01b5f52603160045260245ffd5b5f60208284031215612a86575f80fd5b505191905056fe9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a264697066735822122017e50992d8e441c501e255dd0dd94ae0246f27bf1d9831d9196c551577a7a43e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x249 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A13EEA7 GT PUSH2 0x134 JUMPI DUP1 PUSH4 0xBFB231D2 GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xE551BA4B GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xE551BA4B EQ PUSH2 0x77B JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x79A JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0x7BA JUMPI DUP1 PUSH4 0xF4E0D9AC EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xF5E95ACB EQ PUSH2 0x7F8 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x817 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xD3DCFF7C EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xD836FC6F EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x6E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA75859E1 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA75859E1 EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0xA9834B67 EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xB001F618 EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0xBE22D27D EQ PUSH2 0x626 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A13EEA7 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x965AFA89 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x9A03D9A3 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x56B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41BEC0D2 GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x5F2D6BCD EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x6F347A78 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x7309CBBD EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41BEC0D2 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x443C227C EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x4A7FFCBC EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x4FA4A1BB EQ PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x211 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x31FEE8BE EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x3FA9FCF8 EQ PUSH2 0x396 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x2EEC568 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x17435E1A EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x21F42268 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2F8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C5 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x23DF JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x9D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x243B JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0xB1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0xB41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xD0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x23DF JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x2508 JUMP JUMPDEST PUSH2 0xD63 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0xF69 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2549 JUMP JUMPDEST PUSH2 0xF84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x4D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x23DF JUMP JUMPDEST PUSH2 0x102E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x134D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x136C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x13A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x13DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x59D PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x5C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x260C JUMP JUMPDEST PUSH2 0x14C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x26BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x612 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x621 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1570 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x631 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x665 PUSH2 0x660 CALLDATASIZE PUSH1 0x4 PUSH2 0x23DF JUMP JUMPDEST PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x696 PUSH2 0x691 CALLDATASIZE PUSH1 0x4 PUSH2 0x270D JUMP JUMPDEST PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2735 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x6C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x17BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x6DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x17D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x740 PUSH2 0x6FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x795 CALLDATASIZE PUSH1 0x4 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x2A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x7F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1967 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x803 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x812 CALLDATASIZE PUSH1 0x4 PUSH2 0x2772 JUMP JUMPDEST PUSH2 0x19A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x822 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x87A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x9B0 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x8B8 JUMPI PUSH2 0x8B8 PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP2 PUSH2 0x8FD SWAP2 DUP5 SWAP2 ADD PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ DUP1 ISZERO PUSH2 0x925 JUMPI POP PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x963 SWAP1 DUP5 SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xBE21664565742A9F42CBB6D005F92DB59C7BCAD35B12EF5B57B79E75676B247A SWAP1 PUSH2 0x99A SWAP1 DUP7 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x882 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AEE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9DD DUP3 PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x9E6 DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 PUSH2 0x1B95 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA0D DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP11 DUP2 MSTORE DUP4 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP8 SWAP1 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xA64 SWAP1 DUP3 PUSH2 0x2965 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP PUSH32 0x78D68BA0E8C23B92E7C700D99EFED2719520CBD4AF845B2C03AE251F9CDF3D52 PUSH1 0x6 SLOAD DUP8 PUSH1 0x40 MLOAD PUSH2 0xAC3 SWAP3 SWAP2 SWAP1 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0xADA DUP4 PUSH2 0x2A37 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xB10 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1A DUP3 DUP3 PUSH2 0x1C36 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB36 DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0xB3E PUSH2 0x1CAF JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506C6179657220616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xBF5 JUMPI PUSH2 0xBF5 PUSH2 0x22EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC1E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC4E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xCC3 SWAP3 PUSH1 0x8 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x2215 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xCE0 SWAP2 PUSH1 0x9 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2215 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP2 POP PUSH32 0xB4CCA19A27CE42915C3CEE0CEE28FC5D90969EE49F09EC71659546A63B5F7BC0 SWAP1 PUSH0 SWAP1 LOG2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD26 DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD50 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0xD59 DUP3 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x9B0 DUP3 DUP3 PUSH2 0x1DDE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD7A DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP5 PUSH1 0x40 MLOAD PUSH2 0xD94 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4775696C6420616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP5 ADD DUP5 MSTORE SWAP2 SWAP3 DUP4 ADD SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0xE54 SWAP1 DUP3 PUSH2 0x2965 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xE93 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x225E JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xEC1 JUMPI PUSH2 0xEC1 PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xC DUP5 PUSH1 0x40 MLOAD PUSH2 0xEFD SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0x72208535A97B2E307167838C66AACD47F8DE3A2CB92BC2DDB2B2B52009C9FD5 SWAP1 PUSH2 0xF5C SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF72 PUSH2 0x1E9A JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xF9B DUP2 PUSH2 0x1B8B JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP9 DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 DUP3 MLOAD PUSH1 0x4 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SWAP1 PUSH2 0xFEE SWAP1 DUP3 PUSH2 0x2965 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x1003 SWAP1 DUP3 PUSH2 0x2965 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x60 SWAP5 DUP2 MUL DUP3 ADD DUP6 ADD DUP5 MSTORE SWAP3 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1089 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1075 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD MLOAD GT PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420726563697065 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x11E3 JUMPI PUSH0 DUP1 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD DUP2 LT ISZERO PUSH2 0x117C JUMPI DUP4 MLOAD DUP1 MLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x111E JUMPI PUSH2 0x111E PUSH2 0x2814 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x9 PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x115D JUMPI PUSH2 0x115D PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SUB PUSH2 0x1174 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x117C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10F1 JUMP JUMPDEST POP DUP1 PUSH2 0x11DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6179657220646F6573206E6F74206861766520616C6C2072657175697265 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x64206974656D73 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB91 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x10E4 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1321 JUMPI PUSH0 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1318 JUMPI DUP3 MLOAD DUP1 MLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x121F JUMPI PUSH2 0x121F PUSH2 0x2814 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x9 PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x125E JUMPI PUSH2 0x125E PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SUB PUSH2 0x1310 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x128B SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2A4F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x129B JUMPI PUSH2 0x129B PUSH2 0x2814 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD CALLER DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x12CA JUMPI PUSH2 0x12CA PUSH2 0x2814 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE CALLER DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH2 0x12F8 JUMPI PUSH2 0x12F8 PUSH2 0x2A62 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x11F2 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x11E6 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 DUP2 ADD MLOAD PUSH1 0x8 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD SSTORE POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1364 DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0xB3E PUSH2 0x1EE3 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AEE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x13B9 DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x13F3 DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x1430 SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x145C SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x147E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x148A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x14D7 DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x7 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x150F SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x2215 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x9BECFD2B1FC8127387C5B0002A6CBC8382E6C8FB9F76DFD6CFD92CBE94383D0E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x1566 DUP4 PUSH2 0x2A37 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1587 DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x15CB SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15F7 SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1642 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1619 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1642 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1625 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x167D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x169D SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16C9 SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1714 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16EB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1714 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1729 SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1755 SWAP1 PUSH2 0x284A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1777 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1783 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x17C3 DUP3 PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x17CC DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 PUSH2 0x1C36 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x17ED DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0xC DUP3 PUSH1 0x40 MLOAD PUSH2 0x1821 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x1880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x11DD5A5B1908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x193D JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18C4 JUMPI PUSH2 0x18C4 PUSH2 0x2814 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220697320616C72656164792061206D656D626572206F66207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x194819DD5A5B19 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1899 JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x197E DUP2 PUSH2 0x1B8B JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x19E5 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1A00 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1A0E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1A2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x1A56 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x1A5E PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x1A66 PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x1A6E PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x1A78 PUSH0 DUP16 PUSH2 0x1B95 JUMP JUMPDEST POP PUSH2 0x1A90 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP15 PUSH2 0x1B95 JUMP JUMPDEST POP PUSH2 0x1ABB PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP14 PUSH2 0x1B95 JUMP JUMPDEST POP PUSH2 0x1AD3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A8E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP16 PUSH2 0x1B95 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND DUP14 DUP5 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 AND DUP13 DUP5 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND DUP12 DUP5 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 AND DUP11 DUP5 AND OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x1B7B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB3E DUP2 CALLER PUSH2 0x1F43 JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AEE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1BAE DUP5 DUP5 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x1C2D JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1BE3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x87A JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x87A JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AEE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1C4F DUP5 DUP5 PUSH2 0x136C JUMP JUMPDEST ISZERO PUSH2 0x1C2D JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x87A JUMP JUMPDEST PUSH2 0x1CB7 PUSH2 0x1F7C JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1D94 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D88 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x9B0 DUP2 PUSH2 0x1B8B JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E38 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1E35 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E60 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1E90 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH2 0xB1A DUP4 DUP4 PUSH2 0x1FAB JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EEB PUSH2 0x2000 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x1F33 PUSH2 0x2030 JUMP JUMPDEST PUSH2 0x1DB2 PUSH2 0x2079 JUMP JUMPDEST PUSH2 0x1DB2 PUSH2 0x2030 JUMP JUMPDEST PUSH2 0x1F4D DUP3 DUP3 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FB4 DUP3 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1FF8 JUMPI PUSH2 0xB1A DUP3 DUP3 PUSH2 0x20FC JUMP JUMPDEST PUSH2 0x9B0 PUSH2 0x216E JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2081 PUSH2 0x2030 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B0E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x20CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2118 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2150 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2165 DUP6 DUP4 DUP4 PUSH2 0x218D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x21A2 JUMPI PUSH2 0x219D DUP3 PUSH2 0x21EC JUMP JUMPDEST PUSH2 0x21E5 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x21B9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x21E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB91 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x21FC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x224E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x224E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2233 JUMP JUMPDEST POP PUSH2 0x225A SWAP3 SWAP2 POP PUSH2 0x22B1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x224E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x224E JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x227C JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x225A JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x22B2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x21E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2328 JUMPI PUSH2 0x2328 PUSH2 0x22EC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT ISZERO PUSH2 0x2349 JUMPI PUSH2 0x2349 PUSH2 0x22EC JUMP JUMPDEST POP PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x235E DUP2 PUSH2 0x2300 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2372 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2397 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x21E5 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2330 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x23CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x23D7 DUP5 DUP3 DUP6 ADD PUSH2 0x2388 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x240C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2422 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2432 PUSH1 0x20 DUP5 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x244F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2464 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2470 DUP9 DUP3 DUP10 ADD PUSH2 0x2388 JUMP JUMPDEST SWAP9 PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x21E5 DUP3 PUSH2 0x23F6 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24BC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x24C5 DUP4 PUSH2 0x23F6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x24EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x24FE DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2330 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2519 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x252E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x253A DUP6 DUP3 DUP7 ADD PUSH2 0x2388 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2432 PUSH1 0x20 DUP5 ADD PUSH2 0x23F6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x255B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2570 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x257C DUP7 DUP3 DUP8 ADD PUSH2 0x2388 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2597 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x25A3 DUP7 DUP3 DUP8 ADD PUSH2 0x2388 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x25F5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x25B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x261D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2632 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2642 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x265B JUMPI PUSH2 0x265B PUSH2 0x22EC JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x266B PUSH1 0x20 DUP3 ADD PUSH2 0x2300 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x2686 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x26AC JUMPI DUP5 CALLDATALOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH2 0x268D JUMP JUMPDEST SWAP9 PUSH1 0x20 SWAP8 SWAP1 SWAP8 ADD CALLDATALOAD SWAP8 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x21E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x25B5 JUMP JUMPDEST DUP7 DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x26E8 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x25B5 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE DUP4 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x271E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2727 DUP4 PUSH2 0x23F6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0x2747 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x25B5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2759 DUP2 DUP8 PUSH2 0x25B5 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP SWAP1 ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x278B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2794 DUP11 PUSH2 0x23F6 JUMP JUMPDEST SWAP9 POP PUSH2 0x27A2 PUSH1 0x20 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP8 POP PUSH2 0x27B0 PUSH1 0x40 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP7 POP PUSH2 0x27BE PUSH1 0x60 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP6 POP PUSH2 0x27CC PUSH1 0x80 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP5 POP PUSH2 0x27DA PUSH1 0xA0 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x27E8 PUSH1 0xC0 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP3 POP PUSH2 0x27F6 PUSH1 0xE0 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2805 PUSH2 0x100 DUP12 ADD PUSH2 0x23F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21E5 DUP3 DUP5 PUSH2 0x2828 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x285E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x287C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SLOAD PUSH2 0x288F DUP2 PUSH2 0x284A JUMP JUMPDEST PUSH1 0x1 DUP3 AND DUP1 ISZERO PUSH2 0x28A6 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x28BB JUMPI PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x28E8 JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28E0 JUMPI DUP2 SLOAD DUP9 DUP3 ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x28C4 JUMP JUMPDEST POP POP DUP2 DUP7 ADD SWAP4 POP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x87A JUMPI PUSH2 0x87A PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB1A JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x293F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x295E JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x294B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x297E JUMPI PUSH2 0x297E PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x2992 DUP2 PUSH2 0x298C DUP5 SLOAD PUSH2 0x284A JUMP JUMPDEST DUP5 PUSH2 0x291A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x29C4 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x29AD JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x295E JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x29F3 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x29D3 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2A10 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x23D7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25B5 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2A48 JUMPI PUSH2 0x2A48 PUSH2 0x28F3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x87A JUMPI PUSH2 0x87A PUSH2 0x28F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A86 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID SWAP12 PUSH26 0x46ABD96DCCBE6CFC6CC2C13300AB429D93E16FA72DC459EECCDA PUSH20 0x817F08360894A13BA1A3210667C828492DB98DCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A264697066735822122017E50992D8E441C501E255DD0D 0xD9 BLOBBASEFEE 0xE0 0x24 PUSH16 0x27BF1D9831D9196C551577A7A43E6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "1186:7814:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;-1:-1:-1;3443:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:14;;463:22;445:41;;433:2;418:18;3443:202:0;;;;;;;;1698:31:13;;;;;;;;;;-1:-1:-1;1698:31:13;;;;-1:-1:-1;;;;;1698:31:13;;;;;;-1:-1:-1;;;;;678:32:14;;;660:51;;648:2;633:18;1698:31:13;497:220:14;5907:532:13;;;;;;;;;;-1:-1:-1;5907:532:13;;;;;:::i;:::-;;:::i;:::-;;1598:28;;;;;;;;;;-1:-1:-1;1598:28:13;;;;-1:-1:-1;;;;;1598:28:13;;;4759:191:0;;;;;;;;;;-1:-1:-1;4759:191:0;;;;;:::i;:::-;;:::i;:::-;;;2745:25:14;;;2733:2;2718:18;4759:191:0;2599:177:14;5246:136:0;;;;;;;;;;-1:-1:-1;5246:136:0;;;;;:::i;:::-;;:::i;5374:315:13:-;;;;;;;;;;-1:-1:-1;5374:315:13;;;;;:::i;:::-;;:::i;6348:245:0:-;;;;;;;;;;-1:-1:-1;6348:245:0;;;;;:::i;:::-;;:::i;4935:75:13:-;;;;;;;;;;;;;:::i;5120:248::-;;;;;;;;;;;;;:::i;3984:134::-;;;;;;;;;;-1:-1:-1;3984:134:13;;;;;:::i;:::-;;:::i;2756:38::-;;;;;;;;;;-1:-1:-1;2756:38:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;1632:23;;;;;;;;;;-1:-1:-1;1632:23:13;;;;-1:-1:-1;;;;;1632:23:13;;;4158:214:2;;;;;;:::i;:::-;;:::i;6445:368:13:-;;;;;;;;;;-1:-1:-1;6445:368:13;;;;;:::i;:::-;;:::i;3705:134:2:-;;;;;;;;;;;;;:::i;2692:145:4:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2821:9:4;;;2692:145;;1566:26:13;;;;;;;;;;-1:-1:-1;1566:26:13;;;;-1:-1:-1;;;;;1566:26:13;;;5695:206;;;;;;;;;;-1:-1:-1;5695:206:13;;;;;:::i;:::-;;:::i;7585:1299::-;;;;;;;;;;-1:-1:-1;7585:1299:13;;;;;:::i;:::-;;:::i;4858:71::-;;;;;;;;;;;;;:::i;1536:24::-;;;;;;;;;;-1:-1:-1;1536:24:13;;;;-1:-1:-1;;;;;1536:24:13;;;3732:207:0;;;;;;;;;;-1:-1:-1;3732:207:0;;;;;:::i;:::-;;:::i;4419:127:13:-;;;;;;;;;;-1:-1:-1;4419:127:13;;;;;:::i;:::-;;:::i;4124:139::-;;;;;;;;;;-1:-1:-1;4124:139:13;;;;;:::i;:::-;;:::i;2317:49:0:-;;;;;;;;;;-1:-1:-1;2317:49:0;2362:4;2317:49;;2661:39:13;;;;;;;;;;-1:-1:-1;2661:39:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;7337:242::-;;;;;;;;;;-1:-1:-1;7337:242:13;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;4705:147:13:-;;;;;;;;;;-1:-1:-1;4705:147:13;;;;;:::i;:::-;;:::i;1459:70::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1459:70:13;;2521:34;;;;;;;;;;-1:-1:-1;2521:34:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;2608:47::-;;;;;;;;;;-1:-1:-1;2608:47:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;5662:138:0:-;;;;;;;;;;-1:-1:-1;5662:138:0;;;;;:::i;:::-;;:::i;4269:144:13:-;;;;;;;;;;-1:-1:-1;4269:144:13;;;;;:::i;:::-;;:::i;2561:41::-;;;;;;;;;;-1:-1:-1;2561:41:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10736:25:14;;;10792:2;10777:18;;10770:34;;;;10820:18;;;10813:34;;;;10878:2;10863:18;;10856:34;;;;10921:3;10906:19;;10899:35;10965:3;10950:19;;10943:35;11009:3;10994:19;;10987:35;11053:3;11038:19;;11031:35;10723:3;10708:19;2561:41:13;10393:679:14;6819:512:13;;;;;;;;;;-1:-1:-1;6819:512:13;;;;;:::i;:::-;;:::i;1319:62::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1319:62:13;;1661:31;;;;;;;;;;-1:-1:-1;1661:31:13;;;;-1:-1:-1;;;;;1661:31:13;;;4552:147;;;;;;;;;;-1:-1:-1;4552:147:13;;;;;:::i;:::-;;:::i;3081:897::-;;;;;;;;;;-1:-1:-1;3081:897:13;;;;;:::i;:::-;;:::i;1387:66::-;;;;;;;;;;;;1427:26;1387:66;;3443:202:0;3528:4;-1:-1:-1;;;;;;3551:47:0;;-1:-1:-1;;;3551:47:0;;:87;;-1:-1:-1;;;;;;;;;;1133:40:5;;;3602:36:0;3544:94;3443:202;-1:-1:-1;;3443:202:0:o;5907:532:13:-;5978:6;5973:460;6007:10;5994:24;;;;:12;:24;;;;;:31;5990:35;;5973:460;;;6081:10;6046:19;6068:24;;;:12;:24;;;;;:27;;6093:1;;6068:27;;;;;;:::i;:::-;;;;;;;;;;;6046:49;;6184:10;6167:28;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6167:28:13;;;;;;;;;;6157:39;;6167:28;6157:39;;;;;6123:29;;6140:5;;6123:29;;:::i;:::-;;;;;;;;;;;;;6113:40;;;;;;:83;:103;;;;-1:-1:-1;6201:15:13;;;;;;6200:16;6113:103;6109:314;;;6236:15;;;:22;;-1:-1:-1;;6236:22:13;6254:4;6236:22;;;;;;6310:14;;;;6284:10;6236:15;6276:19;;;:7;:19;;;;;:30;;;:48;;6310:14;;6276:30;;:48;;6310:14;;6276:48;:::i;:::-;;;;-1:-1:-1;;6347:38:13;;6362:10;;6347:38;;;;6374:10;;6347:38;:::i;:::-;;;;;;;;6403:5;5973:460;5907:532;:::o;6109:314::-;-1:-1:-1;6027:3:13;;5973:460;;;;5907:532;:::o;4759:191:0:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:0;;;;;:24;;;;4759:191::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;5374:315:13:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;5545:73:13::1;::::0;;::::1;::::0;::::1;::::0;;5550:10:::1;::::0;5545:73;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5525:17:13;;;:5:::1;:17:::0;;;;;;:93;;;;;;5545:73;;5525:17;:93:::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5633:27;5643:10;;5655:4;5633:27;;;;;;;:::i;:::-;;;;;;;;5670:10;:12:::0;;;:10:::1;:12;::::0;::::1;:::i;:::-;;;;;;5374:315:::0;;;;;;:::o;6348:245:0:-;-1:-1:-1;;;;;6441:34:0;;966:10:3;6441:34:0;6437:102;;6498:30;;-1:-1:-1;;;6498:30:0;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;4935:75:13:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;4993:10:13::1;:8;:10::i;:::-;4935:75:::0;:::o;5120:248::-;5177:10;5169:19;;;;:7;:19;;;;;:25;:30;5161:64;;;;-1:-1:-1;;;5161:64:13;;16859:2:14;5161:64:13;;;16841:21:14;16898:2;16878:18;;;16871:30;-1:-1:-1;;;16917:18:14;;;16910:51;16978:18;;5161:64:13;;;;;;;;;5257;;;;;;;;5264:1;5257:64;;;;5267:1;5257:64;;;;5270:3;5257:64;;;;5275:2;5257:64;;;;5279:2;5257:64;;;;5283:1;5257:64;;;;5286:1;5257:64;;;;5289:1;5257:64;;;;5303:1;-1:-1:-1;;;;;5292:13:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5292:13:13;-1:-1:-1;5257:64:13;;;;5318:1;5307:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5307:13:13;-1:-1:-1;5257:64:13;;5243:10;5235:19;;;;:7;:19;;;;;;;;;:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5235:86:13;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;5336:25:13;;5350:10;;-1:-1:-1;5336:25:13;;;;;5120:248::o;3984:134::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;4077:10:13::1;:34:::0;;-1:-1:-1;;;;;;4077:34:13::1;-1:-1:-1::0;;;;;4077:34:13;;;::::1;::::0;;;::::1;::::0;;3984:134::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;6445:368:13:-:0;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;6588:1:13::1;-1:-1:-1::0;;;;;6553:37:13::1;:17;6571:4;6553:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;6553:23:13::1;:37;6545:70;;;::::0;-1:-1:-1;;;6545:70:13;;17209:2:14;6545:70:13::1;::::0;::::1;17191:21:14::0;17248:2;17228:18;;;17221:30;-1:-1:-1;;;17267:18:14;;;17260:50;17327:18;;6545:70:13::1;17007:344:14::0;6545:70:13::1;6642:37;::::0;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;6642:37:13;::::1;;::::0;::::1;::::0;6662:16;;6676:1:::1;6662:16:::0;;;;;::::1;::::0;;6642:37;;;;;6662:16:::1;;;;;;;;;;-1:-1:-1::0;;;6642:37:13;;-1:-1:-1;;;;;6625:14:13;::::1;;::::0;;;:6:::1;:14;::::0;;;;:54;;:14;;:54:::1;::::0;:14;:54:::1;:::i;:::-;-1:-1:-1::0;6625:54:13::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;6625:54:13::1;-1:-1:-1::0;;;;;6625:54:13;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;;;;6689:14:13;::::1;;::::0;;;:6:::1;:14;::::0;;;;:22:::1;;:25:::0;;6717:6;;6689:14;:25:::1;;;;:::i;:::-;;;;;;;;;:34;;;;;-1:-1:-1::0;;;;;6689:34:13::1;;;;;-1:-1:-1::0;;;;;6689:34:13::1;;;;;;6759:6;6733:17;6751:4;6733:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:32;;-1:-1:-1;;;;;6733:32:13;;;::::1;-1:-1:-1::0;;;;;;6733:32:13;;::::1;::::0;;;::::1;::::0;;;6780:26:::1;::::0;::::1;::::0;6793:4;;6799:6;;6780:26:::1;:::i;:::-;;;;;;;;6445:368:::0;;;:::o;3705:134:2:-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:2;:::o;5695:206:13:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;5834:10:13::1;5821:24;::::0;;;:12:::1;:24;::::0;;;;;;;5851:42;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;;;5821:73;;5851:42;5821:73;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;;::::0;;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;5821:73:13::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;5821:73:13::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;5821:73:13::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;;;;5695:206:13:o;7585:1299::-;7636:20;7659:17;;;:7;:17;;;;;;;;7636:40;;;;;;;;;;;;;;;;;;;;;;7659:17;;7636:40;;7659:17;;7636:40;;;7659:17;7636:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7718:1;7694:6;:14;;;:21;:25;7686:52;;;;-1:-1:-1;;;7686:52:13;;17558:2:14;7686:52:13;;;17540:21:14;17597:2;17577:18;;;17570:30;-1:-1:-1;;;17616:18:14;;;17609:44;17670:18;;7686:52:13;17356:338:14;7686:52:13;7812:6;7807:417;7828:14;;:21;7824:25;;7807:417;;;7870:12;7909:6;7904:237;7933:10;7925:19;;;;:7;:19;;;;;:29;;:36;7921:40;;7904:237;;;8026:14;;:17;;8041:1;;8026:17;;;;;;:::i;:::-;;;;;;;7990:7;:19;7998:10;-1:-1:-1;;;;;7990:19:13;-1:-1:-1;;;;;7990:19:13;;;;;;;;;;;;:29;;8020:1;7990:32;;;;;;;;:::i;:::-;;;;;;;;;:53;7986:141;;8077:4;8067:14;;8103:5;;7986:141;7963:3;;7904:237;;;;8162:7;8154:59;;;;-1:-1:-1;;;8154:59:13;;17901:2:14;8154:59:13;;;17883:21:14;17940:2;17920:18;;;17913:30;17979:34;17959:18;;;17952:62;-1:-1:-1;;;18030:18:14;;;18023:37;18077:19;;8154:59:13;17699:403:14;8154:59:13;-1:-1:-1;7851:3:13;;7807:417;;;;8300:6;8295:459;8316:14;;:21;8312:25;;8295:459;;;8363:6;8358:386;8387:10;8379:19;;;;:7;:19;;;;;:29;;:36;8375:40;;8358:386;;;8480:14;;:17;;8495:1;;8480:17;;;;;;:::i;:::-;;;;;;;8444:7;:19;8452:10;-1:-1:-1;;;;;8444:19:13;-1:-1:-1;;;;;8444:19:13;;;;;;;;;;;;:29;;8474:1;8444:32;;;;;;;;:::i;:::-;;;;;;;;;:53;8440:290;;8564:10;8556:19;;;;:7;:19;;;;;:29;;8586:36;;:40;;8625:1;;8586:40;:::i;:::-;8556:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;8529:10;8521:19;;:7;:19;;;;;;;:29;;:32;;8551:1;;8521:32;;;;;;:::i;:::-;;;;;;;;;;;;:106;;;;8657:10;8649:19;;:7;:19;;;;;;:29;;:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8706:5;;8440:290;8417:3;;8358:386;;;-1:-1:-1;8339:3:13;;8295:459;;;-1:-1:-1;8830:10:13;8822:19;;;;:7;:19;;;;;;;8857;;;;8822:29;;;;:55;;;;;;;;;;;;;;-1:-1:-1;7585:1299:13:o;4858:71::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;4914:8:13::1;:6;:8::i;3732:207:0:-:0;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:0;;;;;;;;-1:-1:-1;;;;;3901:31:0;;;;;;;;;;;;;;;3732:207::o;4419:127:13:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;4508:11:13::1;:31:::0;;-1:-1:-1;;;;;;4508:31:13::1;-1:-1:-1::0;;;;;4508:31:13;;;::::1;::::0;;;::::1;::::0;;4419:127::o;4124:139::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;4219:11:13::1;:37:::0;;-1:-1:-1;;;;;;4219:37:13::1;-1:-1:-1::0;;;;;4219:37:13;;;::::1;::::0;;;::::1;::::0;;4124:139::o;2661:39::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2661:39:13;;;;;;;-1:-1:-1;;;;;;;2661:39:13;;:::o;7337:242::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;7465:29:13::1;::::0;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;7449:12:::1;::::0;-1:-1:-1;7441:21:13;;;:7:::1;:21:::0;;;;;;:53;;;;7465:29;;7441:21;;:53:::1;::::0;:21;;:53:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7441:53:13::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;7521:12:::1;::::0;7509:39:::1;::::0;;18546:25:14;;;18587:18;;;18580:34;;;7509:39:13::1;::::0;18519:18:14;7509:39:13::1;;;;;;;7558:12;:14:::0;;;:12:::1;:14;::::0;::::1;:::i;:::-;;;;;;7337:242:::0;;;:::o;4705:147::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;4802:15:13::1;:43:::0;;-1:-1:-1;;;;;;4802:43:13::1;-1:-1:-1::0;;;;;4802:43:13;;;::::1;::::0;;;::::1;::::0;;4705:147::o;2521:34::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2608:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2608:47:13;;;;;;;;;;;;;;;-1:-1:-1;2608:47:13;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;4269:144:13:-:0;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;4366:12:13::1;:40:::0;;-1:-1:-1;;;;;;4366:40:13::1;-1:-1:-1::0;;;;;4366:40:13;;;::::1;::::0;;;::::1;::::0;;4269:144::o;6819:512::-;6880:14;6897:17;6915:9;6897:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;6897:28:13;;-1:-1:-1;6897:28:13;6935:53;;;;-1:-1:-1;;;6935:53:13;;18827:2:14;6935:53:13;;;18809:21:14;18866:2;18846:18;;;18839:30;-1:-1:-1;;;18885:18:14;;;18878:50;18945:18;;6935:53:13;18625:344:14;6935:53:13;-1:-1:-1;;;;;7105:14:13;;7083:19;7105:14;;;:6;:14;;;;;;7129:155;7150:13;;;:20;7146:24;;7129:155;;;7219:10;-1:-1:-1;;;;;7199:30:13;:5;:13;;7213:1;7199:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7199:16:13;:30;7191:82;;;;-1:-1:-1;;;7191:82:13;;19176:2:14;7191:82:13;;;19158:21:14;19215:2;19195:18;;;19188:30;19254:34;19234:18;;;19227:62;-1:-1:-1;;;19305:18:14;;;19298:37;19352:19;;7191:82:13;18974:403:14;7191:82:13;7172:3;;7129:155;;;-1:-1:-1;7294:13:13;;:30;;;;;;;-1:-1:-1;7294:30:13;;;;;;;;;;-1:-1:-1;;;;;;7294:30:13;7313:10;7294:30;;;-1:-1:-1;;6819:512:13:o;4552:147::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;4649:15:13::1;:43:::0;;-1:-1:-1;;;;;;4649:43:13::1;-1:-1:-1::0;;;;;4649:43:13;;;::::1;::::0;;;::::1;::::0;;4552:147::o;3081:897::-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;-1:-1:-1;;;;;4348:14:1;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;-1:-1:-1;;;;;4790:16:1;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;3407:17:13::1;:15;:17::i;:::-;3434:22;:20;:22::i;:::-;3466:24;:22;:24::i;:::-;3501:44;2362:4:0;3532:12:13::0;3501:10:::1;:44::i;:::-;;3555:31;-1:-1:-1::0;;;;;;;;;;;3579:6:13::1;3555:10;:31::i;:::-;;3596:35;1427:26;3622:8;3596:10;:35::i;:::-;;3641:41;-1:-1:-1::0;;;;;;;;;;;3669:12:13::1;3641:10;:41::i;:::-;-1:-1:-1::0;3693:10:13::1;:34:::0;;-1:-1:-1;;;;;;3693:34:13;;::::1;-1:-1:-1::0;;;;;3693:34:13;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;3737:37:13;;;::::1;::::0;;::::1;;::::0;;3784:12:::1;:40:::0;;;::::1;::::0;;::::1;;::::0;;3834:11:::1;:31:::0;;;::::1;::::0;;::::1;;::::0;;3875:15:::1;:43:::0;;;::::1;::::0;;::::1;;::::0;;3928:15:::1;:43:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;19535:50:14;;5142:14:1;;19523:2:14;19508:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;3081:897:13;;;;;;;;;:::o;4148:103:0:-;4214:30;4225:4;966:10:3;4214::0;:30::i;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:0;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:0;;;;;;;;;:38;;-1:-1:-1;;7475:38:0;7509:4;7475:38;;;7559:12;966:10:3;;887:96;7559:12:0;-1:-1:-1;;;;;7532:40:0;7550:7;-1:-1:-1;;;;;7532:40:0;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7892:388;7970:4;-1:-1:-1;;;;;;;;;;;8059:22:0;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:14;;;;;;;;;;;-1:-1:-1;;;;;8097:31:0;;;;;;;;;;:39;;-1:-1:-1;;8097:39:0;;;8155:40;966:10:3;;8097:14:0;;8155:40;;8131:5;8155:40;8216:4;8209:11;;;;;3674:178:4;2563:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3791:17:4;;-1:-1:-1;;3791:17:4::1;::::0;;3823:22:::1;966:10:3::0;3832:12:4::1;3823:22;::::0;-1:-1:-1;;;;;678:32:14;;;660:51;;648:2;633:18;3823:22:4::1;;;;;;;3722:130;3674:178::o:0;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;-1:-1:-1;;;;;;;;;;;2035:53:8;-1:-1:-1;;;;;2035:53:8;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:2;;;;;;;;;;;4654:251;4599:312::o;5016:98:13:-;1427:26;3191:16:0;3202:4;3191:10;:16::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;678:32:14;;6513:60:2;;;660:51:14;633:18;;6513:60:2;497:220:14;6147:437:2;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:2;;;;;2745:25:14;;;2718:18;;6312:34:2;2599:177:14;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:2;;;;;;;;;;;3366:176:4;2316:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3484:16:4;;-1:-1:-1;;3484:16:4::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:3::0;3522:12:4::1;887:96:3::0;1836:97:4;6931:20:1;:18;:20::i;:::-;1899:27:4::1;:25;:27::i;3231:65:0:-:0;6931:20:1;:18;:20::i;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:0;;-1:-1:-1;;;;;20185:32:14;;4514:47:0;;;20167:51:14;20234:18;;;20227:34;;;20140:18;;4514:47:0;19993:274:14;3105:126:4;-1:-1:-1;;;;;;;;;;;2821:9:4;;;3163:62;;3199:15;;-1:-1:-1;;;3199:15:4;;;;;;;;;;;2779:335:8;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:8;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;2905:128:4:-;-1:-1:-1;;;;;;;;;;;2821:9:4;;;2966:61;;;3001:15;;-1:-1:-1;;;3001:15:4;;;;;;;;;;;7084:141:1;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1939:156:4;6931:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2071:17:4;;-1:-1:-1;;2071:17:4::1;::::0;;1939:156::o;2186:281:8:-;2263:17;-1:-1:-1;;;;;2263:29:8;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:8;;-1:-1:-1;;;;;678:32:14;;2320:47:8;;;660:51:14;633:18;;2320:47:8;497:220:14;2259:119:8;-1:-1:-1;;;;;;;;;;;2387:73:8;;-1:-1:-1;;;;;;2387:73:8;-1:-1:-1;;;;;2387:73:8;;;;;;;;;;2186:281::o;4106:253:10:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:10;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:10:o;6598:122:8:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:8;;;;;;;;;;;4625:582:10;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:10;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:10;;-1:-1:-1;;;;;678:32:14;;5121:24:10;;;660:51:14;633:18;;5121:24:10;497:220:14;5041:119:10;-1:-1:-1;5180:10:10;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:10;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:14;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:14;;209:43;;199:71;;266:1;263;256:12;722:127;783:10;778:3;774:20;771:1;764:31;814:4;811:1;804:15;838:4;835:1;828:15;854:275;925:2;919:9;990:2;971:13;;-1:-1:-1;;967:27:14;955:40;;-1:-1:-1;;;;;1010:34:14;;1046:22;;;1007:62;1004:88;;;1072:18;;:::i;:::-;1108:2;1101:22;854:275;;-1:-1:-1;854:275:14:o;1134:450::-;1199:5;1231:1;-1:-1:-1;;;;;1247:6:14;1244:30;1241:56;;;1277:18;;:::i;:::-;-1:-1:-1;1343:2:14;1322:15;;-1:-1:-1;;1318:29:14;1349:4;1314:40;1372:21;1314:40;1372:21;:::i;:::-;1363:30;;;1416:6;1409:5;1402:21;1456:3;1447:6;1442:3;1438:16;1435:25;1432:45;;;1473:1;1470;1463:12;1432:45;1522:6;1517:3;1510:4;1503:5;1499:16;1486:43;1576:1;1569:4;1560:6;1553:5;1549:18;1545:29;1538:40;1134:450;;;;;:::o;1589:222::-;1632:5;1685:3;1678:4;1670:6;1666:17;1662:27;1652:55;;1703:1;1700;1693:12;1652:55;1725:80;1801:3;1792:6;1779:20;1772:4;1764:6;1760:17;1725:80;:::i;1816:322::-;1885:6;1938:2;1926:9;1917:7;1913:23;1909:32;1906:52;;;1954:1;1951;1944:12;1906:52;1994:9;1981:23;-1:-1:-1;;;;;2019:6:14;2016:30;2013:50;;;2059:1;2056;2049:12;2013:50;2082;2124:7;2115:6;2104:9;2100:22;2082:50;:::i;:::-;2072:60;1816:322;-1:-1:-1;;;;1816:322:14:o;2368:226::-;2427:6;2480:2;2468:9;2459:7;2455:23;2451:32;2448:52;;;2496:1;2493;2486:12;2448:52;-1:-1:-1;2541:23:14;;2368:226;-1:-1:-1;2368:226:14:o;2781:173::-;2849:20;;-1:-1:-1;;;;;2898:31:14;;2888:42;;2878:70;;2944:1;2941;2934:12;2878:70;2781:173;;;:::o;2959:300::-;3027:6;3035;3088:2;3076:9;3067:7;3063:23;3059:32;3056:52;;;3104:1;3101;3094:12;3056:52;3149:23;;;-1:-1:-1;3215:38:14;3249:2;3234:18;;3215:38;:::i;:::-;3205:48;;2959:300;;;;;:::o;3264:798::-;3369:6;3377;3385;3393;3401;3454:3;3442:9;3433:7;3429:23;3425:33;3422:53;;;3471:1;3468;3461:12;3422:53;3511:9;3498:23;-1:-1:-1;;;;;3536:6:14;3533:30;3530:50;;;3576:1;3573;3566:12;3530:50;3599;3641:7;3632:6;3621:9;3617:22;3599:50;:::i;:::-;3589:60;3718:2;3703:18;;3690:32;;-1:-1:-1;3819:2:14;3804:18;;3791:32;;3922:2;3907:18;;3894:32;;-1:-1:-1;4025:3:14;4010:19;3997:33;;-1:-1:-1;3264:798:14;-1:-1:-1;;;;3264:798:14:o;4067:186::-;4126:6;4179:2;4167:9;4158:7;4154:23;4150:32;4147:52;;;4195:1;4192;4185:12;4147:52;4218:29;4237:9;4218:29;:::i;4892:524::-;4969:6;4977;5030:2;5018:9;5009:7;5005:23;5001:32;4998:52;;;5046:1;5043;5036:12;4998:52;5069:29;5088:9;5069:29;:::i;:::-;5059:39;;5149:2;5138:9;5134:18;5121:32;-1:-1:-1;;;;;5168:6:14;5165:30;5162:50;;;5208:1;5205;5198:12;5162:50;5231:22;;5284:4;5276:13;;5272:27;-1:-1:-1;5262:55:14;;5313:1;5310;5303:12;5262:55;5336:74;5402:7;5397:2;5384:16;5379:2;5375;5371:11;5336:74;:::i;:::-;5326:84;;;4892:524;;;;;:::o;5421:396::-;5499:6;5507;5560:2;5548:9;5539:7;5535:23;5531:32;5528:52;;;5576:1;5573;5566:12;5528:52;5616:9;5603:23;-1:-1:-1;;;;;5641:6:14;5638:30;5635:50;;;5681:1;5678;5671:12;5635:50;5704;5746:7;5737:6;5726:9;5722:22;5704:50;:::i;:::-;5694:60;;;5773:38;5807:2;5796:9;5792:18;5773:38;:::i;6046:652::-;6143:6;6151;6159;6212:2;6200:9;6191:7;6187:23;6183:32;6180:52;;;6228:1;6225;6218:12;6180:52;6268:9;6255:23;-1:-1:-1;;;;;6293:6:14;6290:30;6287:50;;;6333:1;6330;6323:12;6287:50;6356;6398:7;6389:6;6378:9;6374:22;6356:50;:::i;:::-;6346:60;;;6459:2;6448:9;6444:18;6431:32;-1:-1:-1;;;;;6478:8:14;6475:32;6472:52;;;6520:1;6517;6510:12;6472:52;6543;6587:7;6576:8;6565:9;6561:24;6543:52;:::i;:::-;6046:652;;6533:62;;-1:-1:-1;;;;6664:2:14;6649:18;;;;6636:32;;6046:652::o;6926:300::-;6979:3;7017:5;7011:12;7044:6;7039:3;7032:19;7100:6;7093:4;7086:5;7082:16;7075:4;7070:3;7066:14;7060:47;7152:1;7145:4;7136:6;7131:3;7127:16;7123:27;7116:38;7215:4;7208:2;7204:7;7199:2;7191:6;7187:15;7183:29;7178:3;7174:39;7170:50;7163:57;;;6926:300;;;;:::o;7231:328::-;7408:2;7397:9;7390:21;7371:4;7428:56;7480:2;7469:9;7465:18;7457:6;7428:56;:::i;:::-;7420:64;;7549:1;7545;7540:3;7536:11;7532:19;7524:6;7520:32;7515:2;7504:9;7500:18;7493:60;7231:328;;;;;:::o;7564:1124::-;7657:6;7665;7718:2;7706:9;7697:7;7693:23;7689:32;7686:52;;;7734:1;7731;7724:12;7686:52;7774:9;7761:23;-1:-1:-1;;;;;7799:6:14;7796:30;7793:50;;;7839:1;7836;7829:12;7793:50;7862:22;;7915:4;7907:13;;7903:27;-1:-1:-1;7893:55:14;;7944:1;7941;7934:12;7893:55;7984:2;7971:16;-1:-1:-1;;;;;8002:6:14;7999:30;7996:56;;;8032:18;;:::i;:::-;8078:6;8075:1;8071:14;8105:30;8129:4;8125:2;8121:13;8105:30;:::i;:::-;8169:19;;;8213:4;8245:11;;;8241:22;;;8204:14;;;;8275:19;;;8272:39;;;8307:1;8304;8297:12;8272:39;8339:4;8335:2;8331:13;8320:24;;8353:200;8369:6;8364:3;8361:15;8353:200;;;8461:17;;8491:18;;;8538:4;8386:14;;;;8461:17;;-1:-1:-1;8529:14:14;;;;8353:200;;;8572:5;8650:4;8635:20;;;;8622:34;;-1:-1:-1;;;;;;;7564:1124:14:o;8693:231::-;8842:2;8831:9;8824:21;8805:4;8862:56;8914:2;8903:9;8899:18;8891:6;8862:56;:::i;8929:590::-;9218:6;9207:9;9200:25;9261:3;9256:2;9245:9;9241:18;9234:31;9181:4;9282:57;9334:3;9323:9;9319:19;9311:6;9282:57;:::i;:::-;9274:65;;9375:6;9370:2;9359:9;9355:18;9348:34;9418:6;9413:2;9402:9;9398:18;9391:34;9462:6;9456:3;9445:9;9441:19;9434:35;9506:6;9500:3;9489:9;9485:19;9478:35;8929:590;;;;;;;;;:::o;9524:300::-;9592:6;9600;9653:2;9641:9;9632:7;9628:23;9624:32;9621:52;;;9669:1;9666;9659:12;9621:52;9692:29;9711:9;9692:29;:::i;:::-;9682:39;9790:2;9775:18;;;;9762:32;;-1:-1:-1;;;9524:300:14:o;9829:559::-;10076:3;10065:9;10058:22;10039:4;10103:57;10155:3;10144:9;10140:19;10132:6;10103:57;:::i;:::-;10208:9;10200:6;10196:22;10191:2;10180:9;10176:18;10169:50;10236:44;10273:6;10265;10236:44;:::i;:::-;10311:2;10296:18;;10289:34;;;;-1:-1:-1;;10366:14:14;;10359:22;10354:2;10339:18;;;10332:50;10228:52;9829:559;-1:-1:-1;;9829:559:14:o;11302:784::-;11433:6;11441;11449;11457;11465;11473;11481;11489;11497;11550:3;11538:9;11529:7;11525:23;11521:33;11518:53;;;11567:1;11564;11557:12;11518:53;11590:29;11609:9;11590:29;:::i;:::-;11580:39;;11638:38;11672:2;11661:9;11657:18;11638:38;:::i;:::-;11628:48;;11695:38;11729:2;11718:9;11714:18;11695:38;:::i;:::-;11685:48;;11752:38;11786:2;11775:9;11771:18;11752:38;:::i;:::-;11742:48;;11809:39;11843:3;11832:9;11828:19;11809:39;:::i;:::-;11799:49;;11867:39;11901:3;11890:9;11886:19;11867:39;:::i;:::-;11857:49;;11925:39;11959:3;11948:9;11944:19;11925:39;:::i;:::-;11915:49;;11983:39;12017:3;12006:9;12002:19;11983:39;:::i;:::-;11973:49;;12041:39;12075:3;12064:9;12060:19;12041:39;:::i;:::-;12031:49;;11302:784;;;;;;;;;;;:::o;12091:127::-;12152:10;12147:3;12143:20;12140:1;12133:31;12183:4;12180:1;12173:15;12207:4;12204:1;12197:15;12223:212;12265:3;12303:5;12297:12;12347:6;12340:4;12333:5;12329:16;12324:3;12318:36;12409:1;12373:16;;12398:13;;;-1:-1:-1;12373:16:14;;12223:212;-1:-1:-1;12223:212:14:o;12440:192::-;12571:3;12596:30;12622:3;12614:6;12596:30;:::i;12637:380::-;12716:1;12712:12;;;;12759;;;12780:61;;12834:4;12826:6;12822:17;12812:27;;12780:61;12887:2;12879:6;12876:14;12856:18;12853:38;12850:161;;12933:10;12928:3;12924:20;12921:1;12914:31;12968:4;12965:1;12958:15;12996:4;12993:1;12986:15;12850:161;;12637:380;;;:::o;13148:797::-;13276:3;13305:1;13338:6;13332:13;13368:36;13394:9;13368:36;:::i;:::-;13435:1;13420:17;;13446:133;;;;13593:1;13588:332;;;;13413:507;;13446:133;-1:-1:-1;;13479:24:14;;13467:37;;13552:14;;13545:22;13533:35;;13524:45;;;-1:-1:-1;13446:133:14;;13588:332;13619:6;13616:1;13609:17;13667:4;13664:1;13654:18;13694:1;13708:166;13722:6;13719:1;13716:13;13708:166;;;13802:14;;13789:11;;;13782:35;13858:1;13845:15;;;;13744:4;13737:12;13708:166;;;13712:3;;13903:6;13898:3;13894:16;13887:23;;13413:507;-1:-1:-1;13936:3:14;;13148:797;-1:-1:-1;;;;;13148:797:14:o;13950:127::-;14011:10;14006:3;14002:20;13999:1;13992:31;14042:4;14039:1;14032:15;14066:4;14063:1;14056:15;14082:125;14147:9;;;14168:10;;;14165:36;;;14181:18;;:::i;14212:518::-;14314:2;14309:3;14306:11;14303:421;;;14350:5;14347:1;14340:16;14394:4;14391:1;14381:18;14464:2;14452:10;14448:19;14445:1;14441:27;14435:4;14431:38;14500:4;14488:10;14485:20;14482:47;;;-1:-1:-1;14523:4:14;14482:47;14578:2;14573:3;14569:12;14566:1;14562:20;14556:4;14552:31;14542:41;;14633:81;14651:2;14644:5;14641:13;14633:81;;;14710:1;14696:16;;14677:1;14666:13;14633:81;;;14637:3;;14212:518;;;:::o;14906:1299::-;15032:3;15026:10;-1:-1:-1;;;;;15051:6:14;15048:30;15045:56;;;15081:18;;:::i;:::-;15110:97;15200:6;15160:38;15192:4;15186:11;15160:38;:::i;:::-;15154:4;15110:97;:::i;:::-;15256:4;15287:2;15276:14;;15304:1;15299:649;;;;15992:1;16009:6;16006:89;;;-1:-1:-1;16061:19:14;;;16055:26;16006:89;-1:-1:-1;;14863:1:14;14859:11;;;14855:24;14851:29;14841:40;14887:1;14883:11;;;14838:57;16108:81;;15269:930;;15299:649;13095:1;13088:14;;;13132:4;13119:18;;-1:-1:-1;;15335:20:14;;;15453:222;15467:7;15464:1;15461:14;15453:222;;;15549:19;;;15543:26;15528:42;;15656:4;15641:20;;;;15609:1;15597:14;;;;15483:12;15453:222;;;15457:3;15703:6;15694:7;15691:19;15688:201;;;15764:19;;;15758:26;-1:-1:-1;;15847:1:14;15843:14;;;15859:3;15839:24;15835:37;15831:42;15816:58;15801:74;;15688:201;-1:-1:-1;;;;15935:1:14;15919:14;;;15915:22;15902:36;;-1:-1:-1;14906:1299:14:o;16210:302::-;16387:6;16376:9;16369:25;16430:2;16425;16414:9;16410:18;16403:30;16350:4;16450:56;16502:2;16491:9;16487:18;16479:6;16450:56;:::i;16517:135::-;16556:3;16577:17;;;16574:43;;16597:18;;:::i;:::-;-1:-1:-1;16644:1:14;16633:13;;16517:135::o;18107:128::-;18174:9;;;18195:11;;;18192:37;;;18209:18;;:::i;18240:127::-;18301:10;18296:3;18292:20;18289:1;18282:31;18332:4;18329:1;18322:15;18356:4;18353:1;18346:15;19804:184;19874:6;19927:2;19915:9;19906:7;19902:23;19898:32;19895:52;;;19943:1;19940;19933:12;19895:52;-1:-1:-1;19966:16:14;;19804:184;-1:-1:-1;19804:184:14:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2221400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "327",
								"GAME_ADMIN_ROLE()": "infinite",
								"PAUSER_ROLE()": "infinite",
								"UPGRADER_ROLE()": "348",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"addItem(string,uint256,uint256,uint256,uint256)": "infinite",
								"addRecipe(uint256[],uint256)": "infinite",
								"completeQuest(string)": "infinite",
								"craftItem(uint256)": "infinite",
								"createGuild(string,address)": "infinite",
								"createPlayer()": "infinite",
								"daoContract()": "2426",
								"erc1155Token()": "2449",
								"erc20Token()": "2381",
								"erc721Token()": "2425",
								"farmingContract()": "2405",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"guilds(address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"initialize(address,address,address,address,address,address,address,address,address)": "infinite",
								"items(uint256)": "infinite",
								"joinGuild(string)": "infinite",
								"pause()": "infinite",
								"paused()": "infinite",
								"playerQuests(address,uint256)": "infinite",
								"players(address)": "17589",
								"proxiableUUID()": "infinite",
								"recipes(uint256)": "2509",
								"renounceRole(bytes32,address)": "29183",
								"revokeRole(bytes32,address)": "infinite",
								"setDAOAddress(address)": "infinite",
								"setERC1155Address(address)": "infinite",
								"setERC20Address(address)": "infinite",
								"setERC721Address(address)": "infinite",
								"setFarmingAddress(address)": "infinite",
								"setStakingAddress(address)": "infinite",
								"stakingContract()": "2424",
								"startQuest(string,string,uint256)": "infinite",
								"supportsInterface(bytes4)": "470",
								"unpause()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1186,
									"end": 9000,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2478,
									"end": 2479,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2452,
									"end": 2479,
									"name": "PUSH",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 2452,
									"end": 2479,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2452,
									"end": 2479,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2452,
									"end": 2479,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2485,
									"end": 2514,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 2485,
									"end": 2514,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "636"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1186,
									"end": 9000,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017e50992d8e441c501e255dd0dd94ae0246f27bf1d9831d9196c551577a7a43e64736f6c634300081a0033",
									".code": [
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "8A13EEA7"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "BFB231D2"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "E551BA4B"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "E551BA4B"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "E63AB1E9"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "EE99205C"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "F4E0D9AC"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "F5E95ACB"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "F72C0D8B"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "BFB231D2"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "D3DCFF7C"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "D547741F"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "D836FC6F"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "E2EB41FF"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "A75859E1"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "A75859E1"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "A9834B67"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "AD3CB1CC"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "B001F618"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "BE22D27D"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "8A13EEA7"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "91D14854"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "965AFA89"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "9A03D9A3"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "A217FDDF"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "41BEC0D2"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "52D1902D"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "52D1902D"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "5F2D6BCD"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "6F347A78"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "7309CBBD"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "8456CB59"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "41BEC0D2"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "443C227C"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "4A7FFCBC"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "4F1EF286"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "4FA4A1BB"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "2F2FF15D"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "2F2FF15D"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "31FEE8BE"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "36568ABE"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "3F4BA83A"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "3FA9FCF8"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "2EEC568"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "17435E1A"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "21F42268"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "248A9CA3"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1186,
											"end": 9000,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 678,
											"end": 710,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 678,
											"end": 710,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 678,
											"end": 710,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 660,
											"end": 711,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 660,
											"end": 711,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 648,
											"end": 650,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 497,
											"end": 717,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 5907,
											"end": 6439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5907,
											"end": 6439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2733,
											"end": 2735,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2718,
											"end": 2736,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2599,
											"end": 2776,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 5374,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 5374,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 4935,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 5120,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 3984,
											"end": 4118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3984,
											"end": 4118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2756,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "PUSH",
											"source": 13,
											"value": "D"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2794,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 6445,
											"end": 6813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 6445,
											"end": 6813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 5695,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 5695,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 7585,
											"end": 8884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 7585,
											"end": 8884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 4858,
											"end": 4929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 4419,
											"end": 4546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 4419,
											"end": 4546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 4124,
											"end": 4263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 4124,
											"end": 4263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 2661,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 2661,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 2661,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 7337,
											"end": 7579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 7337,
											"end": 7579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 4705,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 4705,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2521,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 2521,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 2521,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 2608,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 2608,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 2608,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 4269,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4269,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 2561,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10736,
											"end": 10761,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 10736,
											"end": 10761,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10736,
											"end": 10761,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10792,
											"end": 10794,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10770,
											"end": 10804,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 10770,
											"end": 10804,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10770,
											"end": 10804,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 10770,
											"end": 10804,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10820,
											"end": 10838,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10820,
											"end": 10838,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10820,
											"end": 10838,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10813,
											"end": 10847,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10813,
											"end": 10847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10813,
											"end": 10847,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10813,
											"end": 10847,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10878,
											"end": 10880,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10863,
											"end": 10881,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10863,
											"end": 10881,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10921,
											"end": 10924,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10906,
											"end": 10925,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10906,
											"end": 10925,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10899,
											"end": 10934,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10965,
											"end": 10968,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 10950,
											"end": 10969,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10950,
											"end": 10969,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10943,
											"end": 10978,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11009,
											"end": 11012,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 10994,
											"end": 11013,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10994,
											"end": 11013,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10987,
											"end": 11022,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11053,
											"end": 11056,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11038,
											"end": 11057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11038,
											"end": 11057,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11031,
											"end": 11066,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10723,
											"end": 10726,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 10708,
											"end": 10727,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 10393,
											"end": 11072,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 6819,
											"end": 7331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 6819,
											"end": 7331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1381,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1692,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 4552,
											"end": 4699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 4552,
											"end": 4699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 3081,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 3081,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1427,
											"end": 1453,
											"name": "PUSH",
											"source": 13,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1453,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 5984,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 6433,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 5973,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6007,
											"end": 6017,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6006,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6025,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5990,
											"end": 6025,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5990,
											"end": 6025,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5973,
											"end": 6433,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5973,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 5973,
											"end": 6433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6091,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6080,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6093,
											"end": 6094,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6093,
											"end": 6094,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6068,
											"end": 6095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6184,
											"end": 6194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6167,
											"end": 6195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6157,
											"end": 6196,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6157,
											"end": 6196,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6157,
											"end": 6196,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6157,
											"end": 6196,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6157,
											"end": 6196,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6157,
											"end": 6196,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6157,
											"end": 6196,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6145,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 6123,
											"end": 6152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6123,
											"end": 6152,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6153,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6153,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6153,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6153,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6153,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6196,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6216,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6216,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6113,
											"end": 6216,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6201,
											"end": 6216,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6201,
											"end": 6216,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6216,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6216,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6216,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6201,
											"end": 6216,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 6216,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6216,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6113,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6109,
											"end": 6423,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6109,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 6109,
											"end": 6423,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6251,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6236,
											"end": 6251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6251,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6258,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6258,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6236,
											"end": 6258,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6254,
											"end": 6258,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6236,
											"end": 6258,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6258,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6258,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6258,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6258,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6258,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6324,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6310,
											"end": 6324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6324,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6284,
											"end": 6294,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6251,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6295,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6295,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6295,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6283,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 6276,
											"end": 6295,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6295,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6295,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6295,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6295,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6306,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6306,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6306,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6324,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6324,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6324,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6324,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6306,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6306,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 6276,
											"end": 6324,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6324,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6324,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 6276,
											"end": 6324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6324,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 6276,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6324,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6324,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6324,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6362,
											"end": 6372,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6362,
											"end": 6372,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "PUSH",
											"source": 13,
											"value": "BE21664565742A9F42CBB6D005F92DB59C7BCAD35B12EF5B57B79E75676B247A"
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6374,
											"end": 6384,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6374,
											"end": 6384,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 6347,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 6403,
											"end": 6408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5973,
											"end": 6433,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6109,
											"end": 6423,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 6109,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6027,
											"end": 6030,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6027,
											"end": 6030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5973,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 5973,
											"end": 6433,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5973,
											"end": 6433,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 5973,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5973,
											"end": 6433,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5361,
											"end": 5365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 5550,
											"end": 5560,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5525,
											"end": 5618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 5525,
											"end": 5618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5525,
											"end": 5618,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5618,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "78D68BA0E8C23B92E7C700D99EFED2719520CBD4AF845B2C03AE251F9CDF3D52"
										},
										{
											"begin": 5643,
											"end": 5653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 5643,
											"end": 5653,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5655,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 5633,
											"end": 5660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5660,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 5670,
											"end": 5682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5682,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5670,
											"end": 5682,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 5670,
											"end": 5682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5670,
											"end": 5682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5682,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5682,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 6549,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 4993,
											"end": 5001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 4993,
											"end": 5003,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4993,
											"end": 5003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 4993,
											"end": 5003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 5120,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5177,
											"end": 5187,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5188,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5188,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5188,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5176,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 5169,
											"end": 5188,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5169,
											"end": 5188,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5188,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5169,
											"end": 5188,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5188,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5194,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5199,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16859,
											"end": 16861,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16841,
											"end": 16862,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16898,
											"end": 16900,
											"name": "PUSH",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 16878,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 16878,
											"end": 16896,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16878,
											"end": 16896,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16871,
											"end": 16901,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "506C6179657220616C726561647920657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16917,
											"end": 16935,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 16917,
											"end": 16935,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16917,
											"end": 16935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16910,
											"end": 16961,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16978,
											"end": 16996,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 16978,
											"end": 16996,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 5161,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5264,
											"end": 5265,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5267,
											"end": 5268,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5275,
											"end": 5277,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5287,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5289,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5303,
											"end": 5304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 5292,
											"end": 5305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 5292,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5318,
											"end": 5319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5243,
											"end": 5253,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5242,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5254,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 5235,
											"end": 5321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 5235,
											"end": 5321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 5235,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5336,
											"end": 5361,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5336,
											"end": 5361,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5350,
											"end": 5360,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5350,
											"end": 5360,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5336,
											"end": 5361,
											"name": "PUSH",
											"source": 13,
											"value": "B4CCA19A27CE42915C3CEE0CEE28FC5D90969EE49F09EC71659546A63B5F7BC0"
										},
										{
											"begin": 5336,
											"end": 5361,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5361,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5361,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5361,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3984,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4077,
											"end": 4087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4077,
											"end": 4111,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4111,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4111,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6553,
											"end": 6590,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "C"
										},
										{
											"begin": 6571,
											"end": 6575,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6553,
											"end": 6576,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 6553,
											"end": 6576,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6553,
											"end": 6576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 6553,
											"end": 6576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6553,
											"end": 6576,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6590,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 6545,
											"end": 6615,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6545,
											"end": 6615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6545,
											"end": 6615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6615,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17209,
											"end": 17211,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6545,
											"end": 6615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6545,
											"end": 6615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17191,
											"end": 17212,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17248,
											"end": 17250,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17221,
											"end": 17251,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4775696C6420616C726561647920657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17267,
											"end": 17285,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 17267,
											"end": 17285,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17267,
											"end": 17285,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17260,
											"end": 17310,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17327,
											"end": 17345,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 17327,
											"end": 17345,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6545,
											"end": 6615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 17007,
											"end": 17351,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6545,
											"end": 6615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 6545,
											"end": 6615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 6677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6662,
											"end": 6678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6662,
											"end": 6678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6662,
											"end": 6678,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6678,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6679,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6639,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6639,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6639,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6639,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 6625,
											"end": 6639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6639,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6639,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6639,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6639,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6639,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6639,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 6625,
											"end": 6679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 6625,
											"end": 6679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 6625,
											"end": 6679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6689,
											"end": 6703,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6703,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6703,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6703,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6703,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 6689,
											"end": 6703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6689,
											"end": 6703,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6703,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6689,
											"end": 6703,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6703,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6689,
											"end": 6711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6714,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6714,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6723,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6723,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6703,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6689,
											"end": 6714,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6723,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6765,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "C"
										},
										{
											"begin": 6751,
											"end": 6755,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6733,
											"end": 6756,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 6733,
											"end": 6756,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6733,
											"end": 6756,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 6733,
											"end": 6756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "72208535A97B2E307167838C66AACD47F8DE3A2CB92BC2DDB2B2B52009C9FD5"
										},
										{
											"begin": 6780,
											"end": 6806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 6780,
											"end": 6806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6793,
											"end": 6797,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6793,
											"end": 6797,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 6805,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 6805,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 6780,
											"end": 6806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6806,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 5695,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5834,
											"end": 5844,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 5821,
											"end": 5845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5893,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5821,
											"end": 5894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5821,
											"end": 5894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5894,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5695,
											"end": 5901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 7585,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7656,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7666,
											"name": "PUSH",
											"source": 13,
											"value": "D"
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7718,
											"end": 7719,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7700,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7694,
											"end": 7715,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7694,
											"end": 7719,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17558,
											"end": 17560,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17540,
											"end": 17561,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17597,
											"end": 17599,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17570,
											"end": 17600,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420726563697065"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17616,
											"end": 17634,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 17616,
											"end": 17634,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17616,
											"end": 17634,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17609,
											"end": 17653,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17670,
											"end": 17688,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 17670,
											"end": 17688,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 17356,
											"end": 17694,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 8224,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 7807,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 7842,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 7842,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 7849,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7849,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7849,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 8224,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 7807,
											"end": 8224,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7909,
											"end": 7915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8141,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 7904,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7933,
											"end": 7943,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7925,
											"end": 7932,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7925,
											"end": 7954,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7925,
											"end": 7954,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7925,
											"end": 7961,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7921,
											"end": 7961,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7921,
											"end": 7961,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8141,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 7904,
											"end": 8141,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8040,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8040,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8041,
											"end": 8042,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8041,
											"end": 8042,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8026,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 7997,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7998,
											"end": 8008,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8009,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8019,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7990,
											"end": 8019,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8020,
											"end": 8021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7990,
											"end": 8022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8022,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8043,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7986,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 7986,
											"end": 8127,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8077,
											"end": 8081,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8067,
											"end": 8081,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8067,
											"end": 8081,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8103,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 8103,
											"end": 8108,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7986,
											"end": 8127,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 7986,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7963,
											"end": 7966,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7963,
											"end": 7966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 7904,
											"end": 8141,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8141,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 7904,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8141,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8162,
											"end": 8169,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17901,
											"end": 17903,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17883,
											"end": 17904,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17940,
											"end": 17942,
											"name": "PUSH",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 17920,
											"end": 17938,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17920,
											"end": 17938,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17920,
											"end": 17938,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17913,
											"end": 17943,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17979,
											"end": 18013,
											"name": "PUSH",
											"source": 14,
											"value": "506C6179657220646F6573206E6F74206861766520616C6C2072657175697265"
										},
										{
											"begin": 17959,
											"end": 17977,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 17959,
											"end": 17977,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17959,
											"end": 17977,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17952,
											"end": 18014,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64206974656D73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18030,
											"end": 18048,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 18030,
											"end": 18048,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18030,
											"end": 18048,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18023,
											"end": 18060,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18077,
											"end": 18096,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 18077,
											"end": 18096,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 17699,
											"end": 18102,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 8154,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7851,
											"end": 7854,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7851,
											"end": 7854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 7807,
											"end": 8224,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 8224,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 7807,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 8224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8300,
											"end": 8306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8295,
											"end": 8754,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 8295,
											"end": 8754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8316,
											"end": 8330,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8316,
											"end": 8330,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8316,
											"end": 8337,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8337,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8337,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8754,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 8295,
											"end": 8754,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8744,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 8358,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8387,
											"end": 8397,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8379,
											"end": 8386,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8379,
											"end": 8408,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 8379,
											"end": 8408,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8379,
											"end": 8415,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8415,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8415,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8358,
											"end": 8744,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8358,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 8358,
											"end": 8744,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8494,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8480,
											"end": 8497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8451,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8452,
											"end": 8462,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8473,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 8444,
											"end": 8473,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8475,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8444,
											"end": 8476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8497,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 8440,
											"end": 8730,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8564,
											"end": 8574,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8556,
											"end": 8575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8563,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 8556,
											"end": 8575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8556,
											"end": 8575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8556,
											"end": 8575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8585,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 8556,
											"end": 8585,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8586,
											"end": 8622,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8586,
											"end": 8622,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8586,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 8586,
											"end": 8626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8625,
											"end": 8626,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8625,
											"end": 8626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8586,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 8586,
											"end": 8626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8586,
											"end": 8626,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 8586,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8556,
											"end": 8627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8627,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8529,
											"end": 8539,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8528,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8550,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 8521,
											"end": 8550,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8551,
											"end": 8552,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8551,
											"end": 8552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8521,
											"end": 8553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8627,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8627,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8627,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8657,
											"end": 8667,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8656,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 8649,
											"end": 8668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8668,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8668,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8649,
											"end": 8668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8668,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8678,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 8649,
											"end": 8678,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 8649,
											"end": 8684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8684,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8706,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 8706,
											"end": 8711,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8730,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 8440,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8358,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 8358,
											"end": 8744,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8358,
											"end": 8744,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 8358,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8339,
											"end": 8342,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8339,
											"end": 8342,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 8295,
											"end": 8754,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8754,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 8295,
											"end": 8754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8841,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8822,
											"end": 8841,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8841,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8841,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8829,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 8822,
											"end": 8841,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8822,
											"end": 8841,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8841,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8841,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8841,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8822,
											"end": 8841,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8841,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8857,
											"end": 8876,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8857,
											"end": 8876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8857,
											"end": 8876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8857,
											"end": 8876,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8851,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 8822,
											"end": 8851,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8851,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8851,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8877,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7585,
											"end": 8884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 4858,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 4914,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4914,
											"end": 4922,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 4419,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4508,
											"end": 4539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4539,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4539,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4539,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4539,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4539,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4219,
											"end": 4230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4219,
											"end": 4256,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4256,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4219,
											"end": 4256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4219,
											"end": 4256,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4256,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4256,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4256,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4256,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4256,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4256,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4256,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4256,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2661,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2661,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7449,
											"end": 7461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 7449,
											"end": 7461,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "D"
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7494,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 7441,
											"end": 7494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 7441,
											"end": 7494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7441,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7494,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 7533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 7521,
											"end": 7533,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7509,
											"end": 7548,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7548,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18546,
											"end": 18571,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18546,
											"end": 18571,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18546,
											"end": 18571,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18587,
											"end": 18605,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18587,
											"end": 18605,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18587,
											"end": 18605,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18580,
											"end": 18614,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18580,
											"end": 18614,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18580,
											"end": 18614,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7509,
											"end": 7548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9BECFD2B1FC8127387C5B0002A6CBC8382E6C8FB9F76DFD6CFD92CBE94383D0E"
										},
										{
											"begin": 7509,
											"end": 7548,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18519,
											"end": 18537,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7509,
											"end": 7548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7509,
											"end": 7548,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7548,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7548,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7548,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7548,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 7558,
											"end": 7572,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7572,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7572,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7558,
											"end": 7572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 7558,
											"end": 7572,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 7558,
											"end": 7572,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 7558,
											"end": 7572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7572,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7572,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 4705,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4802,
											"end": 4817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4802,
											"end": 4845,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4845,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4802,
											"end": 4845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4802,
											"end": 4845,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4845,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4845,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4845,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4845,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4845,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2521,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2521,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2608,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2608,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2608,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2608,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5779,
											"end": 5783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5785,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 5767,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4269,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4366,
											"end": 4378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4366,
											"end": 4406,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4406,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4366,
											"end": 4406,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4366,
											"end": 4406,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4406,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4406,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4406,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4406,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4406,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4406,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 6819,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6880,
											"end": 6894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6897,
											"end": 6914,
											"name": "PUSH",
											"source": 13,
											"value": "C"
										},
										{
											"begin": 6915,
											"end": 6924,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6897,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6897,
											"end": 6925,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18827,
											"end": 18829,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 18830,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18866,
											"end": 18868,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 18846,
											"end": 18864,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 18846,
											"end": 18864,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18846,
											"end": 18864,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18839,
											"end": 18869,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11DD5A5B1908191BD95CC81B9BDD08195E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18885,
											"end": 18903,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 18885,
											"end": 18903,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18885,
											"end": 18903,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18878,
											"end": 18928,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18945,
											"end": 18963,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 18945,
											"end": 18963,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 18625,
											"end": 18969,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 6935,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7083,
											"end": 7102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7111,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7129,
											"end": 7284,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 7129,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7150,
											"end": 7163,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7150,
											"end": 7163,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7150,
											"end": 7163,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7150,
											"end": 7170,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7146,
											"end": 7170,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7146,
											"end": 7170,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7129,
											"end": 7284,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7129,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 7129,
											"end": 7284,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7219,
											"end": 7229,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7199,
											"end": 7229,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7204,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7212,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7199,
											"end": 7212,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7199,
											"end": 7215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7229,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19176,
											"end": 19178,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19158,
											"end": 19179,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19215,
											"end": 19217,
											"name": "PUSH",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 19195,
											"end": 19213,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 19195,
											"end": 19213,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19195,
											"end": 19213,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19188,
											"end": 19218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19254,
											"end": 19288,
											"name": "PUSH",
											"source": 14,
											"value": "53656E64657220697320616C72656164792061206D656D626572206F66207468"
										},
										{
											"begin": 19234,
											"end": 19252,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 19234,
											"end": 19252,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19234,
											"end": 19252,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19227,
											"end": 19289,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "194819DD5A5B19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19305,
											"end": 19323,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 19305,
											"end": 19323,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19305,
											"end": 19323,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19298,
											"end": 19335,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19352,
											"end": 19371,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 19352,
											"end": 19371,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 18974,
											"end": 19377,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 7191,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7129,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 7129,
											"end": 7284,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7129,
											"end": 7284,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 7129,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7294,
											"end": 7307,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7294,
											"end": 7307,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7313,
											"end": 7323,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6819,
											"end": 7331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 4552,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4649,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4649,
											"end": 4692,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4692,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4649,
											"end": 4692,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4649,
											"end": 4692,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4692,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4692,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4692,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4692,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4692,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4692,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4692,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4692,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4692,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 3407,
											"end": 3422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 3407,
											"end": 3424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3407,
											"end": 3424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 3407,
											"end": 3424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3434,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3434,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 3434,
											"end": 3456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3434,
											"end": 3456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3434,
											"end": 3456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3466,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 3466,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 3466,
											"end": 3490,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3466,
											"end": 3490,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 3466,
											"end": 3490,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 2362,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3544,
											"name": "DUP16",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 3501,
											"end": 3545,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 3501,
											"end": 3545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3555,
											"end": 3586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3585,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 13
										},
										{
											"begin": 3555,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 3555,
											"end": 3586,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3555,
											"end": 3586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 3555,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3555,
											"end": 3586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 1427,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3622,
											"end": 3630,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 3596,
											"end": 3631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 3596,
											"end": 3631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3641,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3669,
											"end": 3681,
											"modifierDepth": 1,
											"name": "DUP16",
											"source": 13
										},
										{
											"begin": 3641,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 3641,
											"end": 3682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3641,
											"end": 3682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 3641,
											"end": 3682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3693,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "DUP15",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3727,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 3737,
											"end": 3774,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3737,
											"end": 3774,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3737,
											"end": 3774,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3737,
											"end": 3774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3737,
											"end": 3774,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 3737,
											"end": 3774,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3737,
											"end": 3774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3737,
											"end": 3774,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3737,
											"end": 3774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3737,
											"end": 3774,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3784,
											"end": 3824,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3824,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3824,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3824,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3824,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3824,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3824,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3834,
											"end": 3865,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3865,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3865,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3865,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3865,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3865,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3865,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3865,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3865,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3865,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3875,
											"end": 3918,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3918,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3918,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3918,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3918,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3918,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3918,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3918,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3918,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3928,
											"end": 3971,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3971,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 19535,
											"end": 19585,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19535,
											"end": 19585,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19523,
											"end": 19525,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19508,
											"end": 19526,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 4214,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7437,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7970,
											"end": 7974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8059,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "517"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "518"
										},
										{
											"begin": 2563,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "tag",
											"source": 4,
											"value": "517"
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "521"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 678,
											"end": 710,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 678,
											"end": 710,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 678,
											"end": 710,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 660,
											"end": 711,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 660,
											"end": 711,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 648,
											"end": 650,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 3852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3674,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "525"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "526"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "526"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 2,
											"value": "525"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "528"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "tag",
											"source": 2,
											"value": "528"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4599,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5016,
											"end": 5114,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 5016,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1453,
											"name": "PUSH",
											"source": 13,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "533"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "534"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "535"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "534"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "533"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "536"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 678,
											"end": 710,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 678,
											"end": 710,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 660,
											"end": 711,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 497,
											"end": 717,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 2,
											"value": "536"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "542"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2718,
											"end": 2736,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2718,
											"end": 2736,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 2599,
											"end": 2776,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 2,
											"value": "542"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "545"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "528"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "tag",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "551"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "521"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "tag",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 1899,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "562"
										},
										{
											"begin": 1899,
											"end": 1926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4469,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20185,
											"end": 20217,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20185,
											"end": 20217,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20234,
											"end": 20252,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 20234,
											"end": 20252,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20234,
											"end": 20252,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20227,
											"end": 20261,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20227,
											"end": 20261,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20227,
											"end": 20261,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20140,
											"end": 20158,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 20140,
											"end": 20158,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 19993,
											"end": 20267,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "tag",
											"source": 4,
											"value": "518"
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "tag",
											"source": 4,
											"value": "551"
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "562"
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 678,
											"end": 710,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 678,
											"end": 710,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 660,
											"end": 711,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 497,
											"end": 717,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 678,
											"end": 710,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 678,
											"end": 710,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 660,
											"end": 711,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 497,
											"end": 717,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "313"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "629"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "629"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "631"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "632"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "631"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "338"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "634"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "634"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "632"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "631"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 722,
											"end": 849,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 722,
											"end": 849,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 783,
											"end": 793,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 778,
											"end": 781,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 774,
											"end": 794,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 771,
											"end": 772,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 795,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 814,
											"end": 818,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 811,
											"end": 812,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 804,
											"end": 819,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 835,
											"end": 836,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 843,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 854,
											"end": 1129,
											"name": "tag",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 854,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 925,
											"end": 927,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 928,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 990,
											"end": 992,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 971,
											"end": 984,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 971,
											"end": 984,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 967,
											"end": 994,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 955,
											"end": 995,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 955,
											"end": 995,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1010,
											"end": 1044,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1046,
											"end": 1068,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1046,
											"end": 1068,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1046,
											"end": 1068,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1007,
											"end": 1069,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1004,
											"end": 1092,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1004,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 1004,
											"end": 1092,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 1072,
											"end": 1090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1123,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 854,
											"end": 1129,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 854,
											"end": 1129,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 854,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1134,
											"end": 1584,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 1134,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1199,
											"end": 1204,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1232,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1253,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1244,
											"end": 1274,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1241,
											"end": 1297,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1241,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 1241,
											"end": 1297,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1277,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 1277,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 1277,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1277,
											"end": 1295,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 1277,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1345,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1322,
											"end": 1337,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1318,
											"end": 1347,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1349,
											"end": 1353,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1354,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1372,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 1314,
											"end": 1354,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1372,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 1372,
											"end": 1393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1372,
											"end": 1393,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 1372,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1402,
											"end": 1423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1456,
											"end": 1459,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1445,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1438,
											"end": 1454,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1435,
											"end": 1460,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1477,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 1432,
											"end": 1477,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1463,
											"end": 1475,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1477,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 1432,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1517,
											"end": 1520,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1510,
											"end": 1514,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1508,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1499,
											"end": 1515,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1486,
											"end": 1529,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1573,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1558,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1578,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1134,
											"end": 1584,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1134,
											"end": 1584,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1134,
											"end": 1584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1134,
											"end": 1584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1134,
											"end": 1584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1134,
											"end": 1584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1589,
											"end": 1811,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 1589,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1632,
											"end": 1637,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1678,
											"end": 1682,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1666,
											"end": 1683,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1662,
											"end": 1689,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 1652,
											"end": 1707,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1703,
											"end": 1704,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1701,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1693,
											"end": 1705,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1707,
											"name": "tag",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 1652,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 1801,
											"end": 1804,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1792,
											"end": 1798,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1779,
											"end": 1799,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 1725,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1816,
											"end": 2138,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 1816,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1940,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1917,
											"end": 1924,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 1936,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1909,
											"end": 1941,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 1958,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 1906,
											"end": 1958,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1954,
											"end": 1955,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1952,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 1958,
											"name": "tag",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 1906,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1981,
											"end": 2004,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2019,
											"end": 2025,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2046,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2063,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 2013,
											"end": 2063,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2063,
											"name": "tag",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 2013,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2082,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2104,
											"end": 2113,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2122,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2082,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 2082,
											"end": 2132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2082,
											"end": 2132,
											"name": "tag",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 2082,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2072,
											"end": 2132,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1816,
											"end": 2138,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1816,
											"end": 2138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2368,
											"end": 2594,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 2368,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2482,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2468,
											"end": 2477,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2455,
											"end": 2478,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2451,
											"end": 2483,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2500,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 2448,
											"end": 2500,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2496,
											"end": 2497,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2486,
											"end": 2498,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2500,
											"name": "tag",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 2448,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2564,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2564,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2368,
											"end": 2594,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2781,
											"end": 2954,
											"name": "tag",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 2781,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2898,
											"end": 2929,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2898,
											"end": 2929,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2930,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2930,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2878,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 2878,
											"end": 2948,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 2945,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2934,
											"end": 2946,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2878,
											"end": 2948,
											"name": "tag",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 2878,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2781,
											"end": 2954,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2781,
											"end": 2954,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2781,
											"end": 2954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2781,
											"end": 2954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3259,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 2959,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3041,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3088,
											"end": 3090,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3067,
											"end": 3074,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3063,
											"end": 3086,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3059,
											"end": 3091,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3056,
											"end": 3108,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3056,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "678"
										},
										{
											"begin": 3056,
											"end": 3108,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3102,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3094,
											"end": 3106,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3056,
											"end": 3108,
											"name": "tag",
											"source": 14,
											"value": "678"
										},
										{
											"begin": 3056,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3149,
											"end": 3172,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3149,
											"end": 3172,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3149,
											"end": 3172,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3215,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 3249,
											"end": 3251,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3215,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 3215,
											"end": 3253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3215,
											"end": 3253,
											"name": "tag",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 3215,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3205,
											"end": 3253,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3205,
											"end": 3253,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3259,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3259,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3259,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3259,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3259,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3264,
											"end": 4062,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 3264,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3375,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3377,
											"end": 3383,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3391,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3399,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3457,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3433,
											"end": 3440,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3425,
											"end": 3458,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3422,
											"end": 3475,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3422,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 3422,
											"end": 3475,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3471,
											"end": 3472,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3461,
											"end": 3473,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3422,
											"end": 3475,
											"name": "tag",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 3422,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3511,
											"end": 3520,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3498,
											"end": 3521,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3542,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3563,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3576,
											"end": 3577,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3566,
											"end": 3578,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "tag",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3599,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 3641,
											"end": 3648,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3632,
											"end": 3638,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 3617,
											"end": 3639,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3599,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 3599,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3599,
											"end": 3649,
											"name": "tag",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 3599,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3589,
											"end": 3649,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 3718,
											"end": 3720,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3703,
											"end": 3721,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3703,
											"end": 3721,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3690,
											"end": 3722,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3690,
											"end": 3722,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3819,
											"end": 3821,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3791,
											"end": 3823,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3791,
											"end": 3823,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 3922,
											"end": 3924,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3907,
											"end": 3925,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3907,
											"end": 3925,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3894,
											"end": 3926,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3894,
											"end": 3926,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4025,
											"end": 4028,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4010,
											"end": 4029,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3997,
											"end": 4030,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3997,
											"end": 4030,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3264,
											"end": 4062,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3264,
											"end": 4062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4067,
											"end": 4253,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 4067,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4126,
											"end": 4132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4181,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4176,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4165,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4154,
											"end": 4177,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4150,
											"end": 4182,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4147,
											"end": 4199,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4147,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 4147,
											"end": 4199,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4195,
											"end": 4196,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4147,
											"end": 4199,
											"name": "tag",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 4147,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 4237,
											"end": 4246,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 4218,
											"end": 4247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 5416,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 4892,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4969,
											"end": 4975,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4983,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5030,
											"end": 5032,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5009,
											"end": 5016,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5005,
											"end": 5028,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5001,
											"end": 5033,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4998,
											"end": 5050,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4998,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 4998,
											"end": 5050,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5046,
											"end": 5047,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4998,
											"end": 5050,
											"name": "tag",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 4998,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5069,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 5088,
											"end": 5097,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5069,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 5069,
											"end": 5098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5069,
											"end": 5098,
											"name": "tag",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 5069,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5059,
											"end": 5098,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5059,
											"end": 5098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5138,
											"end": 5147,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5134,
											"end": 5152,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5153,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5168,
											"end": 5174,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5165,
											"end": 5195,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5162,
											"end": 5212,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5162,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 5162,
											"end": 5212,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5208,
											"end": 5209,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5206,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5198,
											"end": 5210,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5162,
											"end": 5212,
											"name": "tag",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 5162,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5231,
											"end": 5253,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5231,
											"end": 5253,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5284,
											"end": 5288,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5272,
											"end": 5299,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5262,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 5262,
											"end": 5317,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5303,
											"end": 5315,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5262,
											"end": 5317,
											"name": "tag",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 5262,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5336,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5384,
											"end": 5400,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5379,
											"end": 5381,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5375,
											"end": 5377,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5371,
											"end": 5382,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5336,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 5336,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5336,
											"end": 5410,
											"name": "tag",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 5336,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5326,
											"end": 5410,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5326,
											"end": 5410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5326,
											"end": 5410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 5416,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 5416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 5416,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 5416,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 5416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 5416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5421,
											"end": 5817,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 5421,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5499,
											"end": 5505,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5507,
											"end": 5513,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5557,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5539,
											"end": 5546,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5535,
											"end": 5558,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5531,
											"end": 5563,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5528,
											"end": 5580,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5528,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "698"
										},
										{
											"begin": 5528,
											"end": 5580,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5576,
											"end": 5577,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5566,
											"end": 5578,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5528,
											"end": 5580,
											"name": "tag",
											"source": 14,
											"value": "698"
										},
										{
											"begin": 5528,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5616,
											"end": 5625,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5603,
											"end": 5626,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5641,
											"end": 5647,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5638,
											"end": 5668,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5635,
											"end": 5685,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5635,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 5635,
											"end": 5685,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5681,
											"end": 5682,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5679,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5671,
											"end": 5683,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5635,
											"end": 5685,
											"name": "tag",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 5635,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5704,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 5746,
											"end": 5753,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5737,
											"end": 5743,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5726,
											"end": 5735,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5722,
											"end": 5744,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5704,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 5704,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5704,
											"end": 5754,
											"name": "tag",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 5704,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5694,
											"end": 5754,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5694,
											"end": 5754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5694,
											"end": 5754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5773,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 5807,
											"end": 5809,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5805,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5792,
											"end": 5810,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5773,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 5773,
											"end": 5811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6046,
											"end": 6698,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 6046,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6157,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6159,
											"end": 6165,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6200,
											"end": 6209,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6191,
											"end": 6198,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6187,
											"end": 6210,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6183,
											"end": 6215,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6180,
											"end": 6232,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6180,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 6180,
											"end": 6232,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6228,
											"end": 6229,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6218,
											"end": 6230,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6180,
											"end": 6232,
											"name": "tag",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 6180,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6268,
											"end": 6277,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6255,
											"end": 6278,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6293,
											"end": 6299,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6290,
											"end": 6320,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6287,
											"end": 6337,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6287,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 6287,
											"end": 6337,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6330,
											"end": 6331,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6323,
											"end": 6335,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6287,
											"end": 6337,
											"name": "tag",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 6287,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6356,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6389,
											"end": 6395,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 6374,
											"end": 6396,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6356,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 6356,
											"end": 6406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6356,
											"end": 6406,
											"name": "tag",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 6356,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6346,
											"end": 6406,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6346,
											"end": 6406,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6346,
											"end": 6406,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6461,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6457,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6431,
											"end": 6463,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6478,
											"end": 6486,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6475,
											"end": 6507,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6472,
											"end": 6524,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6472,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 6472,
											"end": 6524,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6520,
											"end": 6521,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6518,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6510,
											"end": 6522,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6472,
											"end": 6524,
											"name": "tag",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 6472,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6543,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 6587,
											"end": 6594,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6576,
											"end": 6584,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6565,
											"end": 6574,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 6561,
											"end": 6585,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6543,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 6543,
											"end": 6595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6543,
											"end": 6595,
											"name": "tag",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 6543,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6046,
											"end": 6698,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6046,
											"end": 6698,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 6533,
											"end": 6595,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6533,
											"end": 6595,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6664,
											"end": 6666,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6636,
											"end": 6668,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 6636,
											"end": 6668,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6046,
											"end": 6698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6926,
											"end": 7226,
											"name": "tag",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 6926,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6979,
											"end": 6982,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7022,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7011,
											"end": 7023,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7044,
											"end": 7050,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7039,
											"end": 7042,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7032,
											"end": 7051,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7100,
											"end": 7106,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7093,
											"end": 7097,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7086,
											"end": 7091,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7082,
											"end": 7098,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7075,
											"end": 7079,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7070,
											"end": 7073,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7066,
											"end": 7080,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7107,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 7152,
											"end": 7153,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7145,
											"end": 7149,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7131,
											"end": 7134,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7127,
											"end": 7143,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7123,
											"end": 7150,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7116,
											"end": 7154,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7215,
											"end": 7219,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7210,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7204,
											"end": 7211,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 7199,
											"end": 7201,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7191,
											"end": 7197,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7183,
											"end": 7212,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7178,
											"end": 7181,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7174,
											"end": 7213,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7220,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7163,
											"end": 7220,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7163,
											"end": 7220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7163,
											"end": 7220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6926,
											"end": 7226,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6926,
											"end": 7226,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6926,
											"end": 7226,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6926,
											"end": 7226,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6926,
											"end": 7226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7231,
											"end": 7559,
											"name": "tag",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 7231,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7408,
											"end": 7410,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7397,
											"end": 7406,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7390,
											"end": 7411,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 7480,
											"end": 7482,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7469,
											"end": 7478,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7465,
											"end": 7483,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7457,
											"end": 7463,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7428,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 7428,
											"end": 7484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7428,
											"end": 7484,
											"name": "tag",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 7428,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7420,
											"end": 7484,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7420,
											"end": 7484,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7549,
											"end": 7550,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7545,
											"end": 7546,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7540,
											"end": 7543,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 7536,
											"end": 7547,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 7532,
											"end": 7551,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7520,
											"end": 7552,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7515,
											"end": 7517,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7504,
											"end": 7513,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7493,
											"end": 7553,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7231,
											"end": 7559,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7231,
											"end": 7559,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7231,
											"end": 7559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7231,
											"end": 7559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7231,
											"end": 7559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7231,
											"end": 7559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7564,
											"end": 8688,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 7564,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7657,
											"end": 7663,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7671,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7718,
											"end": 7720,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7706,
											"end": 7715,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7697,
											"end": 7704,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7693,
											"end": 7716,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7689,
											"end": 7721,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7734,
											"end": 7735,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7731,
											"end": 7732,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7724,
											"end": 7736,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "tag",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 7686,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7799,
											"end": 7805,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7796,
											"end": 7826,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7793,
											"end": 7843,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7793,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 7793,
											"end": 7843,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7839,
											"end": 7840,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7837,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7829,
											"end": 7841,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7793,
											"end": 7843,
											"name": "tag",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 7793,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7862,
											"end": 7884,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7862,
											"end": 7884,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7915,
											"end": 7919,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7907,
											"end": 7920,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7907,
											"end": 7920,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7903,
											"end": 7930,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 7893,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 7893,
											"end": 7948,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7944,
											"end": 7945,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7942,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7934,
											"end": 7946,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7893,
											"end": 7948,
											"name": "tag",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 7893,
											"end": 7948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7984,
											"end": 7986,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7971,
											"end": 7987,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8002,
											"end": 8008,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7999,
											"end": 8029,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7996,
											"end": 8052,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7996,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 7996,
											"end": 8052,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 8032,
											"end": 8050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "tag",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8078,
											"end": 8084,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 8071,
											"end": 8085,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 8105,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 8129,
											"end": 8133,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8125,
											"end": 8127,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8121,
											"end": 8134,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8105,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 8105,
											"end": 8135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8105,
											"end": 8135,
											"name": "tag",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 8105,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8169,
											"end": 8188,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8213,
											"end": 8217,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8245,
											"end": 8256,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8245,
											"end": 8256,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8245,
											"end": 8256,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8204,
											"end": 8218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8204,
											"end": 8218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8204,
											"end": 8218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8204,
											"end": 8218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8272,
											"end": 8311,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8272,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "720"
										},
										{
											"begin": 8272,
											"end": 8311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8307,
											"end": 8308,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8304,
											"end": 8305,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8297,
											"end": 8309,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8272,
											"end": 8311,
											"name": "tag",
											"source": 14,
											"value": "720"
										},
										{
											"begin": 8272,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8339,
											"end": 8343,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8335,
											"end": 8337,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8331,
											"end": 8344,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8320,
											"end": 8344,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 8320,
											"end": 8344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8553,
											"name": "tag",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 8353,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8369,
											"end": 8375,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8364,
											"end": 8367,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8361,
											"end": 8376,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8553,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "723"
										},
										{
											"begin": 8353,
											"end": 8553,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8461,
											"end": 8478,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8461,
											"end": 8478,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8538,
											"end": 8542,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8386,
											"end": 8400,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8400,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8400,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8400,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 8461,
											"end": 8478,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8461,
											"end": 8478,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8529,
											"end": 8543,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8529,
											"end": 8543,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8529,
											"end": 8543,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8529,
											"end": 8543,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 8353,
											"end": 8553,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8553,
											"name": "tag",
											"source": 14,
											"value": "723"
										},
										{
											"begin": 8353,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8572,
											"end": 8577,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 8650,
											"end": 8654,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8622,
											"end": 8656,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8622,
											"end": 8656,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7564,
											"end": 8688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8693,
											"end": 8924,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 8693,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8842,
											"end": 8844,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8831,
											"end": 8840,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8824,
											"end": 8845,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8805,
											"end": 8809,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8862,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 8914,
											"end": 8916,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8903,
											"end": 8912,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8891,
											"end": 8897,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8862,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 8862,
											"end": 8918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8929,
											"end": 9519,
											"name": "tag",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 8929,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9218,
											"end": 9224,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9207,
											"end": 9216,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9200,
											"end": 9225,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9261,
											"end": 9264,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 9256,
											"end": 9258,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9254,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9234,
											"end": 9265,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9181,
											"end": 9185,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9282,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "727"
										},
										{
											"begin": 9334,
											"end": 9337,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 9323,
											"end": 9332,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9319,
											"end": 9338,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9311,
											"end": 9317,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 9282,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 9282,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9282,
											"end": 9339,
											"name": "tag",
											"source": 14,
											"value": "727"
										},
										{
											"begin": 9282,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9274,
											"end": 9339,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9274,
											"end": 9339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9375,
											"end": 9381,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9370,
											"end": 9372,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9359,
											"end": 9368,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9348,
											"end": 9382,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9418,
											"end": 9424,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9402,
											"end": 9411,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9391,
											"end": 9425,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9462,
											"end": 9468,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9456,
											"end": 9459,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 9445,
											"end": 9454,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9441,
											"end": 9460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9434,
											"end": 9469,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9506,
											"end": 9512,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9500,
											"end": 9503,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 9489,
											"end": 9498,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9485,
											"end": 9504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9478,
											"end": 9513,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8929,
											"end": 9519,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 8929,
											"end": 9519,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 8929,
											"end": 9519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8929,
											"end": 9519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8929,
											"end": 9519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8929,
											"end": 9519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8929,
											"end": 9519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8929,
											"end": 9519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8929,
											"end": 9519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8929,
											"end": 9519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9524,
											"end": 9824,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 9524,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9592,
											"end": 9598,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9600,
											"end": 9606,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9653,
											"end": 9655,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9650,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9632,
											"end": 9639,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9628,
											"end": 9651,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9624,
											"end": 9656,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9621,
											"end": 9673,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9621,
											"end": 9673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 9621,
											"end": 9673,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9669,
											"end": 9670,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9666,
											"end": 9667,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9659,
											"end": 9671,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9621,
											"end": 9673,
											"name": "tag",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 9621,
											"end": 9673,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9692,
											"end": 9721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "730"
										},
										{
											"begin": 9711,
											"end": 9720,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9692,
											"end": 9721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 9692,
											"end": 9721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9692,
											"end": 9721,
											"name": "tag",
											"source": 14,
											"value": "730"
										},
										{
											"begin": 9692,
											"end": 9721,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9682,
											"end": 9721,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9792,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9775,
											"end": 9793,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9775,
											"end": 9793,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9775,
											"end": 9793,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9775,
											"end": 9793,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9762,
											"end": 9794,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9762,
											"end": 9794,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9524,
											"end": 9824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9829,
											"end": 10388,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 9829,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 10079,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10065,
											"end": 10074,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10058,
											"end": 10080,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10039,
											"end": 10043,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 10155,
											"end": 10158,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10144,
											"end": 10153,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10140,
											"end": 10159,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10132,
											"end": 10138,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10103,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 10103,
											"end": 10160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10103,
											"end": 10160,
											"name": "tag",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 10103,
											"end": 10160,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10208,
											"end": 10217,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10196,
											"end": 10218,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10191,
											"end": 10193,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10180,
											"end": 10189,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10176,
											"end": 10194,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10169,
											"end": 10219,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10236,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 10273,
											"end": 10279,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10265,
											"end": 10271,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10236,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 10236,
											"end": 10280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10236,
											"end": 10280,
											"name": "tag",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 10236,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10311,
											"end": 10313,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10289,
											"end": 10323,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10289,
											"end": 10323,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10289,
											"end": 10323,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10289,
											"end": 10323,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10366,
											"end": 10380,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10366,
											"end": 10380,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10359,
											"end": 10381,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10354,
											"end": 10356,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10339,
											"end": 10357,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10339,
											"end": 10357,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10339,
											"end": 10357,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10332,
											"end": 10382,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10228,
											"end": 10280,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9829,
											"end": 10388,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9829,
											"end": 10388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11433,
											"end": 11439,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11441,
											"end": 11447,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11449,
											"end": 11455,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11457,
											"end": 11463,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11465,
											"end": 11471,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11473,
											"end": 11479,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11481,
											"end": 11487,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11495,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11497,
											"end": 11503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11550,
											"end": 11553,
											"name": "PUSH",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 11538,
											"end": 11547,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 11529,
											"end": 11536,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 11525,
											"end": 11548,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11521,
											"end": 11554,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11518,
											"end": 11571,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11518,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 11518,
											"end": 11571,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11567,
											"end": 11568,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11564,
											"end": 11565,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11557,
											"end": 11569,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11518,
											"end": 11571,
											"name": "tag",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 11518,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11590,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 11609,
											"end": 11618,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 11590,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 11590,
											"end": 11619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11590,
											"end": 11619,
											"name": "tag",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 11590,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11580,
											"end": 11619,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 11580,
											"end": 11619,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11638,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 11672,
											"end": 11674,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11661,
											"end": 11670,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 11657,
											"end": 11675,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11638,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 11638,
											"end": 11676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11638,
											"end": 11676,
											"name": "tag",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 11638,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11628,
											"end": 11676,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 11628,
											"end": 11676,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11695,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 11729,
											"end": 11731,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11718,
											"end": 11727,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11695,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 11695,
											"end": 11733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11695,
											"end": 11733,
											"name": "tag",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 11695,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11685,
											"end": 11733,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 11685,
											"end": 11733,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11752,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 11786,
											"end": 11788,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11775,
											"end": 11784,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 11771,
											"end": 11789,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11752,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 11752,
											"end": 11790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11752,
											"end": 11790,
											"name": "tag",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 11752,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11742,
											"end": 11790,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 11742,
											"end": 11790,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11809,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "742"
										},
										{
											"begin": 11843,
											"end": 11846,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 11832,
											"end": 11841,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 11828,
											"end": 11847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11809,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 11809,
											"end": 11848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11809,
											"end": 11848,
											"name": "tag",
											"source": 14,
											"value": "742"
										},
										{
											"begin": 11809,
											"end": 11848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11799,
											"end": 11848,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11799,
											"end": 11848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11867,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "743"
										},
										{
											"begin": 11901,
											"end": 11904,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 11890,
											"end": 11899,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 11886,
											"end": 11905,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11867,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 11867,
											"end": 11906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11867,
											"end": 11906,
											"name": "tag",
											"source": 14,
											"value": "743"
										},
										{
											"begin": 11867,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11857,
											"end": 11906,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11857,
											"end": 11906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 11964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "744"
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 11948,
											"end": 11957,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 11944,
											"end": 11963,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 11964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 11925,
											"end": 11964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 11964,
											"name": "tag",
											"source": 14,
											"value": "744"
										},
										{
											"begin": 11925,
											"end": 11964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11915,
											"end": 11964,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11915,
											"end": 11964,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11983,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 12017,
											"end": 12020,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 12006,
											"end": 12015,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 12002,
											"end": 12021,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11983,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 11983,
											"end": 12022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11983,
											"end": 12022,
											"name": "tag",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 11983,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11973,
											"end": 12022,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11973,
											"end": 12022,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12041,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 12075,
											"end": 12078,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 12064,
											"end": 12073,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 12060,
											"end": 12079,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12041,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 12041,
											"end": 12080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12041,
											"end": 12080,
											"name": "tag",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 12041,
											"end": 12080,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12031,
											"end": 12080,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12031,
											"end": 12080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 12086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12091,
											"end": 12218,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 12091,
											"end": 12218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12152,
											"end": 12162,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 12147,
											"end": 12150,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 12143,
											"end": 12163,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 12140,
											"end": 12141,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12183,
											"end": 12187,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 12180,
											"end": 12181,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12173,
											"end": 12188,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12207,
											"end": 12211,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12204,
											"end": 12205,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12197,
											"end": 12212,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12223,
											"end": 12435,
											"name": "tag",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 12223,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12265,
											"end": 12268,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12303,
											"end": 12308,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12297,
											"end": 12309,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12347,
											"end": 12353,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12340,
											"end": 12344,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12329,
											"end": 12345,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12324,
											"end": 12327,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12318,
											"end": 12354,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 12409,
											"end": 12410,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12373,
											"end": 12389,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12373,
											"end": 12389,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12398,
											"end": 12411,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12398,
											"end": 12411,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12398,
											"end": 12411,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12373,
											"end": 12389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12373,
											"end": 12389,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12223,
											"end": 12435,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12223,
											"end": 12435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12440,
											"end": 12632,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 12440,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12571,
											"end": 12574,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12596,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 12622,
											"end": 12625,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12614,
											"end": 12620,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12596,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 12596,
											"end": 12626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12637,
											"end": 13017,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 12637,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12716,
											"end": 12717,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12712,
											"end": 12724,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12712,
											"end": 12724,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12712,
											"end": 12724,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 12712,
											"end": 12724,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12759,
											"end": 12771,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12759,
											"end": 12771,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12759,
											"end": 12771,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12780,
											"end": 12841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "752"
										},
										{
											"begin": 12780,
											"end": 12841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12834,
											"end": 12838,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 12826,
											"end": 12832,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12822,
											"end": 12839,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12812,
											"end": 12839,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12812,
											"end": 12839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12780,
											"end": 12841,
											"name": "tag",
											"source": 14,
											"value": "752"
										},
										{
											"begin": 12780,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12887,
											"end": 12889,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12879,
											"end": 12885,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12876,
											"end": 12890,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12856,
											"end": 12874,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12853,
											"end": 12891,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12850,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "753"
										},
										{
											"begin": 12850,
											"end": 13011,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12933,
											"end": 12943,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 12924,
											"end": 12944,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 12921,
											"end": 12922,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12914,
											"end": 12945,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12968,
											"end": 12972,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 12965,
											"end": 12966,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12958,
											"end": 12973,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12996,
											"end": 13000,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12993,
											"end": 12994,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12986,
											"end": 13001,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12850,
											"end": 13011,
											"name": "tag",
											"source": 14,
											"value": "753"
										},
										{
											"begin": 12850,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12850,
											"end": 13011,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12637,
											"end": 13017,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12637,
											"end": 13017,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12637,
											"end": 13017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12637,
											"end": 13017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13148,
											"end": 13945,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 13148,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13276,
											"end": 13279,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13305,
											"end": 13306,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13338,
											"end": 13344,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13332,
											"end": 13345,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 13368,
											"end": 13404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "756"
										},
										{
											"begin": 13394,
											"end": 13403,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13368,
											"end": 13404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 13368,
											"end": 13404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13368,
											"end": 13404,
											"name": "tag",
											"source": 14,
											"value": "756"
										},
										{
											"begin": 13368,
											"end": 13404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13435,
											"end": 13436,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13420,
											"end": 13437,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13420,
											"end": 13437,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13446,
											"end": 13579,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13446,
											"end": 13579,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13446,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "758"
										},
										{
											"begin": 13446,
											"end": 13579,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13593,
											"end": 13594,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13588,
											"end": 13920,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13588,
											"end": 13920,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13588,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "759"
										},
										{
											"begin": 13588,
											"end": 13920,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13413,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "757"
										},
										{
											"begin": 13413,
											"end": 13920,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13446,
											"end": 13579,
											"name": "tag",
											"source": 14,
											"value": "758"
										},
										{
											"begin": 13446,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13479,
											"end": 13503,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13479,
											"end": 13503,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13467,
											"end": 13504,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13467,
											"end": 13504,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13552,
											"end": 13566,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13552,
											"end": 13566,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13533,
											"end": 13568,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13533,
											"end": 13568,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 13524,
											"end": 13569,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13524,
											"end": 13569,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13524,
											"end": 13569,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13446,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "757"
										},
										{
											"begin": 13446,
											"end": 13579,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13588,
											"end": 13920,
											"name": "tag",
											"source": 14,
											"value": "759"
										},
										{
											"begin": 13588,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13619,
											"end": 13625,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13616,
											"end": 13617,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13609,
											"end": 13626,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13667,
											"end": 13671,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13664,
											"end": 13665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13654,
											"end": 13672,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 13694,
											"end": 13695,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13708,
											"end": 13874,
											"name": "tag",
											"source": 14,
											"value": "760"
										},
										{
											"begin": 13708,
											"end": 13874,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13722,
											"end": 13728,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13719,
											"end": 13720,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13716,
											"end": 13729,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13708,
											"end": 13874,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13708,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "762"
										},
										{
											"begin": 13708,
											"end": 13874,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13802,
											"end": 13816,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13802,
											"end": 13816,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 13789,
											"end": 13800,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 13789,
											"end": 13800,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13789,
											"end": 13800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13782,
											"end": 13817,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13858,
											"end": 13859,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13845,
											"end": 13860,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13845,
											"end": 13860,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13845,
											"end": 13860,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13845,
											"end": 13860,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13744,
											"end": 13748,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13737,
											"end": 13749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13708,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "760"
										},
										{
											"begin": 13708,
											"end": 13874,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13708,
											"end": 13874,
											"name": "tag",
											"source": 14,
											"value": "762"
										},
										{
											"begin": 13708,
											"end": 13874,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13903,
											"end": 13909,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13898,
											"end": 13901,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13894,
											"end": 13910,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13887,
											"end": 13910,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13887,
											"end": 13910,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13413,
											"end": 13920,
											"name": "tag",
											"source": 14,
											"value": "757"
										},
										{
											"begin": 13413,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13936,
											"end": 13939,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13936,
											"end": 13939,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 13148,
											"end": 13945,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13148,
											"end": 13945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13950,
											"end": 14077,
											"name": "tag",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 13950,
											"end": 14077,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14011,
											"end": 14021,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 14006,
											"end": 14009,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 14002,
											"end": 14022,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 13999,
											"end": 14000,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13992,
											"end": 14023,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14042,
											"end": 14046,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 14039,
											"end": 14040,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 14032,
											"end": 14047,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14066,
											"end": 14070,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 14063,
											"end": 14064,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14056,
											"end": 14071,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14082,
											"end": 14207,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 14082,
											"end": 14207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14147,
											"end": 14156,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14147,
											"end": 14156,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14147,
											"end": 14156,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14168,
											"end": 14178,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14168,
											"end": 14178,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14168,
											"end": 14178,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14165,
											"end": 14201,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14165,
											"end": 14201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 14165,
											"end": 14201,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14181,
											"end": 14199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 14181,
											"end": 14199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 14181,
											"end": 14199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14730,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 14212,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14314,
											"end": 14316,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 14309,
											"end": 14312,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14306,
											"end": 14317,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14303,
											"end": 14724,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14303,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 14303,
											"end": 14724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14350,
											"end": 14355,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14347,
											"end": 14348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14340,
											"end": 14356,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14394,
											"end": 14398,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14391,
											"end": 14392,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14381,
											"end": 14399,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 14464,
											"end": 14466,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 14452,
											"end": 14462,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14448,
											"end": 14467,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14445,
											"end": 14446,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 14441,
											"end": 14468,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 14435,
											"end": 14439,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14431,
											"end": 14469,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14500,
											"end": 14504,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14488,
											"end": 14498,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14485,
											"end": 14505,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14482,
											"end": 14529,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14482,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "769"
										},
										{
											"begin": 14482,
											"end": 14529,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14523,
											"end": 14527,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14482,
											"end": 14529,
											"name": "tag",
											"source": 14,
											"value": "769"
										},
										{
											"begin": 14482,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14578,
											"end": 14580,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 14573,
											"end": 14576,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14569,
											"end": 14581,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14566,
											"end": 14567,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 14562,
											"end": 14582,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 14556,
											"end": 14560,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14552,
											"end": 14583,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14542,
											"end": 14583,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14542,
											"end": 14583,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14633,
											"end": 14714,
											"name": "tag",
											"source": 14,
											"value": "770"
										},
										{
											"begin": 14633,
											"end": 14714,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14651,
											"end": 14653,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14644,
											"end": 14649,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14641,
											"end": 14654,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14633,
											"end": 14714,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14633,
											"end": 14714,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "772"
										},
										{
											"begin": 14633,
											"end": 14714,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14710,
											"end": 14711,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14696,
											"end": 14712,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14696,
											"end": 14712,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 14677,
											"end": 14678,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14666,
											"end": 14679,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14633,
											"end": 14714,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "770"
										},
										{
											"begin": 14633,
											"end": 14714,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14633,
											"end": 14714,
											"name": "tag",
											"source": 14,
											"value": "772"
										},
										{
											"begin": 14633,
											"end": 14714,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14637,
											"end": 14640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14637,
											"end": 14640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14730,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14730,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14730,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14906,
											"end": 16205,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 14906,
											"end": 16205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15032,
											"end": 15035,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15026,
											"end": 15036,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15051,
											"end": 15057,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15048,
											"end": 15078,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 15045,
											"end": 15101,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15045,
											"end": 15101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "776"
										},
										{
											"begin": 15045,
											"end": 15101,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15081,
											"end": 15099,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "776"
										},
										{
											"begin": 15081,
											"end": 15099,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 15081,
											"end": 15099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15081,
											"end": 15099,
											"name": "tag",
											"source": 14,
											"value": "776"
										},
										{
											"begin": 15081,
											"end": 15099,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15110,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "777"
										},
										{
											"begin": 15200,
											"end": 15206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15160,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "778"
										},
										{
											"begin": 15192,
											"end": 15196,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15186,
											"end": 15197,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15160,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 15160,
											"end": 15198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15160,
											"end": 15198,
											"name": "tag",
											"source": 14,
											"value": "778"
										},
										{
											"begin": 15160,
											"end": 15198,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15154,
											"end": 15158,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15110,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 15110,
											"end": 15207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15110,
											"end": 15207,
											"name": "tag",
											"source": 14,
											"value": "777"
										},
										{
											"begin": 15110,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15256,
											"end": 15260,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15287,
											"end": 15289,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 15276,
											"end": 15290,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15276,
											"end": 15290,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 15304,
											"end": 15305,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15299,
											"end": 15948,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15948,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "780"
										},
										{
											"begin": 15299,
											"end": 15948,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15992,
											"end": 15993,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16009,
											"end": 16015,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16006,
											"end": 16095,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16006,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "781"
										},
										{
											"begin": 16006,
											"end": 16095,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16061,
											"end": 16080,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16061,
											"end": 16080,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16061,
											"end": 16080,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16055,
											"end": 16081,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 16006,
											"end": 16095,
											"name": "tag",
											"source": 14,
											"value": "781"
										},
										{
											"begin": 16006,
											"end": 16095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14863,
											"end": 14864,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 14859,
											"end": 14870,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14859,
											"end": 14870,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14859,
											"end": 14870,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 14855,
											"end": 14879,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 14851,
											"end": 14880,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 14841,
											"end": 14881,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14887,
											"end": 14888,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14883,
											"end": 14894,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14883,
											"end": 14894,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14883,
											"end": 14894,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 14838,
											"end": 14895,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 16108,
											"end": 16189,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16108,
											"end": 16189,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 15269,
											"end": 16199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "772"
										},
										{
											"begin": 15269,
											"end": 16199,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15948,
											"name": "tag",
											"source": 14,
											"value": "780"
										},
										{
											"begin": 15299,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13095,
											"end": 13096,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13102,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13088,
											"end": 13102,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13088,
											"end": 13102,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13132,
											"end": 13136,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13119,
											"end": 13137,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13119,
											"end": 13137,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15335,
											"end": 15355,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15335,
											"end": 15355,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15335,
											"end": 15355,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15453,
											"end": 15675,
											"name": "tag",
											"source": 14,
											"value": "784"
										},
										{
											"begin": 15453,
											"end": 15675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15467,
											"end": 15474,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15464,
											"end": 15465,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15461,
											"end": 15475,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 15453,
											"end": 15675,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15453,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "786"
										},
										{
											"begin": 15453,
											"end": 15675,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15549,
											"end": 15568,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 15549,
											"end": 15568,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15549,
											"end": 15568,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15543,
											"end": 15569,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15528,
											"end": 15570,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15528,
											"end": 15570,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 15656,
											"end": 15660,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15641,
											"end": 15661,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 15641,
											"end": 15661,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15641,
											"end": 15661,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15641,
											"end": 15661,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 15609,
											"end": 15610,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15597,
											"end": 15611,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15597,
											"end": 15611,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15597,
											"end": 15611,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15597,
											"end": 15611,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15483,
											"end": 15495,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15453,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "784"
										},
										{
											"begin": 15453,
											"end": 15675,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15453,
											"end": 15675,
											"name": "tag",
											"source": 14,
											"value": "786"
										},
										{
											"begin": 15453,
											"end": 15675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15457,
											"end": 15460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15703,
											"end": 15709,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15694,
											"end": 15701,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15691,
											"end": 15710,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 15688,
											"end": 15889,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15688,
											"end": 15889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "787"
										},
										{
											"begin": 15688,
											"end": 15889,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15764,
											"end": 15783,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 15764,
											"end": 15783,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15764,
											"end": 15783,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15758,
											"end": 15784,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15847,
											"end": 15848,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 15843,
											"end": 15857,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 15843,
											"end": 15857,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15843,
											"end": 15857,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 15859,
											"end": 15862,
											"name": "PUSH",
											"source": 14,
											"value": "F8"
										},
										{
											"begin": 15839,
											"end": 15863,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15835,
											"end": 15872,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 15831,
											"end": 15873,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 15816,
											"end": 15874,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15801,
											"end": 15875,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15801,
											"end": 15875,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 15688,
											"end": 15889,
											"name": "tag",
											"source": 14,
											"value": "787"
										},
										{
											"begin": 15688,
											"end": 15889,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15935,
											"end": 15936,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15919,
											"end": 15933,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15919,
											"end": 15933,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15919,
											"end": 15933,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 15915,
											"end": 15937,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15902,
											"end": 15938,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15902,
											"end": 15938,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14906,
											"end": 16205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16210,
											"end": 16512,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 16210,
											"end": 16512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16387,
											"end": 16393,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16376,
											"end": 16385,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16369,
											"end": 16394,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16430,
											"end": 16432,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16425,
											"end": 16427,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16414,
											"end": 16423,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16410,
											"end": 16428,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16403,
											"end": 16433,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16350,
											"end": 16354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16450,
											"end": 16506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 16502,
											"end": 16504,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16491,
											"end": 16500,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16487,
											"end": 16505,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16479,
											"end": 16485,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16450,
											"end": 16506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 16450,
											"end": 16506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16517,
											"end": 16652,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 16517,
											"end": 16652,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16556,
											"end": 16559,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16577,
											"end": 16594,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16577,
											"end": 16594,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16577,
											"end": 16594,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16574,
											"end": 16617,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "792"
										},
										{
											"begin": 16574,
											"end": 16617,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "792"
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 16597,
											"end": 16615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "tag",
											"source": 14,
											"value": "792"
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16644,
											"end": 16645,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16633,
											"end": 16646,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16633,
											"end": 16646,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16517,
											"end": 16652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18107,
											"end": 18235,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 18107,
											"end": 18235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18174,
											"end": 18183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18174,
											"end": 18183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18174,
											"end": 18183,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18195,
											"end": 18206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18195,
											"end": 18206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18195,
											"end": 18206,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 18192,
											"end": 18229,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18192,
											"end": 18229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 18192,
											"end": 18229,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18209,
											"end": 18227,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 18209,
											"end": 18227,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 18209,
											"end": 18227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18240,
											"end": 18367,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 18240,
											"end": 18367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18301,
											"end": 18311,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 18296,
											"end": 18299,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 18292,
											"end": 18312,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 18289,
											"end": 18290,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18282,
											"end": 18313,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18332,
											"end": 18336,
											"name": "PUSH",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 18329,
											"end": 18330,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 18322,
											"end": 18337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18356,
											"end": 18360,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 18353,
											"end": 18354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18346,
											"end": 18361,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 19804,
											"end": 19988,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 19804,
											"end": 19988,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19874,
											"end": 19880,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19927,
											"end": 19929,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19915,
											"end": 19924,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19906,
											"end": 19913,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19902,
											"end": 19925,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19898,
											"end": 19930,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 19895,
											"end": 19947,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19895,
											"end": 19947,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "807"
										},
										{
											"begin": 19895,
											"end": 19947,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19943,
											"end": 19944,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19940,
											"end": 19941,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 19933,
											"end": 19945,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 19895,
											"end": 19947,
											"name": "tag",
											"source": 14,
											"value": "807"
										},
										{
											"begin": 19895,
											"end": 19947,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19966,
											"end": 19982,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 19966,
											"end": 19982,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19804,
											"end": 19988,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19804,
											"end": 19988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									],
									".data": {
										"3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3": "9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08",
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C": "65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
										"B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F": "02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800",
										"C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F": "cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"GAME_ADMIN_ROLE()": "be22d27d",
							"PAUSER_ROLE()": "e63ab1e9",
							"UPGRADER_ROLE()": "f72c0d8b",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"addItem(string,uint256,uint256,uint256,uint256)": "31fee8be",
							"addRecipe(uint256[],uint256)": "a9834b67",
							"completeQuest(string)": "17435e1a",
							"craftItem(uint256)": "7309cbbd",
							"createGuild(string,address)": "4fa4a1bb",
							"createPlayer()": "3fa9fcf8",
							"daoContract()": "4a7ffcbc",
							"erc1155Token()": "21f42268",
							"erc20Token()": "8a13eea7",
							"erc721Token()": "5f2d6bcd",
							"farmingContract()": "02eec568",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"guilds(address)": "a75859e1",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,address,address,address,address,address,address,address,address)": "f5e95acb",
							"items(uint256)": "bfb231d2",
							"joinGuild(string)": "e551ba4b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"playerQuests(address,uint256)": "d3dcff7c",
							"players(address)": "e2eb41ff",
							"proxiableUUID()": "52d1902d",
							"recipes(uint256)": "443c227c",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setDAOAddress(address)": "965afa89",
							"setERC1155Address(address)": "d836fc6f",
							"setERC20Address(address)": "41bec0d2",
							"setERC721Address(address)": "9a03d9a3",
							"setFarmingAddress(address)": "b001f618",
							"setStakingAddress(address)": "f4e0d9ac",
							"stakingContract()": "ee99205c",
							"startQuest(string,string,uint256)": "6f347a78",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unpause()": "3f4ba83a",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"leader\",\"type\":\"address\"}],\"name\":\"GuildCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"itemName\",\"type\":\"string\"}],\"name\":\"ItemAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"PlayerCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"questTitle\",\"type\":\"string\"}],\"name\":\"QuestCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recipeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"resultItemId\",\"type\":\"uint256\"}],\"name\":\"RecipeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAME_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"attackBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defenseBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"manaBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthBonus\",\"type\":\"uint256\"}],\"name\":\"addItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"resultItemId\",\"type\":\"uint256\"}],\"name\":\"addRecipe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"questTitle\",\"type\":\"string\"}],\"name\":\"completeQuest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"recipeId\",\"type\":\"uint256\"}],\"name\":\"craftItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"leader\",\"type\":\"address\"}],\"name\":\"createGuild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createPlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoContract\",\"outputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc1155Token\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20Token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721Token\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmingContract\",\"outputs\":[{\"internalType\":\"contract IFarming\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"guilds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"leader\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"upgrader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc721Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc1155Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_daoAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_farmingAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"attackBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defenseBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"manaBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthBonus\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"guildName\",\"type\":\"string\"}],\"name\":\"joinGuild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerQuests\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rewardXP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"health\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mana\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"attackDamage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defense\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"agility\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"luck\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recipes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"resultItemId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_daoAddress\",\"type\":\"address\"}],\"name\":\"setDAOAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc1155Address\",\"type\":\"address\"}],\"name\":\"setERC1155Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20Address\",\"type\":\"address\"}],\"name\":\"setERC20Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc721Address\",\"type\":\"address\"}],\"name\":\"setERC721Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_farmingAddress\",\"type\":\"address\"}],\"name\":\"setFarmingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"}],\"name\":\"setStakingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"contract IStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rewardXP\",\"type\":\"uint256\"}],\"name\":\"startQuest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"jacquedegraff@creodamo.com\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":\"CryptoQuestTheShardsOfGenesisMMPORPG\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":{\"keccak256\":\"0x3ca23ec6b77ce5e7b124c7dc3f5b5d1f131864e7e7af073e16a74c07797d8f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fb5dbb1acb9096df679b7c6f0cd0f91b146f7b1983c7501ee8313bfab63ab6a\",\"dweb:/ipfs/QmT95JxBDbYWtuF189Uk5xHDr7PVXvsQQSSNde9CQ4xZKW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1911,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "erc20Token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)1857"
							},
							{
								"astId": 1914,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "erc721Token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721)1867"
							},
							{
								"astId": 1917,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "erc1155Token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC1155)1881"
							},
							{
								"astId": 1920,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "daoContract",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IDAO)1882"
							},
							{
								"astId": 1923,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "stakingContract",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IStaking)1883"
							},
							{
								"astId": 1926,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "farmingContract",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IFarming)1884"
							},
							{
								"astId": 1988,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "nextItemId",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1991,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "nextRecipeId",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1996,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "items",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_struct(Item)1962_storage)"
							},
							{
								"astId": 2001,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "players",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(Player)1949_storage)"
							},
							{
								"astId": 2007,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "playerQuests",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_array(t_struct(Quest)1971_storage)dyn_storage)"
							},
							{
								"astId": 2012,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "guilds",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_struct(Guild)1979_storage)"
							},
							{
								"astId": 2016,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "guildNameToLeader",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_string_memory_ptr,t_address)"
							},
							{
								"astId": 2021,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "recipes",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(Recipe)1985_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Quest)1971_storage)dyn_storage": {
								"base": "t_struct(Quest)1971_storage",
								"encoding": "dynamic_array",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IDAO)1882": {
								"encoding": "inplace",
								"label": "contract IDAO",
								"numberOfBytes": "20"
							},
							"t_contract(IERC1155)1881": {
								"encoding": "inplace",
								"label": "contract IERC1155",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)1857": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)1867": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(IFarming)1884": {
								"encoding": "inplace",
								"label": "contract IFarming",
								"numberOfBytes": "20"
							},
							"t_contract(IStaking)1883": {
								"encoding": "inplace",
								"label": "contract IStaking",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Quest)1971_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Quest)1971_storage)dyn_storage"
							},
							"t_mapping(t_address,t_struct(Guild)1979_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild)",
								"numberOfBytes": "32",
								"value": "t_struct(Guild)1979_storage"
							},
							"t_mapping(t_address,t_struct(Player)1949_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player)",
								"numberOfBytes": "32",
								"value": "t_struct(Player)1949_storage"
							},
							"t_mapping(t_string_memory_ptr,t_address)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(Item)1962_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Item)",
								"numberOfBytes": "32",
								"value": "t_struct(Item)1962_storage"
							},
							"t_mapping(t_uint256,t_struct(Recipe)1985_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe)",
								"numberOfBytes": "32",
								"value": "t_struct(Recipe)1985_storage"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Guild)1979_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild",
								"members": [
									{
										"astId": 1973,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1975,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "leader",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1978,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "members",
										"offset": 0,
										"slot": "2",
										"type": "t_array(t_address)dyn_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Item)1962_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Item",
								"members": [
									{
										"astId": 1951,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1953,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "name",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1955,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "attackBonus",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1957,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "defenseBonus",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1959,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "manaBonus",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1961,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "healthBonus",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(Player)1949_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player",
								"members": [
									{
										"astId": 1928,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "level",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1930,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "experience",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1932,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "health",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1934,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "mana",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1936,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "attackDamage",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1938,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "defense",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1940,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "agility",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1942,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "luck",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1945,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "inventory",
										"offset": 0,
										"slot": "8",
										"type": "t_array(t_uint256)dyn_storage"
									},
									{
										"astId": 1948,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "skills",
										"offset": 0,
										"slot": "9",
										"type": "t_array(t_uint256)dyn_storage"
									}
								],
								"numberOfBytes": "320"
							},
							"t_struct(Quest)1971_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest",
								"members": [
									{
										"astId": 1964,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "title",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1966,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "description",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1968,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "rewardXP",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1970,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "completed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Recipe)1985_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe",
								"members": [
									{
										"astId": 1982,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "itemIds",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_uint256)dyn_storage"
									},
									{
										"astId": 1984,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "resultItemId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDAO": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":\"IDAO\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":{\"keccak256\":\"0x3ca23ec6b77ce5e7b124c7dc3f5b5d1f131864e7e7af073e16a74c07797d8f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fb5dbb1acb9096df679b7c6f0cd0f91b146f7b1983c7501ee8313bfab63ab6a\",\"dweb:/ipfs/QmT95JxBDbYWtuF189Uk5xHDr7PVXvsQQSSNde9CQ4xZKW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":{\"keccak256\":\"0x3ca23ec6b77ce5e7b124c7dc3f5b5d1f131864e7e7af073e16a74c07797d8f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fb5dbb1acb9096df679b7c6f0cd0f91b146f7b1983c7501ee8313bfab63ab6a\",\"dweb:/ipfs/QmT95JxBDbYWtuF189Uk5xHDr7PVXvsQQSSNde9CQ4xZKW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":{\"keccak256\":\"0x3ca23ec6b77ce5e7b124c7dc3f5b5d1f131864e7e7af073e16a74c07797d8f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fb5dbb1acb9096df679b7c6f0cd0f91b146f7b1983c7501ee8313bfab63ab6a\",\"dweb:/ipfs/QmT95JxBDbYWtuF189Uk5xHDr7PVXvsQQSSNde9CQ4xZKW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"safeTransferFrom(address,address,uint256)": "42842e0e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":{\"keccak256\":\"0x3ca23ec6b77ce5e7b124c7dc3f5b5d1f131864e7e7af073e16a74c07797d8f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fb5dbb1acb9096df679b7c6f0cd0f91b146f7b1983c7501ee8313bfab63ab6a\",\"dweb:/ipfs/QmT95JxBDbYWtuF189Uk5xHDr7PVXvsQQSSNde9CQ4xZKW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IFarming": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":\"IFarming\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":{\"keccak256\":\"0x3ca23ec6b77ce5e7b124c7dc3f5b5d1f131864e7e7af073e16a74c07797d8f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fb5dbb1acb9096df679b7c6f0cd0f91b146f7b1983c7501ee8313bfab63ab6a\",\"dweb:/ipfs/QmT95JxBDbYWtuF189Uk5xHDr7PVXvsQQSSNde9CQ4xZKW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStaking": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":\"IStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol\":{\"keccak256\":\"0x3ca23ec6b77ce5e7b124c7dc3f5b5d1f131864e7e7af073e16a74c07797d8f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fb5dbb1acb9096df679b7c6f0cd0f91b146f7b1983c7501ee8313bfab63ab6a\",\"dweb:/ipfs/QmT95JxBDbYWtuF189Uk5xHDr7PVXvsQQSSNde9CQ4xZKW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							844
						],
						"ERC165Upgradeable": [
							1060
						],
						"IAccessControl": [
							1143
						],
						"Initializable": [
							616
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1144,
							"src": "134:81:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1143,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 845,
							"src": "216:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 844,
										"src": "224:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1061,
							"src": "284:79:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1060,
										"src": "292:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 617,
							"src": "364:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "372:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Initializable",
										"nameLocations": [
											"2136:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "2136:13:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2136:13:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2151:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "2151:18:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2151:18:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IAccessControl",
										"nameLocations": [
											"2171:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1143,
										"src": "2171:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2171:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2187:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1060,
										"src": "2187:17:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "2187:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "429:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362,
								1060,
								1841,
								1143,
								844,
								616
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2108:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2270:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2237:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 21,
												"keyName": "account",
												"keyNameLocation": "2253:7:0",
												"keyType": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2237:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2295:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2287:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 23,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2218:8:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2211:100:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 28,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2341:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2317:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 26,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AccessControlUpgradeable.AccessControlStorage",
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2374:71:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.AccessControl"
									},
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "_roles",
											"nameLocation": "2522:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "2488:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
												"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
											},
											"typeName": {
												"id": 33,
												"keyName": "role",
												"keyNameLocation": "2504:4:0",
												"keyType": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2488:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
													"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "RoleData",
														"nameLocations": [
															"2512:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2512:8:0"
													},
													"referencedDeclaration": 25,
													"src": "2512:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoleData_$25_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.RoleData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessControlStorage",
									"nameLocation": "2457:20:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2450:85:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "AccessControlStorageLocation",
									"nameLocation": "2683:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2658:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1",
											"typeString": "int_const 1295...(68 digits omitted)...1824"
										},
										"value": "0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "2877:87:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2896:62:0",
													"nodeType": "YulBlock",
													"src": "2896:62:0",
													"statements": [
														{
															"nativeSrc": "2910:38:0",
															"nodeType": "YulAssignment",
															"src": "2910:38:0",
															"value": {
																"name": "AccessControlStorageLocation",
																"nativeSrc": "2920:28:0",
																"nodeType": "YulIdentifier",
																"src": "2920:28:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2910:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": true,
														"src": "2910:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:28:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "2887:71:0"
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccessControlStorage",
									"nameLocation": "2796:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2874:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2845:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
													"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "AccessControlStorage",
														"nameLocations": [
															"2845:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "2845:20:0"
													},
													"referencedDeclaration": 35,
													"src": "2845:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:32:0"
									},
									"scope": 362,
									"src": "2787:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "3181:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "3202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 51,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 129,
														"src": "3191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3191:16:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "3217:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2970:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 57,
									"name": "onlyRole",
									"nameLocation": "3158:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:14:0"
									},
									"src": "3149:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3289:7:0",
										"statements": []
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyInitializing",
												"nameLocations": [
													"3272:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3272:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3272:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "3240:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:0"
									},
									"scope": 362,
									"src": "3231:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3370:7:0",
										"statements": []
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"3353:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3353:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "3311:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 362,
									"src": "3302:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1059
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3534:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 78,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3551:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "3571:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1143_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1143_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 79,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3566:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1143",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3587:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3566:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3551:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 86,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3626:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 84,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$362_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3608:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1059,
															"src": "3602:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3551:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 77,
												"id": 89,
												"nodeType": "Return",
												"src": "3544:94:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3382:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3452:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3510:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 71,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:20:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3528:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:6:0"
									},
									"scope": 362,
									"src": "3443:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1110
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3815:124:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3854:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "3825:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 101,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"3825:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "3825:20:0"
															},
															"referencedDeclaration": 35,
															"src": "3825:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3858:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:59:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 107,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "3901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3903:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3901:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 110,
															"indexExpression": {
																"id": 109,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "3910:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3916:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3901:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "3924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 114,
												"nodeType": "Return",
												"src": "3894:38:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3651:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3741:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3757:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3749:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:6:0"
									},
									"scope": 362,
									"src": "3732:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4204:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4225:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 124,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "4231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 150,
														"src": "4214:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "4214:30:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3945:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4157:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4168:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:0"
									},
									"scope": 362,
									"src": "4148:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4454:124:0",
										"statements": [
											{
												"condition": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4468:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 138,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "4477:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 139,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 137,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "4464:108:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "4493:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 143,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "4547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 144,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "4556:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 142,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "4514:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4514:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "4507:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4257:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4390:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:31:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:0"
									},
									"scope": 362,
									"src": "4381:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1118
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4833:117:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4872:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4843:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"4843:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "4843:20:0"
															},
															"referencedDeclaration": 35,
															"src": "4843:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 161,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "4876:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:59:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 164,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "4919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																	"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4921:6:0",
															"memberName": "_roles",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "4919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 167,
														"indexExpression": {
															"id": 166,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4919:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$25_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4934:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "4919:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 157,
												"id": 169,
												"nodeType": "Return",
												"src": "4912:31:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4584:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4768:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:0"
									},
									"scope": 362,
									"src": "4759:191:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1126
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5340:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5350:25:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4956:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nameLocations": [
													"5311:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5311:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5311:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5255:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:0:0"
									},
									"scope": 362,
									"src": "5246:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1134
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5757:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "5767:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5388:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 199,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 198,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyRole",
												"nameLocations": [
													"5728:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5728:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:31:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:0"
									},
									"scope": 362,
									"src": "5662:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1142
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6427:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6441:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 218,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "6463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6463:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6441:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "6437:102:0",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "6477:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 221,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "6498:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 223,
															"nodeType": "RevertStatement",
															"src": "6491:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6567:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6549:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "6549:37:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "5806:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6357:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "6392:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6384:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:42:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:0"
									},
									"scope": 362,
									"src": "6348:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6791:245:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6830:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6801:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"6801:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "6801:20:0"
															},
															"referencedDeclaration": 35,
															"src": "6801:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 243,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "6834:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:59:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6878:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6870:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6911:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "6898:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6870:46:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 252,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "6926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6928:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "6926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 256,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "6935:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6941:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "6926:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6953:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6926:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6926:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7000:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "6977:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "6972:57:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6599:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6727:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6763:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6755:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:33:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:0"
									},
									"scope": 362,
									"src": "6718:318:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "7353:304:0",
										"statements": [
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7392:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "7363:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 278,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7363:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7363:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7363:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7396:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:59:0"
											},
											{
												"condition": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7436:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 285,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 286,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "7451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 284,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "7437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7614:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 277,
															"id": 311,
															"nodeType": "Return",
															"src": "7628:12:0"
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "7432:219:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "7461:147:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 289,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 280,
																					"src": "7475:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7477:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7475:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 293,
																			"indexExpression": {
																				"id": 291,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "7484:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7475:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7490:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "7475:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7498:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7475:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7475:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "7475:38:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "7544:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 302,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "7559:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7559:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "7532:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 306,
															"nodeType": "EmitStatement",
															"src": "7527:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7593:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 277,
															"id": 308,
															"nodeType": "Return",
															"src": "7586:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7042:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7279:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7298:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7289:31:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7347:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:6:0"
									},
									"scope": 362,
									"src": "7270:387:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7976:304:0",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "8015:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "7986:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 326,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 325,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7986:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7986:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7986:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 328,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "8019:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7986:59:0"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 332,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "8067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "8073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "8059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8059:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "8237:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 324,
															"id": 357,
															"nodeType": "Return",
															"src": "8251:12:0"
														}
													]
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "8055:219:0",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "8083:148:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 335,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "8097:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8099:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "8097:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"id": 337,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "8106:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8097:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8112:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "8097:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 342,
																	"indexExpression": {
																		"id": 341,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8120:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8097:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8097:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "8097:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "8167:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 348,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8173:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 349,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "8182:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8182:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 346,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "8155:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8155:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "EmitStatement",
															"src": "8150:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8216:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 324,
															"id": 354,
															"nodeType": "Return",
															"src": "8209:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "7663:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7901:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7913:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7935:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:31:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7970:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7970:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:6:0"
									},
									"scope": 362,
									"src": "7892:388:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "2090:6192:0",
							"usedErrors": [
								379,
								382,
								1070,
								1073
							],
							"usedEvents": [
								387,
								1082,
								1091,
								1100
							]
						}
					],
					"src": "108:8175:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							616
						]
					},
					"id": 617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 373,
									"members": [
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 368,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 371,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 616,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 376,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 616,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 374,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 379,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 382,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 387,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 391,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 390,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 373,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 393,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 398,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 402,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"expression": {
														"id": 404,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 409,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 412,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 417,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 422,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 420,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 430,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 432,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 440,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 446,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 447,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 455,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 456,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 463,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 470,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 475,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 373,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 481,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 483,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 485,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 488,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 493,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 499,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 506,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 512,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 517,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 472,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 523,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 525,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 529,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 532,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 616,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 542,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 373,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 548,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 550,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 552,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 555,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 563,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 369,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 566,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 575,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 574,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 573,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 616,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 590,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 587,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 616,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 601,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 600,
												"id": 604,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 616,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 611,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 376,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 613,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 609,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 373,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 373,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 616,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 617,
							"src": "2349:6560:1",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1456
						],
						"IERC1822Proxiable": [
							1153
						],
						"Initializable": [
							616
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1154,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 619,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1153,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1457,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 621,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 624,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 617,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 623,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 626,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "1023:13:2"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 628,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1153,
										"src": "1038:17:2"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 798,
							"linearizedBaseContracts": [
								798,
								1153,
								616
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 636,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 631,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 634,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 633,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 632,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 640,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 638,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 643,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 648,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2643:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 651,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2653:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:2"
											},
											{
												"id": 654,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:2"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 656,
									"name": "onlyProxy",
									"nameLocation": "2631:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:2"
									},
									"src": "2622:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2914:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 659,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2924:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:2"
											},
											{
												"id": 662,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 664,
									"name": "notDelegated",
									"nameLocation": "2899:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:2"
									},
									"src": "2890:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3028:7:2",
										"statements": []
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 666,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3011:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:2"
									},
									"scope": 798,
									"src": "2968:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "3111:7:2",
										"statements": []
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 673,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 672,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3094:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:2"
									},
									"scope": 798,
									"src": "3041:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1152
									],
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "3783:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 684,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "3800:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1456_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1183,
													"src": "3800:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 683,
												"id": 686,
												"nodeType": "Return",
												"src": "3793:39:2"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:2",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 664,
												"src": "3752:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:2"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3774:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:2"
									},
									"scope": 798,
									"src": "3705:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "4263:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4291:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 698,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4273:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4341:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4360:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 702,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4319:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:2"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 695,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "4253:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4184:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:2"
									},
									"scope": 798,
									"src": "4158:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "4644:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 714,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 716,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 718,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "4749:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1456_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1214,
																"src": "4749:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 721,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "4654:251:2",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "4844:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 724,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "4865:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 726,
															"nodeType": "RevertStatement",
															"src": "4858:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:2"
									},
									"scope": 798,
									"src": "4599:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "5080:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 736,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 734,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 738,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5111:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "IfStatement",
												"src": "5090:145:2",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "5119:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 740,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "5195:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 742,
															"nodeType": "RevertStatement",
															"src": "5188:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:2"
									},
									"scope": 798,
									"src": "5028:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5651:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:2"
									},
									"scope": 798,
									"src": "5624:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "6137:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 785,
															"nodeType": "Block",
															"src": "6227:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "6245:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 769,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "6253:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1456_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1183,
																			"src": "6253:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 777,
																	"nodeType": "IfStatement",
																	"src": "6241:120:2",
																	"trueBody": {
																		"id": 776,
																		"nodeType": "Block",
																		"src": "6287:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 773,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 766,
																							"src": "6341:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 772,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 648,
																						"src": "6312:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 775,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 781,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6404:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 782,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "6423:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 778,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "6374:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1456_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1275,
																			"src": "6374:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 784,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:2"
																}
															]
														},
														"errorName": "",
														"id": 786,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 767,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "6213:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:2"
														},
														"src": "6204:235:2"
													},
													{
														"block": {
															"id": 793,
															"nodeType": "Block",
															"src": "6446:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 790,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6555:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 787,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "6513:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1456_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1188,
																			"src": "6513:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 792,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:2"
																}
															]
														},
														"errorName": "",
														"id": 794,
														"nodeType": "TryCatchClause",
														"src": "6440:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6169:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 760,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "6151:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1153_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1153",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1152,
														"src": "6151:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 795,
												"nodeType": "TryStatement",
												"src": "6147:437:2"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6083:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:2"
									},
									"scope": 798,
									"src": "6052:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 799,
							"src": "986:5606:2",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1188,
								1201,
								1479,
								1482
							],
							"usedEvents": [
								387,
								1167
							]
						}
					],
					"src": "115:6478:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							844
						],
						"Initializable": [
							616
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 800,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 617,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 801,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 804,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "728:13:3"
									},
									"id": 805,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 803,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844,
								616
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 808,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 807,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 844,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 814,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 813,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 844,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 822,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 821,
												"id": 824,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 844,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 831,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 830,
												"id": 833,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 844,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 839,
												"id": 841,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 844,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 845,
							"src": "688:505:3",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							844
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							1020
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 845,
							"src": "128:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 847,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 844,
										"src": "136:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 617,
							"src": "196:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 849,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "204:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 852,
										"name": "Initializable",
										"nameLocations": [
											"742:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "742:13:4"
									},
									"id": 853,
									"nodeType": "InheritanceSpecifier",
									"src": "742:13:4"
								},
								{
									"baseName": {
										"id": 854,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"757:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "757:18:4"
									},
									"id": 855,
									"nodeType": "InheritanceSpecifier",
									"src": "757:18:4"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 851,
								"nodeType": "StructuredDocumentation",
								"src": "261:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020,
								844,
								616
							],
							"name": "PausableUpgradeable",
							"nameLocation": "719:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PausableUpgradeable.PausableStorage",
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "782:66:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
									},
									"id": 859,
									"members": [
										{
											"constant": false,
											"id": 858,
											"mutability": "mutable",
											"name": "_paused",
											"nameLocation": "891:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 859,
											"src": "886:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 857,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PausableStorage",
									"nameLocation": "860:15:4",
									"nodeType": "StructDefinition",
									"scope": 1020,
									"src": "853:52:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 862,
									"mutability": "constant",
									"name": "PausableStorageLocation",
									"nameLocation": "1048:23:4",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "1023:117:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 860,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
										"id": 861,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
											"typeString": "int_const 9289...(69 digits omitted)...6832"
										},
										"value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "1227:82:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1246:57:4",
													"nodeType": "YulBlock",
													"src": "1246:57:4",
													"statements": [
														{
															"nativeSrc": "1260:33:4",
															"nodeType": "YulAssignment",
															"src": "1260:33:4",
															"value": {
																"name": "PausableStorageLocation",
																"nativeSrc": "1270:23:4",
																"nodeType": "YulIdentifier",
																"src": "1270:23:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1260:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 866,
														"isOffset": false,
														"isSlot": true,
														"src": "1260:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 862,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:23:4",
														"valueSize": 1
													}
												],
												"id": 868,
												"nodeType": "InlineAssembly",
												"src": "1237:66:4"
											}
										]
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPausableStorage",
									"nameLocation": "1156:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:4"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1224:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1200:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
													"typeString": "struct PausableUpgradeable.PausableStorage"
												},
												"typeName": {
													"id": 865,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 864,
														"name": "PausableStorage",
														"nameLocations": [
															"1200:15:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 859,
														"src": "1200:15:4"
													},
													"referencedDeclaration": 859,
													"src": "1200:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:4"
									},
									"scope": 1020,
									"src": "1147:162:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "1315:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 875,
									"name": "Paused",
									"nameLocation": "1399:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1414:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1406:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:4"
									},
									"src": "1393:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "1429:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 880,
									"name": "Unpaused",
									"nameLocation": "1510:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1527:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1519:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:17:4"
									},
									"src": "1504:32:4"
								},
								{
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "1542:76:4",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 883,
									"name": "EnforcedPause",
									"nameLocation": "1629:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:4"
									},
									"src": "1623:22:4"
								},
								{
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "1651:80:4",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 886,
									"name": "ExpectedPause",
									"nameLocation": "1742:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:2:4"
									},
									"src": "1736:22:4"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "1889:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 892,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "1899:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "1899:27:4"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "1764:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 890,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 889,
												"name": "onlyInitializing",
												"nameLocations": [
													"1872:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1872:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1872:16:4"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1845:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:4"
									},
									"scope": 1020,
									"src": "1836:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "2002:93:4",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2036:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "2012:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 902,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 901,
																"name": "PausableStorage",
																"nameLocations": [
																	"2012:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 859,
																"src": "2012:15:4"
															},
															"referencedDeclaration": 859,
															"src": "2012:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 904,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "2040:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:49:4"
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 907,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "2071:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2073:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 858,
														"src": "2071:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2071:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "2071:17:4"
											}
										]
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 899,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 898,
												"name": "onlyInitializing",
												"nameLocations": [
													"1985:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1985:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:16:4"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1948:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:4"
									},
									"scope": 1020,
									"src": "1939:156:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2306:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 917,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2316:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "2316:19:4"
											},
											{
												"id": 920,
												"nodeType": "PlaceholderStatement",
												"src": "2345:1:4"
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "2101:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 922,
									"name": "whenNotPaused",
									"nameLocation": "2290:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:4"
									},
									"src": "2281:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "2553:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 925,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "2563:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "2563:16:4"
											},
											{
												"id": 928,
												"nodeType": "PlaceholderStatement",
												"src": "2589:1:4"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "2359:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 930,
									"name": "whenPaused",
									"nameLocation": "2540:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:4"
									},
									"src": "2531:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "2745:92:4",
										"statements": [
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2779:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "2755:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 937,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 936,
																"name": "PausableStorage",
																"nameLocations": [
																	"2755:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 859,
																"src": "2755:15:4"
															},
															"referencedDeclaration": 859,
															"src": "2755:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 941,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 939,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "2783:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:49:4"
											},
											{
												"expression": {
													"expression": {
														"id": 942,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "2821:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2823:7:4",
													"memberName": "_paused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 858,
													"src": "2821:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 935,
												"id": 944,
												"nodeType": "Return",
												"src": "2814:16:4"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "2603:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2701:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:4"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2739:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:4"
									},
									"scope": 1020,
									"src": "2692:145:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "2956:77:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 950,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "2970:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "2966:61:4",
												"trueBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "2980:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 952,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "3001:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3001:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 954,
															"nodeType": "RevertStatement",
															"src": "2994:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "2843:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2914:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:2:4"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:0:4"
									},
									"scope": 1020,
									"src": "2905:128:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "3153:78:4",
										"statements": [
											{
												"condition": {
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3167:9:4",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 962,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "3168:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3168:8:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "3163:62:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "3178:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 965,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 886,
																	"src": "3199:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3199:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 967,
															"nodeType": "RevertStatement",
															"src": "3192:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "3039:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "3114:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3128:2:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:0:4"
									},
									"scope": 1020,
									"src": "3105:126:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "3415:127:4",
										"statements": [
											{
												"assignments": [
													979
												],
												"declarations": [
													{
														"constant": false,
														"id": 979,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3449:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "3425:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 978,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 977,
																"name": "PausableStorage",
																"nameLocations": [
																	"3425:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 859,
																"src": "3425:15:4"
															},
															"referencedDeclaration": 859,
															"src": "3425:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 980,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "3453:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3425:49:4"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 983,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3484:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3486:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 858,
														"src": "3484:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3484:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "3484:16:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 990,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "3522:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3522:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 989,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "3515:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "EmitStatement",
												"src": "3510:25:4"
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "3237:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 975,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 974,
												"name": "whenNotPaused",
												"nameLocations": [
													"3401:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 922,
												"src": "3401:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3401:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "3375:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:4"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:0:4"
									},
									"scope": 1020,
									"src": "3366:176:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "3722:130:4",
										"statements": [
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3756:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "3732:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1002,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1001,
																"name": "PausableStorage",
																"nameLocations": [
																	"3732:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 859,
																"src": "3732:15:4"
															},
															"referencedDeclaration": 859,
															"src": "3732:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1004,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "3760:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3732:49:4"
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1007,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "3791:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3793:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 858,
														"src": "3791:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3803:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3791:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "3791:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1014,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "3832:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1013,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "3823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "EmitStatement",
												"src": "3818:27:4"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "3548:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 998,
												"name": "whenPaused",
												"nameLocations": [
													"3711:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 930,
												"src": "3711:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3711:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "3683:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:2:4"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:0:4"
									},
									"scope": 1020,
									"src": "3674:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1021,
							"src": "701:3153:4",
							"usedErrors": [
								379,
								382,
								883,
								886
							],
							"usedEvents": [
								387,
								875,
								880
							]
						}
					],
					"src": "102:3753:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1060
						],
						"IERC165": [
							1841
						],
						"Initializable": [
							616
						]
					},
					"id": 1061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1024,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1061,
							"sourceUnit": 1842,
							"src": "140:80:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1023,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1841,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1026,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1061,
							"sourceUnit": 617,
							"src": "221:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1025,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "229:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1028,
										"name": "Initializable",
										"nameLocations": [
											"807:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "807:13:5"
									},
									"id": 1029,
									"nodeType": "InheritanceSpecifier",
									"src": "807:13:5"
								},
								{
									"baseName": {
										"id": 1030,
										"name": "IERC165",
										"nameLocations": [
											"822:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1841,
										"src": "822:7:5"
									},
									"id": 1031,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:5"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1027,
								"nodeType": "StructuredDocumentation",
								"src": "289:478:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1060,
							"linearizedBaseContracts": [
								1060,
								1841,
								616
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "786:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "887:7:5",
										"statements": []
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1034,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1033,
												"name": "onlyInitializing",
												"nameLocations": [
													"870:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "870:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "870:16:5"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "845:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:5"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:5"
									},
									"scope": 1060,
									"src": "836:58:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "961:7:5",
										"statements": []
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1040,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1039,
												"name": "onlyInitializing",
												"nameLocations": [
													"944:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "944:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "944:16:5"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "909:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:5"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:0:5"
									},
									"scope": 1060,
									"src": "900:68:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1840
									],
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "1116:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1051,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "1133:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1053,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "1153:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1841_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1841_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1052,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1148:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1148:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1841",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1162:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1148:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1133:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1050,
												"id": 1057,
												"nodeType": "Return",
												"src": "1126:47:5"
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "973:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1043:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1068:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "1061:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1045,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:20:5"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "1110:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:6:5"
									},
									"scope": 1060,
									"src": "1034:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1061,
							"src": "768:414:5",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "114:1069:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1143
						]
					},
					"id": 1144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1062,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1063,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:6",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1143,
							"linearizedBaseContracts": [
								1143
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:6",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 1070,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "356:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "373:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:6"
									},
									"src": "317:76:6"
								},
								{
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:6",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 1073,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:6"
									},
									"src": "552:37:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:6",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1082,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "877:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1075,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "899:33:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1077,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "934:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:6"
									},
									"src": "854:110:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:6",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1091,
									"name": "RoleGranted",
									"nameLocation": "1193:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1205:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1227:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1252:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:6"
									},
									"src": "1187:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:6",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1100,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1580:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1093,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1602:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1627:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:6"
									},
									"src": "1562:89:6"
								},
								{
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:6",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1755:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1102,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1769:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:6"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1809:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:6"
									},
									"scope": 1143,
									"src": "1738:77:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:6",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2032:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:6"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2069:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:6"
									},
									"scope": 1143,
									"src": "2010:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:6",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2347:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2361:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:6"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:6"
									},
									"scope": 1143,
									"src": "2328:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:6",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2641:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2655:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:6"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:6"
									},
									"scope": 1143,
									"src": "2621:60:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:6",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 1142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3205:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1136,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3219:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:6"
									},
									"scope": 1143,
									"src": "3183:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1144,
							"src": "225:3033:6",
							"usedErrors": [
								1070,
								1073
							],
							"usedEvents": [
								1082,
								1091,
								1100
							]
						}
					],
					"src": "109:3150:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1153
						]
					},
					"id": 1154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1145,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1146,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:7",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1153,
							"linearizedBaseContracts": [
								1153
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:7",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:7"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "868:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:7"
									},
									"scope": 1153,
									"src": "820:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1154,
							"src": "343:536:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1719
						],
						"ERC1967Utils": [
							1456
						],
						"IBeacon": [
							1466
						],
						"StorageSlot": [
							1829
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1467,
							"src": "140:46:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1156,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1466,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1159,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1720,
							"src": "187:48:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1158,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1719,
										"src": "195:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1161,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1830,
							"src": "236:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1160,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1829,
										"src": "244:11:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1162,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:8",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1456,
							"linearizedBaseContracts": [
								1456
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:8",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1167,
									"name": "Upgraded",
									"nameLocation": "739:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "748:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:8"
									},
									"src": "733:47:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:8",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1174,
									"name": "AdminChanged",
									"nameLocation": "864:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "877:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "900:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:8"
									},
									"src": "858:60:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:8",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1179,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1009:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:8"
									},
									"src": "988:45:8"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:8",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1183,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1456,
									"src": "1279:114:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1181,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:8",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1188,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1509:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:8"
									},
									"src": "1474:59:8"
								},
								{
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:8",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1193,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1630:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:8"
									},
									"src": "1604:41:8"
								},
								{
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:8",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1198,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1744:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:8"
									},
									"src": "1717:43:8"
								},
								{
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:8",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1201,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:8"
									},
									"src": "1853:26:8"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "2018:77:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1209,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "2062:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1207,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "2035:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1751,
															"src": "2035:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1724,
													"src": "2035:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1212,
												"nodeType": "Return",
												"src": "2028:60:8"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:8",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:8"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "2009:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:8"
									},
									"scope": 1456,
									"src": "1957:138:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "2249:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1220,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "2263:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1230,
												"nodeType": "IfStatement",
												"src": "2259:119:8",
												"trueBody": {
													"id": 1229,
													"nodeType": "Block",
													"src": "2299:79:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1226,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1217,
																		"src": "2349:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1225,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "2320:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1228,
															"nodeType": "RevertStatement",
															"src": "2313:54:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1234,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "2414:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1231,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "2387:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1751,
																"src": "2387:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1724,
														"src": "2387:53:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1237,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "2443:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:8"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:8",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "2214:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:8"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:8"
									},
									"scope": 1456,
									"src": "2186:281:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "2860:254:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1250,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "2889:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1249,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "2870:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1254,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "2931:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1253,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "2922:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "EmitStatement",
												"src": "2917:32:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1257,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2964:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1272,
													"nodeType": "Block",
													"src": "3065:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1269,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "3079:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1271,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:8"
														}
													]
												},
												"id": 1273,
												"nodeType": "IfStatement",
												"src": "2960:148:8",
												"trueBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "2981:78:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1264,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "3024:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1265,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "3043:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1261,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1719,
																		"src": "2995:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1719_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1638,
																	"src": "2995:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1267,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:8",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2805:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2832:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:8"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:8"
									},
									"scope": 1456,
									"src": "2779:335:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:8",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1279,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1456,
									"src": "3335:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1277,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1278,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "3844:68:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1287,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "3888:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1285,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "3861:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1751,
															"src": "3861:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1724,
													"src": "3861:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1290,
												"nodeType": "Return",
												"src": "3854:51:8"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:8",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:8"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3835:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:8"
									},
									"scope": 1456,
									"src": "3792:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "4039:172:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1298,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "4053:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1299,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1312,
												"nodeType": "IfStatement",
												"src": "4049:91:8",
												"trueBody": {
													"id": 1311,
													"nodeType": "Block",
													"src": "4077:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1305,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1304,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "4098:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1310,
															"nodeType": "RevertStatement",
															"src": "4091:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1316,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "4176:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1313,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "4149:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1751,
																"src": "4149:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1724,
														"src": "4149:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1319,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "4196:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:8"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:8",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "4013:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:8"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:8"
									},
									"scope": 1456,
									"src": "3994:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "4379:85:8",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1330,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "4407:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1332,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "4419:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1329,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "4394:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "EmitStatement",
												"src": "4389:39:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1336,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "4448:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1335,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "4438:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:8"
											}
										]
									},
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:8",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "4352:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:8"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:8"
									},
									"scope": 1456,
									"src": "4331:133:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:8",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1344,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1456,
									"src": "4741:106:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1342,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1343,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "4963:69:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1352,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "5007:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1350,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "4980:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1751,
															"src": "4980:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1724,
													"src": "4980:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1355,
												"nodeType": "Return",
												"src": "4973:52:8"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:8",
										"text": " @dev Returns the current beacon."
									},
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:8"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "4954:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:8"
									},
									"scope": 1456,
									"src": "4910:122:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "5161:390:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1363,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "5175:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1373,
												"nodeType": "IfStatement",
												"src": "5171:95:8",
												"trueBody": {
													"id": 1372,
													"nodeType": "Block",
													"src": "5203:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1369,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "5245:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1368,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "5224:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1371,
															"nodeType": "RevertStatement",
															"src": "5217:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1377,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "5303:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1374,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "5276:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1751,
																"src": "5276:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1724,
														"src": "5276:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1380,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "5324:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:8"
											},
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:8",
														"nodeType": "VariableDeclaration",
														"scope": 1402,
														"src": "5344:28:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1383,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1386,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "5383:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1385,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "5375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1466_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1466",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:8",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1465,
														"src": "5375:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1391,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "5424:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1401,
												"nodeType": "IfStatement",
												"src": "5420:125:8",
												"trueBody": {
													"id": 1400,
													"nodeType": "Block",
													"src": "5463:82:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1397,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "5513:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1396,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "5484:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1399,
															"nodeType": "RevertStatement",
															"src": "5477:57:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:8",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "5134:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:8"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:8"
									},
									"scope": 1456,
									"src": "5114:437:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "6155:254:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1412,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "6176:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1411,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "6165:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1416,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "6216:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1415,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "6201:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "EmitStatement",
												"src": "6196:30:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1419,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "6241:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1438,
													"nodeType": "Block",
													"src": "6360:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1435,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "6374:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1437,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:8"
														}
													]
												},
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "6237:166:8",
												"trueBody": {
													"id": 1434,
													"nodeType": "Block",
													"src": "6258:96:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1427,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1406,
																						"src": "6309:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1426,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1466,
																					"src": "6301:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1466_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1466",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:8",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1465,
																			"src": "6301:33:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1431,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "6338:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1423,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1719,
																		"src": "6272:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1719_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1638,
																	"src": "6272:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1433,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:8",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "6108:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "6127:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:8"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:8"
									},
									"scope": 1456,
									"src": "6076:333:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "6634:86:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1445,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1453,
												"nodeType": "IfStatement",
												"src": "6644:70:8",
												"trueBody": {
													"id": 1452,
													"nodeType": "Block",
													"src": "6663:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1449,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "6684:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1451,
															"nodeType": "RevertStatement",
															"src": "6677:26:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:8",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:8"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:8"
									},
									"scope": 1456,
									"src": "6598:122:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1457,
							"src": "449:6273:8",
							"usedErrors": [
								1188,
								1193,
								1198,
								1201
							],
							"usedEvents": [
								1167,
								1174,
								1179
							]
						}
					],
					"src": "114:6609:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1466
						]
					},
					"id": 1467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:9",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1466,
							"linearizedBaseContracts": [
								1466
							],
							"name": "IBeacon",
							"nameLocation": "224:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:9",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:9"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "460:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:9"
									},
									"scope": 1466,
									"src": "411:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "214:257:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1719
						]
					},
					"id": 1720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1469,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1719,
							"linearizedBaseContracts": [
								1719
							],
							"name": "Address",
							"nameLocation": "203:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1474,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "349:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:10"
									},
									"src": "316:50:10"
								},
								{
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:10",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1479,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "475:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:10"
									},
									"src": "452:39:10"
								},
								{
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1482,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:10"
									},
									"src": "591:24:10"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "1602:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1492,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1719",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1719",
																		"typeString": "library Address"
																	}
																],
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1490,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1495,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "1640:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1505,
												"nodeType": "IfStatement",
												"src": "1612:109:10",
												"trueBody": {
													"id": 1504,
													"nodeType": "Block",
													"src": "1648:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1500,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1719",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1719",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1498,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1497,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "1669:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1503,
															"nodeType": "RevertStatement",
															"src": "1662:48:10"
														}
													]
												}
											},
											{
												"assignments": [
													1507,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1522,
														"src": "1732:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1506,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1514,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1508,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "1750:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1510,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "1772:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:10"
											},
											{
												"condition": {
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:10",
													"subExpression": {
														"id": 1515,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "1798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1521,
												"nodeType": "IfStatement",
												"src": "1793:63:10",
												"trueBody": {
													"id": 1520,
													"nodeType": "Block",
													"src": "1807:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1517,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "1828:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1519,
															"nodeType": "RevertStatement",
															"src": "1821:24:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1550:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1577:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:10"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:10"
									},
									"scope": 1719,
									"src": "1531:331:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "2794:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "2833:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1535,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "2841:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1533,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "2811:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1532,
												"id": 1538,
												"nodeType": "Return",
												"src": "2804:45:10"
											}
										]
									},
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "2727:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "2743:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:10"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "2780:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:10"
									},
									"scope": 1719,
									"src": "2705:151:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "3293:279:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1554,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1719",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1719",
																		"typeString": "library Address"
																	}
																],
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1552,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1557,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "3331:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1567,
												"nodeType": "IfStatement",
												"src": "3303:108:10",
												"trueBody": {
													"id": 1566,
													"nodeType": "Block",
													"src": "3338:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1562,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1719",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1719",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1560,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1559,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "3359:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1565,
															"nodeType": "RevertStatement",
															"src": "3352:48:10"
														}
													]
												}
											},
											{
												"assignments": [
													1569,
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1585,
														"src": "3421:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1568,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1571,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1585,
														"src": "3435:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1570,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1578,
												"initialValue": {
													"arguments": [
														{
															"id": 1576,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "3488:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1572,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1543,
																"src": "3462:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1574,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1547,
																"src": "3481:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1580,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "3537:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1581,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "3545:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1582,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "3554:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1579,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "3510:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1551,
												"id": 1584,
												"nodeType": "Return",
												"src": "3503:62:10"
											}
										]
									},
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "3211:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "3227:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "3246:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:10"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "3279:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1549,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:10"
									},
									"scope": 1719,
									"src": "3180:392:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "3811:154:10",
										"statements": [
											{
												"assignments": [
													1597,
													1599
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "3822:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1596,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1599,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "3836:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1598,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1604,
												"initialValue": {
													"arguments": [
														{
															"id": 1602,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "3881:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1600,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "3863:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:10",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1606,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "3930:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1607,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "3938:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1608,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "3947:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1605,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "3903:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1595,
												"id": 1610,
												"nodeType": "Return",
												"src": "3896:62:10"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3739:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3755:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1590,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:10"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3797:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:10"
									},
									"scope": 1719,
									"src": "3711:254:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "4203:156:10",
										"statements": [
											{
												"assignments": [
													1623,
													1625
												],
												"declarations": [
													{
														"constant": false,
														"id": 1623,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "4214:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1622,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "4228:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1624,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"arguments": [
														{
															"id": 1628,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "4275:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1626,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "4255:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:10",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1632,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "4324:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "4332:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1634,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "4341:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1631,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "4297:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1636,
												"nodeType": "Return",
												"src": "4290:62:10"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4136:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4152:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:10"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4189:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:10"
									},
									"scope": 1719,
									"src": "4106:253:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "4783:424:10",
										"statements": [
											{
												"condition": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:10",
													"subExpression": {
														"id": 1650,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "4798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "4857:344:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1657,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1645,
																			"src": "5045:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1661,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1641,
																				"src": "5071:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:10",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1672,
															"nodeType": "IfStatement",
															"src": "5041:119:10",
															"trueBody": {
																"id": 1671,
																"nodeType": "Block",
																"src": "5096:64:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1668,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1641,
																					"src": "5138:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1667,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1479,
																				"src": "5121:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1670,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:10"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1673,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "5180:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1649,
															"id": 1674,
															"nodeType": "Return",
															"src": "5173:17:10"
														}
													]
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "4793:408:10",
												"trueBody": {
													"id": 1656,
													"nodeType": "Block",
													"src": "4807:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1653,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "4829:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1652,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1718,
																	"src": "4821:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1655,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:10",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4670:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4694:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4716:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:10"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4769:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:10"
									},
									"scope": 1719,
									"src": "4625:582:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "5509:122:10",
										"statements": [
											{
												"condition": {
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:10",
													"subExpression": {
														"id": 1688,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "5524:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1697,
													"nodeType": "Block",
													"src": "5583:42:10",
													"statements": [
														{
															"expression": {
																"id": 1695,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "5604:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1687,
															"id": 1696,
															"nodeType": "Return",
															"src": "5597:17:10"
														}
													]
												},
												"id": 1698,
												"nodeType": "IfStatement",
												"src": "5519:106:10",
												"trueBody": {
													"id": 1694,
													"nodeType": "Block",
													"src": "5533:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1691,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "5555:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1690,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1718,
																	"src": "5547:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1693,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:10",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "5433:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "5447:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:10"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "5495:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:10"
									},
									"scope": 1719,
									"src": "5407:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "5798:461:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1706,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "5874:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1715,
													"nodeType": "Block",
													"src": "6204:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1712,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "6225:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1714,
															"nodeType": "RevertStatement",
															"src": "6218:24:10"
														}
													]
												},
												"id": 1716,
												"nodeType": "IfStatement",
												"src": "5870:383:10",
												"trueBody": {
													"id": 1711,
													"nodeType": "Block",
													"src": "5897:301:10",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:10",
																"nodeType": "YulBlock",
																"src": "6055:133:10",
																"statements": [
																	{
																		"nativeSrc": "6073:40:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:10"
																			},
																			"nativeSrc": "6096:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:10"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:10",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:10",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:10",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:10"
																					},
																					"nativeSrc": "6137:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:10"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:10"
																			},
																			"nativeSrc": "6130:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:10"
																		},
																		"nativeSrc": "6130:44:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:10"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1703,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1703,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:10",
																	"valueSize": 1
																}
															],
															"id": 1710,
															"nodeType": "InlineAssembly",
															"src": "6046:142:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:10",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "5760:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1702,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:10"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:10"
									},
									"scope": 1719,
									"src": "5743:516:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1720,
							"src": "195:6066:10",
							"usedErrors": [
								1474,
								1479,
								1482
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1829
						]
					},
					"id": 1830,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1721,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1722,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:11",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1829,
							"linearizedBaseContracts": [
								1829
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1725,
									"members": [
										{
											"constant": false,
											"id": 1724,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1725,
											"src": "1300:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1723,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1271:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1728,
									"members": [
										{
											"constant": false,
											"id": 1727,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "1355:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1726,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1326:46:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1731,
									"members": [
										{
											"constant": false,
											"id": 1730,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1731,
											"src": "1407:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1729,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1378:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1734,
									"members": [
										{
											"constant": false,
											"id": 1733,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1734,
											"src": "1462:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1732,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1433:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1737,
									"members": [
										{
											"constant": false,
											"id": 1736,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1737,
											"src": "1516:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1735,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1488:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1740,
									"members": [
										{
											"constant": false,
											"id": 1739,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1740,
											"src": "1568:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1738,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1541:45:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "1768:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:11",
													"nodeType": "YulBlock",
													"src": "1830:38:11",
													"statements": [
														{
															"nativeSrc": "1844:14:11",
															"nodeType": "YulAssignment",
															"src": "1844:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:11",
																"nodeType": "YulIdentifier",
																"src": "1854:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1747,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1743,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:11",
														"valueSize": 1
													}
												],
												"id": 1749,
												"nodeType": "InlineAssembly",
												"src": "1821:47:11"
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:11",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1708:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1742,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:11"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1745:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1746,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1745,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1725,
														"src": "1745:11:11"
													},
													"referencedDeclaration": 1725,
													"src": "1745:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:11"
									},
									"scope": 1829,
									"src": "1684:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "2056:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:11",
													"nodeType": "YulBlock",
													"src": "2118:38:11",
													"statements": [
														{
															"nativeSrc": "2132:14:11",
															"nodeType": "YulAssignment",
															"src": "2132:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:11",
																"nodeType": "YulIdentifier",
																"src": "2142:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1758,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1754,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:11",
														"valueSize": 1
													}
												],
												"id": 1760,
												"nodeType": "InlineAssembly",
												"src": "2109:47:11"
											}
										]
									},
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:11",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1996:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1753,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:11"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "2033:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1728_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1757,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1756,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "2033:11:11"
													},
													"referencedDeclaration": 1728,
													"src": "2033:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1728_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:11"
									},
									"scope": 1829,
									"src": "1972:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "2344:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:11",
													"nodeType": "YulBlock",
													"src": "2406:38:11",
													"statements": [
														{
															"nativeSrc": "2420:14:11",
															"nodeType": "YulAssignment",
															"src": "2420:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:11",
																"nodeType": "YulIdentifier",
																"src": "2430:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1769,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1765,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:11",
														"valueSize": 1
													}
												],
												"id": 1771,
												"nodeType": "InlineAssembly",
												"src": "2397:47:11"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:11",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "2284:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1764,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:11"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "2321:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1731_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1767,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1731,
														"src": "2321:11:11"
													},
													"referencedDeclaration": 1731,
													"src": "2321:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1731_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:11"
									},
									"scope": 1829,
									"src": "2260:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "2632:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:11",
													"nodeType": "YulBlock",
													"src": "2694:38:11",
													"statements": [
														{
															"nativeSrc": "2708:14:11",
															"nodeType": "YulAssignment",
															"src": "2708:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:11",
																"nodeType": "YulIdentifier",
																"src": "2718:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1780,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1776,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:11",
														"valueSize": 1
													}
												],
												"id": 1782,
												"nodeType": "InlineAssembly",
												"src": "2685:47:11"
											}
										]
									},
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:11",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "2572:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1775,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:11"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "2609:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1734_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1779,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1778,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1734,
														"src": "2609:11:11"
													},
													"referencedDeclaration": 1734,
													"src": "2609:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1734_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:11"
									},
									"scope": 1829,
									"src": "2548:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "2917:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:11",
													"nodeType": "YulBlock",
													"src": "2979:38:11",
													"statements": [
														{
															"nativeSrc": "2993:14:11",
															"nodeType": "YulAssignment",
															"src": "2993:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:11",
																"nodeType": "YulIdentifier",
																"src": "3003:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1791,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1787,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:11",
														"valueSize": 1
													}
												],
												"id": 1793,
												"nodeType": "InlineAssembly",
												"src": "2970:47:11"
											}
										]
									},
									"documentation": {
										"id": 1785,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:11",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "2858:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1786,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:11"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "2895:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1737_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1790,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1789,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1737,
														"src": "2895:10:11"
													},
													"referencedDeclaration": 1737,
													"src": "2895:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1737_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:11"
									},
									"scope": 1829,
									"src": "2835:188:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "3225:112:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:11",
													"nodeType": "YulBlock",
													"src": "3287:44:11",
													"statements": [
														{
															"nativeSrc": "3301:20:11",
															"nodeType": "YulAssignment",
															"src": "3301:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:11",
																"nodeType": "YulIdentifier",
																"src": "3311:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1802,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1798,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1804,
												"nodeType": "InlineAssembly",
												"src": "3278:53:11"
											}
										]
									},
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:11",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "3158:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:11"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "3203:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1737_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1801,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1800,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1737,
														"src": "3203:10:11"
													},
													"referencedDeclaration": 1737,
													"src": "3203:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1737_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:11"
									},
									"scope": 1829,
									"src": "3135:202:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "3513:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:11",
													"nodeType": "YulBlock",
													"src": "3575:38:11",
													"statements": [
														{
															"nativeSrc": "3589:14:11",
															"nodeType": "YulAssignment",
															"src": "3589:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:11",
																"nodeType": "YulIdentifier",
																"src": "3599:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1813,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1809,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:11",
														"valueSize": 1
													}
												],
												"id": 1815,
												"nodeType": "InlineAssembly",
												"src": "3566:47:11"
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:11",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "3455:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1808,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:11"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "3492:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1740_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1812,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1811,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1740,
														"src": "3492:9:11"
													},
													"referencedDeclaration": 1740,
													"src": "3492:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1740_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:11"
									},
									"scope": 1829,
									"src": "3433:186:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "3816:112:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:11",
													"nodeType": "YulBlock",
													"src": "3878:44:11",
													"statements": [
														{
															"nativeSrc": "3892:20:11",
															"nodeType": "YulAssignment",
															"src": "3892:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:11",
																"nodeType": "YulIdentifier",
																"src": "3902:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1824,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1820,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1826,
												"nodeType": "InlineAssembly",
												"src": "3869:53:11"
											}
										]
									},
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:11",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "3751:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1819,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:11"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "3795:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1740_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1823,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1822,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1740,
														"src": "3795:9:11"
													},
													"referencedDeclaration": 1740,
													"src": "3795:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1740_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:11"
									},
									"scope": 1829,
									"src": "3729:199:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1830,
							"src": "1245:2685:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1841
						]
					},
					"id": 1842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1831,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1832,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1841,
							"linearizedBaseContracts": [
								1841
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1834,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 1841,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1842,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol": {
				"ast": {
					"absolutePath": "src/smartcontracts/CryptoQuestTheShardsOfGenesisMMORPG.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							844
						],
						"CryptoQuestTheShardsOfGenesisMMPORPG": [
							2760
						],
						"ERC165Upgradeable": [
							1060
						],
						"ERC1967Utils": [
							1456
						],
						"IAccessControl": [
							1143
						],
						"IDAO": [
							1882
						],
						"IERC1155": [
							1881
						],
						"IERC1822Proxiable": [
							1153
						],
						"IERC20": [
							1857
						],
						"IERC721": [
							1867
						],
						"IFarming": [
							1884
						],
						"IStaking": [
							1883
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							1020
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 2761,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1843,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"id": 1844,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2761,
							"sourceUnit": 1021,
							"src": "107:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 1845,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2761,
							"sourceUnit": 363,
							"src": "183:81:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1846,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2761,
							"sourceUnit": 617,
							"src": "265:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2761,
							"sourceUnit": 799,
							"src": "341:77:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1857,
							"linearizedBaseContracts": [
								1857
							],
							"name": "IERC20",
							"nameLocation": "475:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 1856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "497:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "514:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "506:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "533:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "525:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "505:35:13"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "559:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1853,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:6:13"
									},
									"scope": 1857,
									"src": "488:77:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2761,
							"src": "465:144:13",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1867,
							"linearizedBaseContracts": [
								1867
							],
							"name": "IERC721",
							"nameLocation": "621:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "42842e0e",
									"id": 1866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "644:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "669:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "661:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "683:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "675:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "695:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "687:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:43:13"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:0:13"
									},
									"scope": 1867,
									"src": "635:78:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2761,
							"src": "611:147:13",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1881,
							"linearizedBaseContracts": [
								1881
							],
							"name": "IERC1155",
							"nameLocation": "770:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f242432a",
									"id": 1880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "794:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "819:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "811:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "833:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "825:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "845:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "837:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "857:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "849:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "880:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "865:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "865:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:75:13"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "894:0:13"
									},
									"scope": 1881,
									"src": "785:110:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2761,
							"src": "760:181:13",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDAO",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1882,
							"linearizedBaseContracts": [
								1882
							],
							"name": "IDAO",
							"nameLocation": "953:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2761,
							"src": "943:55:13",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStaking",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1883,
							"linearizedBaseContracts": [
								1883
							],
							"name": "IStaking",
							"nameLocation": "1010:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2761,
							"src": "1000:63:13",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFarming",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1884,
							"linearizedBaseContracts": [
								1884
							],
							"name": "IFarming",
							"nameLocation": "1075:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2761,
							"src": "1065:63:13",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1886,
										"name": "Initializable",
										"nameLocations": [
											"1235:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "1235:13:13"
									},
									"id": 1887,
									"nodeType": "InheritanceSpecifier",
									"src": "1235:13:13"
								},
								{
									"baseName": {
										"id": 1888,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"1250:19:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1020,
										"src": "1250:19:13"
									},
									"id": 1889,
									"nodeType": "InheritanceSpecifier",
									"src": "1250:19:13"
								},
								{
									"baseName": {
										"id": 1890,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"1271:24:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "1271:24:13"
									},
									"id": 1891,
									"nodeType": "InheritanceSpecifier",
									"src": "1271:24:13"
								},
								{
									"baseName": {
										"id": 1892,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"1297:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 798,
										"src": "1297:15:13"
									},
									"id": 1893,
									"nodeType": "InheritanceSpecifier",
									"src": "1297:15:13"
								}
							],
							"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1885,
								"nodeType": "StructuredDocumentation",
								"src": "1130:56:13",
								"text": "@custom:security-contact jacquedegraff@creodamo.com"
							},
							"fullyImplemented": true,
							"id": 2760,
							"linearizedBaseContracts": [
								2760,
								798,
								1153,
								362,
								1060,
								1841,
								1143,
								1020,
								844,
								616
							],
							"name": "CryptoQuestTheShardsOfGenesisMMPORPG",
							"nameLocation": "1195:36:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 1898,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "1343:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "1319:62:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1894,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1319:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 1896,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1367:13:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 1895,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1357:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1897,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1357:24:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f72c0d8b",
									"id": 1903,
									"mutability": "constant",
									"name": "UPGRADER_ROLE",
									"nameLocation": "1411:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "1387:66:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1899,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1387:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "55504752414445525f524f4c45",
												"id": 1901,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1437:15:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												},
												"value": "UPGRADER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												}
											],
											"id": 1900,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1427:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1902,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1427:26:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "be22d27d",
									"id": 1908,
									"mutability": "constant",
									"name": "GAME_ADMIN_ROLE",
									"nameLocation": "1483:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "1459:70:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1904,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1459:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "47414d455f41444d494e5f524f4c45",
												"id": 1906,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1511:17:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08",
													"typeString": "literal_string \"GAME_ADMIN_ROLE\""
												},
												"value": "GAME_ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08",
													"typeString": "literal_string \"GAME_ADMIN_ROLE\""
												}
											],
											"id": 1905,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1501:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1907,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1501:28:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a13eea7",
									"id": 1911,
									"mutability": "mutable",
									"name": "erc20Token",
									"nameLocation": "1550:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "1536:24:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1857",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1910,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1909,
											"name": "IERC20",
											"nameLocations": [
												"1536:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1857,
											"src": "1536:6:13"
										},
										"referencedDeclaration": 1857,
										"src": "1536:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1857",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f2d6bcd",
									"id": 1914,
									"mutability": "mutable",
									"name": "erc721Token",
									"nameLocation": "1581:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "1566:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$1867",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 1913,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1912,
											"name": "IERC721",
											"nameLocations": [
												"1566:7:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1867,
											"src": "1566:7:13"
										},
										"referencedDeclaration": 1867,
										"src": "1566:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$1867",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "21f42268",
									"id": 1917,
									"mutability": "mutable",
									"name": "erc1155Token",
									"nameLocation": "1614:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "1598:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1155_$1881",
										"typeString": "contract IERC1155"
									},
									"typeName": {
										"id": 1916,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1915,
											"name": "IERC1155",
											"nameLocations": [
												"1598:8:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1881,
											"src": "1598:8:13"
										},
										"referencedDeclaration": 1881,
										"src": "1598:8:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$1881",
											"typeString": "contract IERC1155"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4a7ffcbc",
									"id": 1920,
									"mutability": "mutable",
									"name": "daoContract",
									"nameLocation": "1644:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "1632:23:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDAO_$1882",
										"typeString": "contract IDAO"
									},
									"typeName": {
										"id": 1919,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1918,
											"name": "IDAO",
											"nameLocations": [
												"1632:4:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1882,
											"src": "1632:4:13"
										},
										"referencedDeclaration": 1882,
										"src": "1632:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDAO_$1882",
											"typeString": "contract IDAO"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee99205c",
									"id": 1923,
									"mutability": "mutable",
									"name": "stakingContract",
									"nameLocation": "1677:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "1661:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IStaking_$1883",
										"typeString": "contract IStaking"
									},
									"typeName": {
										"id": 1922,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1921,
											"name": "IStaking",
											"nameLocations": [
												"1661:8:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1883,
											"src": "1661:8:13"
										},
										"referencedDeclaration": 1883,
										"src": "1661:8:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IStaking_$1883",
											"typeString": "contract IStaking"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "02eec568",
									"id": 1926,
									"mutability": "mutable",
									"name": "farmingContract",
									"nameLocation": "1714:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "1698:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFarming_$1884",
										"typeString": "contract IFarming"
									},
									"typeName": {
										"id": 1925,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1924,
											"name": "IFarming",
											"nameLocations": [
												"1698:8:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1884,
											"src": "1698:8:13"
										},
										"referencedDeclaration": 1884,
										"src": "1698:8:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFarming_$1884",
											"typeString": "contract IFarming"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG.Player",
									"id": 1949,
									"members": [
										{
											"constant": false,
											"id": 1928,
											"mutability": "mutable",
											"name": "level",
											"nameLocation": "1765:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1949,
											"src": "1760:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1927,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1760:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1930,
											"mutability": "mutable",
											"name": "experience",
											"nameLocation": "1785:10:13",
											"nodeType": "VariableDeclaration",
											"scope": 1949,
											"src": "1780:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1929,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1780:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1932,
											"mutability": "mutable",
											"name": "health",
											"nameLocation": "1810:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1949,
											"src": "1805:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1931,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1805:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1934,
											"mutability": "mutable",
											"name": "mana",
											"nameLocation": "1831:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1949,
											"src": "1826:9:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1933,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1826:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1936,
											"mutability": "mutable",
											"name": "attackDamage",
											"nameLocation": "1850:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 1949,
											"src": "1845:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1935,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1845:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1938,
											"mutability": "mutable",
											"name": "defense",
											"nameLocation": "1877:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1949,
											"src": "1872:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1937,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1872:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1940,
											"mutability": "mutable",
											"name": "agility",
											"nameLocation": "1899:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1949,
											"src": "1894:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1939,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1894:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1942,
											"mutability": "mutable",
											"name": "luck",
											"nameLocation": "1921:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1949,
											"src": "1916:9:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1941,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1916:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1945,
											"mutability": "mutable",
											"name": "inventory",
											"nameLocation": "1942:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1949,
											"src": "1935:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1943,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1935:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1944,
												"nodeType": "ArrayTypeName",
												"src": "1935:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1948,
											"mutability": "mutable",
											"name": "skills",
											"nameLocation": "1968:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1949,
											"src": "1961:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1946,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1961:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1947,
												"nodeType": "ArrayTypeName",
												"src": "1961:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Player",
									"nameLocation": "1743:6:13",
									"nodeType": "StructDefinition",
									"scope": 2760,
									"src": "1736:245:13",
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG.Item",
									"id": 1962,
									"members": [
										{
											"constant": false,
											"id": 1951,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "2014:2:13",
											"nodeType": "VariableDeclaration",
											"scope": 1962,
											"src": "2009:7:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1950,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2009:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1953,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2033:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1962,
											"src": "2026:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1952,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2026:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1955,
											"mutability": "mutable",
											"name": "attackBonus",
											"nameLocation": "2052:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1962,
											"src": "2047:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1954,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2047:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1957,
											"mutability": "mutable",
											"name": "defenseBonus",
											"nameLocation": "2078:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 1962,
											"src": "2073:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1956,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2073:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1959,
											"mutability": "mutable",
											"name": "manaBonus",
											"nameLocation": "2105:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1962,
											"src": "2100:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1958,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2100:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1961,
											"mutability": "mutable",
											"name": "healthBonus",
											"nameLocation": "2129:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1962,
											"src": "2124:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1960,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2124:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nameLocation": "1994:4:13",
									"nodeType": "StructDefinition",
									"scope": 2760,
									"src": "1987:160:13",
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG.Quest",
									"id": 1971,
									"members": [
										{
											"constant": false,
											"id": 1964,
											"mutability": "mutable",
											"name": "title",
											"nameLocation": "2183:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1971,
											"src": "2176:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1963,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2176:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1966,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "2205:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1971,
											"src": "2198:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1965,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2198:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1968,
											"mutability": "mutable",
											"name": "rewardXP",
											"nameLocation": "2231:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1971,
											"src": "2226:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1967,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2226:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1970,
											"mutability": "mutable",
											"name": "completed",
											"nameLocation": "2254:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1971,
											"src": "2249:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1969,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2249:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Quest",
									"nameLocation": "2160:5:13",
									"nodeType": "StructDefinition",
									"scope": 2760,
									"src": "2153:117:13",
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG.Guild",
									"id": 1979,
									"members": [
										{
											"constant": false,
											"id": 1973,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2306:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1979,
											"src": "2299:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1972,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2299:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1975,
											"mutability": "mutable",
											"name": "leader",
											"nameLocation": "2328:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1979,
											"src": "2320:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1974,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2320:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1978,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2354:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1979,
											"src": "2344:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1977,
												"nodeType": "ArrayTypeName",
												"src": "2344:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Guild",
									"nameLocation": "2283:5:13",
									"nodeType": "StructDefinition",
									"scope": 2760,
									"src": "2276:92:13",
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG.Recipe",
									"id": 1985,
									"members": [
										{
											"constant": false,
											"id": 1982,
											"mutability": "mutable",
											"name": "itemIds",
											"nameLocation": "2405:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1985,
											"src": "2398:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1980,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2398:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1981,
												"nodeType": "ArrayTypeName",
												"src": "2398:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1984,
											"mutability": "mutable",
											"name": "resultItemId",
											"nameLocation": "2427:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 1985,
											"src": "2422:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1983,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2422:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Recipe",
									"nameLocation": "2381:6:13",
									"nodeType": "StructDefinition",
									"scope": 2760,
									"src": "2374:72:13",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1988,
									"mutability": "mutable",
									"name": "nextItemId",
									"nameLocation": "2465:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "2452:27:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1986,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2452:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1987,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2478:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1991,
									"mutability": "mutable",
									"name": "nextRecipeId",
									"nameLocation": "2498:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "2485:29:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1989,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2485:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1990,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2513:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "bfb231d2",
									"id": 1996,
									"mutability": "mutable",
									"name": "items",
									"nameLocation": "2550:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "2521:34:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$1962_storage_$",
										"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Item)"
									},
									"typeName": {
										"id": 1995,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1992,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2529:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2521:21:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$1962_storage_$",
											"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Item)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1994,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1993,
												"name": "Item",
												"nameLocations": [
													"2537:4:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1962,
												"src": "2537:4:13"
											},
											"referencedDeclaration": 1962,
											"src": "2537:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$1962_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Item"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2eb41ff",
									"id": 2001,
									"mutability": "mutable",
									"name": "players",
									"nameLocation": "2595:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "2561:41:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
										"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player)"
									},
									"typeName": {
										"id": 2000,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1997,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2569:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2561:26:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1999,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1998,
												"name": "Player",
												"nameLocations": [
													"2580:6:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1949,
												"src": "2580:6:13"
											},
											"referencedDeclaration": 1949,
											"src": "2580:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Player_$1949_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3dcff7c",
									"id": 2007,
									"mutability": "mutable",
									"name": "playerQuests",
									"nameLocation": "2643:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "2608:47:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Quest_$1971_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest[])"
									},
									"typeName": {
										"id": 2006,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2002,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2616:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2608:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Quest_$1971_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2004,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2003,
													"name": "Quest",
													"nameLocations": [
														"2627:5:13"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1971,
													"src": "2627:5:13"
												},
												"referencedDeclaration": 1971,
												"src": "2627:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Quest_$1971_storage_ptr",
													"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest"
												}
											},
											"id": 2005,
											"nodeType": "ArrayTypeName",
											"src": "2627:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Quest_$1971_storage_$dyn_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a75859e1",
									"id": 2012,
									"mutability": "mutable",
									"name": "guilds",
									"nameLocation": "2694:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "2661:39:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Guild_$1979_storage_$",
										"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild)"
									},
									"typeName": {
										"id": 2011,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2008,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2669:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2661:25:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Guild_$1979_storage_$",
											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2010,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2009,
												"name": "Guild",
												"nameLocations": [
													"2680:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1979,
												"src": "2680:5:13"
											},
											"referencedDeclaration": 1979,
											"src": "2680:5:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Guild_$1979_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2016,
									"mutability": "mutable",
									"name": "guildNameToLeader",
									"nameLocation": "2733:17:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "2706:44:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
										"typeString": "mapping(string => address)"
									},
									"typeName": {
										"id": 2015,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2013,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "2714:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "2706:26:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
											"typeString": "mapping(string => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2014,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2724:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "443c227c",
									"id": 2021,
									"mutability": "mutable",
									"name": "recipes",
									"nameLocation": "2787:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2760,
									"src": "2756:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$1985_storage_$",
										"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe)"
									},
									"typeName": {
										"id": 2020,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2017,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2764:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2756:23:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$1985_storage_$",
											"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2019,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2018,
												"name": "Recipe",
												"nameLocations": [
													"2772:6:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1985,
												"src": "2772:6:13"
											},
											"referencedDeclaration": 1985,
											"src": "2772:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Recipe_$1985_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "be21664565742a9f42cbb6d005f92db59c7bcad35b12ef5b57b79e75676b247a",
									"id": 2027,
									"name": "QuestCompleted",
									"nameLocation": "2807:14:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "2838:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "2822:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2025,
												"indexed": false,
												"mutability": "mutable",
												"name": "questTitle",
												"nameLocation": "2853:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "2846:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2024,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2846:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:43:13"
									},
									"src": "2801:64:13"
								},
								{
									"anonymous": false,
									"eventSelector": "b4cca19a27ce42915c3cee0cee28fc5d90969ee49f09ec71659546a63b5f7bc0",
									"id": 2031,
									"name": "PlayerCreated",
									"nameLocation": "2876:13:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "2906:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "2890:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2890:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2889:24:13"
									},
									"src": "2870:44:13"
								},
								{
									"anonymous": false,
									"eventSelector": "78d68ba0e8c23b92e7c700d99efed2719520cbd4af845b2c03ae251f9cdf3d52",
									"id": 2037,
									"name": "ItemAdded",
									"nameLocation": "2925:9:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "2940:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "2935:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2935:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemName",
												"nameLocation": "2955:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "2948:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2034,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2948:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2934:30:13"
									},
									"src": "2919:46:13"
								},
								{
									"anonymous": false,
									"eventSelector": "072208535a97b2e307167838c66aacd47f8de3a2cb92bc2ddb2b2b52009c9fd5",
									"id": 2043,
									"name": "GuildCreated",
									"nameLocation": "2976:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2996:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "2989:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2038,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2989:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"indexed": false,
												"mutability": "mutable",
												"name": "leader",
												"nameLocation": "3010:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "3002:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3002:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2988:29:13"
									},
									"src": "2970:48:13"
								},
								{
									"anonymous": false,
									"eventSelector": "9becfd2b1fc8127387c5b0002a6cbc8382e6c8fb9f76dfd6cfd92cbe94383d0e",
									"id": 2049,
									"name": "RecipeAdded",
									"nameLocation": "3029:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipeId",
												"nameLocation": "3046:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "3041:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3041:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"indexed": false,
												"mutability": "mutable",
												"name": "resultItemId",
												"nameLocation": "3061:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "3056:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3056:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3040:34:13"
									},
									"src": "3023:52:13"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "3397:581:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2072,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "3407:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3407:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2074,
												"nodeType": "ExpressionStatement",
												"src": "3407:17:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2075,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "3434:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3434:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "3434:22:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2078,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "3466:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3466:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "3466:24:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2082,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "3512:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2083,
															"name": "defaultAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "3532:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2081,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3501:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2085,
												"nodeType": "ExpressionStatement",
												"src": "3501:44:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2087,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "3566:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2088,
															"name": "pauser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "3579:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2086,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3555:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3555:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2090,
												"nodeType": "ExpressionStatement",
												"src": "3555:31:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2092,
															"name": "UPGRADER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "3607:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2093,
															"name": "upgrader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2055,
															"src": "3622:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2091,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3596:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3596:35:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2095,
												"nodeType": "ExpressionStatement",
												"src": "3596:35:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2097,
															"name": "GAME_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "3652:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2098,
															"name": "defaultAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "3669:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2096,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3641:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3641:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2100,
												"nodeType": "ExpressionStatement",
												"src": "3641:41:13"
											},
											{
												"expression": {
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2101,
														"name": "erc20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "3693:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1857",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2103,
																"name": "_erc20Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2057,
																"src": "3713:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2102,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "3706:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1857_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3706:21:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1857",
															"typeString": "contract IERC20"
														}
													},
													"src": "3693:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1857",
														"typeString": "contract IERC20"
													}
												},
												"id": 2106,
												"nodeType": "ExpressionStatement",
												"src": "3693:34:13"
											},
											{
												"expression": {
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2107,
														"name": "erc721Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "3737:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1867",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2109,
																"name": "_erc721Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2059,
																"src": "3759:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2108,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "3751:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$1867_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3751:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1867",
															"typeString": "contract IERC721"
														}
													},
													"src": "3737:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1867",
														"typeString": "contract IERC721"
													}
												},
												"id": 2112,
												"nodeType": "ExpressionStatement",
												"src": "3737:37:13"
											},
											{
												"expression": {
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2113,
														"name": "erc1155Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1917,
														"src": "3784:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$1881",
															"typeString": "contract IERC1155"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2115,
																"name": "_erc1155Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "3808:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2114,
															"name": "IERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "3799:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155_$1881_$",
																"typeString": "type(contract IERC1155)"
															}
														},
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3799:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$1881",
															"typeString": "contract IERC1155"
														}
													},
													"src": "3784:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1155_$1881",
														"typeString": "contract IERC1155"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "3784:40:13"
											},
											{
												"expression": {
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2119,
														"name": "daoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1920,
														"src": "3834:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDAO_$1882",
															"typeString": "contract IDAO"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2121,
																"name": "_daoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2063,
																"src": "3853:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2120,
															"name": "IDAO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "3848:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDAO_$1882_$",
																"typeString": "type(contract IDAO)"
															}
														},
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3848:17:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDAO_$1882",
															"typeString": "contract IDAO"
														}
													},
													"src": "3834:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$1882",
														"typeString": "contract IDAO"
													}
												},
												"id": 2124,
												"nodeType": "ExpressionStatement",
												"src": "3834:31:13"
											},
											{
												"expression": {
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2125,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "3875:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStaking_$1883",
															"typeString": "contract IStaking"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2127,
																"name": "_stakingAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "3902:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2126,
															"name": "IStaking",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "3893:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IStaking_$1883_$",
																"typeString": "type(contract IStaking)"
															}
														},
														"id": 2128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3893:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStaking_$1883",
															"typeString": "contract IStaking"
														}
													},
													"src": "3875:43:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStaking_$1883",
														"typeString": "contract IStaking"
													}
												},
												"id": 2130,
												"nodeType": "ExpressionStatement",
												"src": "3875:43:13"
											},
											{
												"expression": {
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2131,
														"name": "farmingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1926,
														"src": "3928:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarming_$1884",
															"typeString": "contract IFarming"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2133,
																"name": "_farmingAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "3955:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2132,
															"name": "IFarming",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "3946:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IFarming_$1884_$",
																"typeString": "type(contract IFarming)"
															}
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3946:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarming_$1884",
															"typeString": "contract IFarming"
														}
													},
													"src": "3928:43:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarming_$1884",
														"typeString": "contract IFarming"
													}
												},
												"id": 2136,
												"nodeType": "ExpressionStatement",
												"src": "3928:43:13"
											}
										]
									},
									"functionSelector": "f5e95acb",
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2070,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2069,
												"name": "initializer",
												"nameLocations": [
													"3378:11:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 470,
												"src": "3378:11:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3378:11:13"
										}
									],
									"name": "initialize",
									"nameLocation": "3090:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "defaultAdmin",
												"nameLocation": "3118:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "3110:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3110:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "pauser",
												"nameLocation": "3148:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "3140:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3140:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "upgrader",
												"nameLocation": "3172:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "3164:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3164:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "_erc20Address",
												"nameLocation": "3198:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "3190:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3190:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "_erc721Address",
												"nameLocation": "3229:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "3221:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3221:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "_erc1155Address",
												"nameLocation": "3261:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "3253:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3253:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "_daoAddress",
												"nameLocation": "3294:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "3286:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "_stakingAddress",
												"nameLocation": "3323:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "3315:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3315:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "_farmingAddress",
												"nameLocation": "3356:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "3348:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3100:277:13"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3397:0:13"
									},
									"scope": 2760,
									"src": "3081:897:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "4067:51:13",
										"statements": [
											{
												"expression": {
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2146,
														"name": "erc20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "4077:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1857",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2148,
																"name": "_erc20Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "4097:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2147,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "4090:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1857_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4090:21:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1857",
															"typeString": "contract IERC20"
														}
													},
													"src": "4077:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1857",
														"typeString": "contract IERC20"
													}
												},
												"id": 2151,
												"nodeType": "ExpressionStatement",
												"src": "4077:34:13"
											}
										]
									},
									"functionSelector": "41bec0d2",
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2143,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1908,
													"src": "4050:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2144,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2142,
												"name": "onlyRole",
												"nameLocations": [
													"4041:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4041:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4041:25:13"
										}
									],
									"name": "setERC20Address",
									"nameLocation": "3993:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "_erc20Address",
												"nameLocation": "4017:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "4009:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4009:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4008:23:13"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4067:0:13"
									},
									"scope": 2760,
									"src": "3984:134:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2167,
										"nodeType": "Block",
										"src": "4209:54:13",
										"statements": [
											{
												"expression": {
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2161,
														"name": "erc721Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "4219:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1867",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2163,
																"name": "_erc721Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2155,
																"src": "4241:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2162,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "4233:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$1867_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 2164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4233:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1867",
															"typeString": "contract IERC721"
														}
													},
													"src": "4219:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1867",
														"typeString": "contract IERC721"
													}
												},
												"id": 2166,
												"nodeType": "ExpressionStatement",
												"src": "4219:37:13"
											}
										]
									},
									"functionSelector": "9a03d9a3",
									"id": 2168,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2158,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1908,
													"src": "4192:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2157,
												"name": "onlyRole",
												"nameLocations": [
													"4183:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4183:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4183:25:13"
										}
									],
									"name": "setERC721Address",
									"nameLocation": "4133:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "_erc721Address",
												"nameLocation": "4158:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "4150:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4149:24:13"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4209:0:13"
									},
									"scope": 2760,
									"src": "4124:139:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "4356:57:13",
										"statements": [
											{
												"expression": {
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2176,
														"name": "erc1155Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1917,
														"src": "4366:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$1881",
															"typeString": "contract IERC1155"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2178,
																"name": "_erc1155Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2170,
																"src": "4390:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2177,
															"name": "IERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "4381:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155_$1881_$",
																"typeString": "type(contract IERC1155)"
															}
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4381:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$1881",
															"typeString": "contract IERC1155"
														}
													},
													"src": "4366:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1155_$1881",
														"typeString": "contract IERC1155"
													}
												},
												"id": 2181,
												"nodeType": "ExpressionStatement",
												"src": "4366:40:13"
											}
										]
									},
									"functionSelector": "d836fc6f",
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2173,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1908,
													"src": "4339:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2174,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2172,
												"name": "onlyRole",
												"nameLocations": [
													"4330:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4330:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4330:25:13"
										}
									],
									"name": "setERC1155Address",
									"nameLocation": "4278:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "_erc1155Address",
												"nameLocation": "4304:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "4296:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4295:25:13"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4356:0:13"
									},
									"scope": 2760,
									"src": "4269:144:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "4498:48:13",
										"statements": [
											{
												"expression": {
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2191,
														"name": "daoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1920,
														"src": "4508:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDAO_$1882",
															"typeString": "contract IDAO"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2193,
																"name": "_daoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2185,
																"src": "4527:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2192,
															"name": "IDAO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "4522:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDAO_$1882_$",
																"typeString": "type(contract IDAO)"
															}
														},
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4522:17:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDAO_$1882",
															"typeString": "contract IDAO"
														}
													},
													"src": "4508:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$1882",
														"typeString": "contract IDAO"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "4508:31:13"
											}
										]
									},
									"functionSelector": "965afa89",
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2188,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1908,
													"src": "4481:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2189,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2187,
												"name": "onlyRole",
												"nameLocations": [
													"4472:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4472:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4472:25:13"
										}
									],
									"name": "setDAOAddress",
									"nameLocation": "4428:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "_daoAddress",
												"nameLocation": "4450:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "4442:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4442:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4441:21:13"
									},
									"returnParameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4498:0:13"
									},
									"scope": 2760,
									"src": "4419:127:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "4639:60:13",
										"statements": [
											{
												"expression": {
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2206,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "4649:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStaking_$1883",
															"typeString": "contract IStaking"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2208,
																"name": "_stakingAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "4676:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2207,
															"name": "IStaking",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "4667:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IStaking_$1883_$",
																"typeString": "type(contract IStaking)"
															}
														},
														"id": 2209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4667:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStaking_$1883",
															"typeString": "contract IStaking"
														}
													},
													"src": "4649:43:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStaking_$1883",
														"typeString": "contract IStaking"
													}
												},
												"id": 2211,
												"nodeType": "ExpressionStatement",
												"src": "4649:43:13"
											}
										]
									},
									"functionSelector": "f4e0d9ac",
									"id": 2213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2203,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1908,
													"src": "4622:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2202,
												"name": "onlyRole",
												"nameLocations": [
													"4613:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4613:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4613:25:13"
										}
									],
									"name": "setStakingAddress",
									"nameLocation": "4561:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "_stakingAddress",
												"nameLocation": "4587:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "4579:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:25:13"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4639:0:13"
									},
									"scope": 2760,
									"src": "4552:147:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "4792:60:13",
										"statements": [
											{
												"expression": {
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2221,
														"name": "farmingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1926,
														"src": "4802:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarming_$1884",
															"typeString": "contract IFarming"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2223,
																"name": "_farmingAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2215,
																"src": "4829:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2222,
															"name": "IFarming",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "4820:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IFarming_$1884_$",
																"typeString": "type(contract IFarming)"
															}
														},
														"id": 2224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4820:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarming_$1884",
															"typeString": "contract IFarming"
														}
													},
													"src": "4802:43:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarming_$1884",
														"typeString": "contract IFarming"
													}
												},
												"id": 2226,
												"nodeType": "ExpressionStatement",
												"src": "4802:43:13"
											}
										]
									},
									"functionSelector": "b001f618",
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2218,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1908,
													"src": "4775:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2219,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2217,
												"name": "onlyRole",
												"nameLocations": [
													"4766:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4766:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4766:25:13"
										}
									],
									"name": "setFarmingAddress",
									"nameLocation": "4714:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "_farmingAddress",
												"nameLocation": "4740:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "4732:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4732:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4731:25:13"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4792:0:13"
									},
									"scope": 2760,
									"src": "4705:147:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "4904:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2234,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "4914:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4914:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2236,
												"nodeType": "ExpressionStatement",
												"src": "4914:8:13"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2231,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1898,
													"src": "4891:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2232,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2230,
												"name": "onlyRole",
												"nameLocations": [
													"4882:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4882:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4882:21:13"
										}
									],
									"name": "pause",
									"nameLocation": "4867:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4872:2:13"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4904:0:13"
									},
									"scope": 2760,
									"src": "4858:71:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2247,
										"nodeType": "Block",
										"src": "4983:27:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2244,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "4993:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4993:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2246,
												"nodeType": "ExpressionStatement",
												"src": "4993:10:13"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2248,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2241,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1898,
													"src": "4970:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2240,
												"name": "onlyRole",
												"nameLocations": [
													"4961:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4961:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4961:21:13"
										}
									],
									"name": "unpause",
									"nameLocation": "4944:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4951:2:13"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4983:0:13"
									},
									"scope": 2760,
									"src": "4935:75:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 2257,
										"nodeType": "Block",
										"src": "5112:2:13",
										"statements": []
									},
									"id": 2258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2254,
													"name": "UPGRADER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1903,
													"src": "5097:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2255,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2253,
												"name": "onlyRole",
												"nameLocations": [
													"5088:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5088:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5088:23:13"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "5025:17:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2252,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5079:8:13"
									},
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5051:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "5043:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5043:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5042:27:13"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5112:0:13"
									},
									"scope": 2760,
									"src": "5016:98:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2303,
										"nodeType": "Block",
										"src": "5151:217:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2262,
																		"name": "players",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2001,
																		"src": "5169:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																			"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																		}
																	},
																	"id": 2265,
																	"indexExpression": {
																		"expression": {
																			"id": 2263,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5177:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5181:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5177:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5169:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Player_$1949_storage",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																	}
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5189:5:13",
																"memberName": "level",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1928,
																"src": "5169:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5198:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5169:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6179657220616c726561647920657869737473",
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5201:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f",
																"typeString": "literal_string \"Player already exists\""
															},
															"value": "Player already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f",
																"typeString": "literal_string \"Player already exists\""
															}
														],
														"id": 2261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5161:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5161:64:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2271,
												"nodeType": "ExpressionStatement",
												"src": "5161:64:13"
											},
											{
												"expression": {
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2272,
															"name": "players",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "5235:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
															}
														},
														"id": 2275,
														"indexExpression": {
															"expression": {
																"id": 2273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5243:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5247:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5243:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5235:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Player_$1949_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5264:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															{
																"hexValue": "30",
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5267:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "313030",
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5270:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															{
																"hexValue": "3530",
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5275:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															{
																"hexValue": "3130",
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5279:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															{
																"hexValue": "35",
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5283:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															{
																"hexValue": "33",
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5286:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															{
																"hexValue": "32",
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5289:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5303:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "5292:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (uint256[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2285,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "5296:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2286,
																		"nodeType": "ArrayTypeName",
																		"src": "5296:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	}
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5292:13:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5318:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "5307:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (uint256[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2290,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "5311:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2291,
																		"nodeType": "ArrayTypeName",
																		"src": "5311:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	}
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5307:13:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																{
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																{
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																{
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															],
															"id": 2276,
															"name": "Player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "5257:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Player_$1949_storage_ptr_$",
																"typeString": "type(struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage pointer)"
															}
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5257:64:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Player_$1949_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player memory"
														}
													},
													"src": "5235:86:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Player_$1949_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "5235:86:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5350:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5354:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5350:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2298,
														"name": "PlayerCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "5336:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5336:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2302,
												"nodeType": "EmitStatement",
												"src": "5331:30:13"
											}
										]
									},
									"functionSelector": "3fa9fcf8",
									"id": 2304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPlayer",
									"nameLocation": "5129:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5141:2:13"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5151:0:13"
									},
									"scope": 2760,
									"src": "5120:248:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2341,
										"nodeType": "Block",
										"src": "5515:174:13",
										"statements": [
											{
												"expression": {
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2320,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "5525:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$1962_storage_$",
																"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Item storage ref)"
															}
														},
														"id": 2322,
														"indexExpression": {
															"id": 2321,
															"name": "nextItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "5531:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5525:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$1962_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2324,
																"name": "nextItemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "5550:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2325,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "5562:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 2326,
																"name": "attackBonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "5568:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2327,
																"name": "defenseBonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "5581:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2328,
																"name": "manaBonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "5595:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2329,
																"name": "healthBonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "5606:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2323,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "5545:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$1962_storage_ptr_$",
																"typeString": "type(struct CryptoQuestTheShardsOfGenesisMMPORPG.Item storage pointer)"
															}
														},
														"id": 2330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5545:73:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$1962_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Item memory"
														}
													},
													"src": "5525:93:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$1962_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Item storage ref"
													}
												},
												"id": 2332,
												"nodeType": "ExpressionStatement",
												"src": "5525:93:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2334,
															"name": "nextItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "5643:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2335,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2306,
															"src": "5655:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2333,
														"name": "ItemAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "5633:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5633:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2337,
												"nodeType": "EmitStatement",
												"src": "5628:32:13"
											},
											{
												"expression": {
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5670:12:13",
													"subExpression": {
														"id": 2338,
														"name": "nextItemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1988,
														"src": "5670:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2340,
												"nodeType": "ExpressionStatement",
												"src": "5670:12:13"
											}
										]
									},
									"functionSelector": "31fee8be",
									"id": 2342,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2317,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1908,
													"src": "5498:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2318,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2316,
												"name": "onlyRole",
												"nameLocations": [
													"5489:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5489:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5489:25:13"
										}
									],
									"name": "addItem",
									"nameLocation": "5383:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5405:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "5391:18:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2305,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5391:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "attackBonus",
												"nameLocation": "5416:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "5411:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5411:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "defenseBonus",
												"nameLocation": "5434:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "5429:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5429:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "manaBonus",
												"nameLocation": "5453:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "5448:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5448:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "healthBonus",
												"nameLocation": "5469:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "5464:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2313,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5464:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5390:91:13"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5515:0:13"
									},
									"scope": 2760,
									"src": "5374:315:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "5811:90:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2360,
																	"name": "title",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2344,
																	"src": "5857:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 2361,
																	"name": "description",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "5864:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 2362,
																	"name": "rewardXP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "5877:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5887:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 2359,
																"name": "Quest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "5851:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Quest_$1971_storage_ptr_$",
																	"typeString": "type(struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage pointer)"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5851:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Quest_$1971_memory_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Quest_$1971_memory_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2354,
																"name": "playerQuests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "5821:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Quest_$1971_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref)"
																}
															},
															"id": 2357,
															"indexExpression": {
																"expression": {
																	"id": 2355,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5834:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5838:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5834:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5821:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Quest_$1971_storage_$dyn_storage",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref"
															}
														},
														"id": 2358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5846:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5821:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Quest_$1971_storage_$dyn_storage_ptr_$_t_struct$_Quest_$1971_storage_$returns$__$attached_to$_t_array$_t_struct$_Quest_$1971_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage pointer,struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref)"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5821:73:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2366,
												"nodeType": "ExpressionStatement",
												"src": "5821:73:13"
											}
										]
									},
									"functionSelector": "6f347a78",
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2351,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1908,
													"src": "5794:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2352,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2350,
												"name": "onlyRole",
												"nameLocations": [
													"5785:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5785:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5785:25:13"
										}
									],
									"name": "startQuest",
									"nameLocation": "5704:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "title",
												"nameLocation": "5729:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "5715:19:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5715:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "description",
												"nameLocation": "5750:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "5736:25:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5736:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "rewardXP",
												"nameLocation": "5768:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "5763:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5763:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5714:63:13"
									},
									"returnParameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5811:0:13"
									},
									"scope": 2760,
									"src": "5695:206:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2441,
										"nodeType": "Block",
										"src": "5963:476:13",
										"statements": [
											{
												"body": {
													"id": 2439,
													"nodeType": "Block",
													"src": "6032:401:13",
													"statements": [
														{
															"assignments": [
																2389
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2389,
																	"mutability": "mutable",
																	"name": "quest",
																	"nameLocation": "6060:5:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2439,
																	"src": "6046:19:13",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Quest_$1971_storage_ptr",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest"
																	},
																	"typeName": {
																		"id": 2388,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2387,
																			"name": "Quest",
																			"nameLocations": [
																				"6046:5:13"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1971,
																			"src": "6046:5:13"
																		},
																		"referencedDeclaration": 1971,
																		"src": "6046:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Quest_$1971_storage_ptr",
																			"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2396,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2390,
																		"name": "playerQuests",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2007,
																		"src": "6068:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Quest_$1971_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref)"
																		}
																	},
																	"id": 2393,
																	"indexExpression": {
																		"expression": {
																			"id": 2391,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6081:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6085:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6081:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6068:24:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Quest_$1971_storage_$dyn_storage",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref"
																	}
																},
																"id": 2395,
																"indexExpression": {
																	"id": 2394,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "6093:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6068:27:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Quest_$1971_storage",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6046:49:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 2400,
																							"name": "quest",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2389,
																							"src": "6140:5:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Quest_$1971_storage_ptr",
																								"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage pointer"
																							}
																						},
																						"id": 2401,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6146:5:13",
																						"memberName": "title",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1964,
																						"src": "6140:11:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					],
																					"expression": {
																						"id": 2398,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "6123:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 2399,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "6127:12:13",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "6123:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 2402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6123:29:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2397,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "6113:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6113:40:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2407,
																						"name": "questTitle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2370,
																						"src": "6184:10:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 2405,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "6167:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 2406,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "6171:12:13",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "6167:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 2408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6167:28:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2404,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "6157:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6157:39:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "6113:83:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "6200:16:13",
																	"subExpression": {
																		"expression": {
																			"id": 2411,
																			"name": "quest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2389,
																			"src": "6201:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Quest_$1971_storage_ptr",
																				"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage pointer"
																			}
																		},
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6207:9:13",
																		"memberName": "completed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1970,
																		"src": "6201:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6113:103:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2438,
															"nodeType": "IfStatement",
															"src": "6109:314:13",
															"trueBody": {
																"id": 2437,
																"nodeType": "Block",
																"src": "6218:205:13",
																"statements": [
																	{
																		"expression": {
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2415,
																					"name": "quest",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2389,
																					"src": "6236:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Quest_$1971_storage_ptr",
																						"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage pointer"
																					}
																				},
																				"id": 2417,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "6242:9:13",
																				"memberName": "completed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1970,
																				"src": "6236:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 2418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6254:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "6236:22:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2420,
																		"nodeType": "ExpressionStatement",
																		"src": "6236:22:13"
																	},
																	{
																		"expression": {
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2421,
																						"name": "players",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2001,
																						"src": "6276:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																							"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																						}
																					},
																					"id": 2424,
																					"indexExpression": {
																						"expression": {
																							"id": 2422,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "6284:3:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 2423,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6288:6:13",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "6284:10:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6276:19:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Player_$1949_storage",
																						"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																					}
																				},
																				"id": 2425,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "6296:10:13",
																				"memberName": "experience",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1930,
																				"src": "6276:30:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"id": 2426,
																					"name": "quest",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2389,
																					"src": "6310:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Quest_$1971_storage_ptr",
																						"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage pointer"
																					}
																				},
																				"id": 2427,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6316:8:13",
																				"memberName": "rewardXP",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1968,
																				"src": "6310:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6276:48:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2429,
																		"nodeType": "ExpressionStatement",
																		"src": "6276:48:13"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2431,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "6362:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2432,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6366:6:13",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "6362:10:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2433,
																					"name": "questTitle",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2370,
																					"src": "6374:10:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2430,
																				"name": "QuestCompleted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2027,
																				"src": "6347:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (address,string memory)"
																				}
																			},
																			"id": 2434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6347:38:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2435,
																		"nodeType": "EmitStatement",
																		"src": "6342:43:13"
																	},
																	{
																		"id": 2436,
																		"nodeType": "Break",
																		"src": "6403:5:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2377,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2374,
														"src": "5990:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 2378,
																"name": "playerQuests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "5994:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Quest_$1971_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref)"
																}
															},
															"id": 2381,
															"indexExpression": {
																"expression": {
																	"id": 2379,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6007:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6011:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6007:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5994:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Quest_$1971_storage_$dyn_storage",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref"
															}
														},
														"id": 2382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6019:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5994:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5990:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2440,
												"initializationExpression": {
													"assignments": [
														2374
													],
													"declarations": [
														{
															"constant": false,
															"id": 2374,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5983:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2440,
															"src": "5978:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2373,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5978:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2376,
													"initialValue": {
														"hexValue": "30",
														"id": 2375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5987:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5978:10:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6027:3:13",
														"subExpression": {
															"id": 2384,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "6027:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2386,
													"nodeType": "ExpressionStatement",
													"src": "6027:3:13"
												},
												"nodeType": "ForStatement",
												"src": "5973:460:13"
											}
										]
									},
									"functionSelector": "17435e1a",
									"id": 2442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "completeQuest",
									"nameLocation": "5916:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "questTitle",
												"nameLocation": "5944:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "5930:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5930:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5929:26:13"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5963:0:13"
									},
									"scope": 2760,
									"src": "5907:532:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "6535:278:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2453,
																	"name": "guildNameToLeader",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "6553:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																		"typeString": "mapping(string memory => address)"
																	}
																},
																"id": 2455,
																"indexExpression": {
																	"id": 2454,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2444,
																	"src": "6571:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6553:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6588:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6580:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2456,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6580:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6580:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6553:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4775696c6420616c726561647920657869737473",
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6592:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c02f3e50ed6b54b03eba0a4b156b8b2c122f79039273c822fbda9326f1dec609",
																"typeString": "literal_string \"Guild already exists\""
															},
															"value": "Guild already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c02f3e50ed6b54b03eba0a4b156b8b2c122f79039273c822fbda9326f1dec609",
																"typeString": "literal_string \"Guild already exists\""
															}
														],
														"id": 2452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6545:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6545:70:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2463,
												"nodeType": "ExpressionStatement",
												"src": "6545:70:13"
											},
											{
												"expression": {
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2464,
															"name": "guilds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "6625:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Guild_$1979_storage_$",
																"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref)"
															}
														},
														"id": 2466,
														"indexExpression": {
															"id": 2465,
															"name": "leader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "6632:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6625:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Guild_$1979_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2468,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2444,
																"src": "6648:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 2469,
																"name": "leader",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2446,
																"src": "6654:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6676:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "6662:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (address[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2470,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6666:7:13",
																			"stateMutability": "nonpayable",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2471,
																		"nodeType": "ArrayTypeName",
																		"src": "6666:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	}
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6662:16:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"id": 2467,
															"name": "Guild",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "6642:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Guild_$1979_storage_ptr_$",
																"typeString": "type(struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage pointer)"
															}
														},
														"id": 2475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6642:37:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Guild_$1979_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild memory"
														}
													},
													"src": "6625:54:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Guild_$1979_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref"
													}
												},
												"id": 2477,
												"nodeType": "ExpressionStatement",
												"src": "6625:54:13"
											},
											{
												"expression": {
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2478,
																	"name": "guilds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "6689:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Guild_$1979_storage_$",
																		"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref)"
																	}
																},
																"id": 2480,
																"indexExpression": {
																	"id": 2479,
																	"name": "leader",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2446,
																	"src": "6696:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6689:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Guild_$1979_storage",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref"
																}
															},
															"id": 2481,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6704:7:13",
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1978,
															"src": "6689:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2483,
														"indexExpression": {
															"hexValue": "30",
															"id": 2482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6712:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6689:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2484,
														"name": "leader",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "6717:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6689:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2486,
												"nodeType": "ExpressionStatement",
												"src": "6689:34:13"
											},
											{
												"expression": {
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2487,
															"name": "guildNameToLeader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "6733:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 2489,
														"indexExpression": {
															"id": 2488,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "6751:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6733:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2490,
														"name": "leader",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "6759:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6733:32:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2492,
												"nodeType": "ExpressionStatement",
												"src": "6733:32:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2494,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "6793:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2495,
															"name": "leader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "6799:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2493,
														"name": "GuildCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "6780:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6780:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2497,
												"nodeType": "EmitStatement",
												"src": "6775:31:13"
											}
										]
									},
									"functionSelector": "4fa4a1bb",
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2449,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1908,
													"src": "6518:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2450,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2448,
												"name": "onlyRole",
												"nameLocations": [
													"6509:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "6509:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6509:25:13"
										}
									],
									"name": "createGuild",
									"nameLocation": "6454:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "6480:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "6466:18:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2443,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6466:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "leader",
												"nameLocation": "6494:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "6486:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6486:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6465:36:13"
									},
									"returnParameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6535:0:13"
									},
									"scope": 2760,
									"src": "6445:368:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2561,
										"nodeType": "Block",
										"src": "6870:461:13",
										"statements": [
											{
												"assignments": [
													2505
												],
												"declarations": [
													{
														"constant": false,
														"id": 2505,
														"mutability": "mutable",
														"name": "leader",
														"nameLocation": "6888:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2561,
														"src": "6880:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2504,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6880:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2509,
												"initialValue": {
													"baseExpression": {
														"id": 2506,
														"name": "guildNameToLeader",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "6897:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
															"typeString": "mapping(string memory => address)"
														}
													},
													"id": 2508,
													"indexExpression": {
														"id": 2507,
														"name": "guildName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2501,
														"src": "6915:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6897:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6880:45:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2511,
																"name": "leader",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2505,
																"src": "6943:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6961:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6953:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2512,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6953:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6953:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6943:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4775696c6420646f6573206e6f74206578697374",
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6965:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df115ebb113eb795e874836f8b2917a4781efe582dc2481c741971644f30822e",
																"typeString": "literal_string \"Guild does not exist\""
															},
															"value": "Guild does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df115ebb113eb795e874836f8b2917a4781efe582dc2481c741971644f30822e",
																"typeString": "literal_string \"Guild does not exist\""
															}
														],
														"id": 2510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6935:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6935:53:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2519,
												"nodeType": "ExpressionStatement",
												"src": "6935:53:13"
											},
											{
												"assignments": [
													2522
												],
												"declarations": [
													{
														"constant": false,
														"id": 2522,
														"mutability": "mutable",
														"name": "guild",
														"nameLocation": "7097:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2561,
														"src": "7083:19:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Guild_$1979_storage_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild"
														},
														"typeName": {
															"id": 2521,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2520,
																"name": "Guild",
																"nameLocations": [
																	"7083:5:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1979,
																"src": "7083:5:13"
															},
															"referencedDeclaration": 1979,
															"src": "7083:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Guild_$1979_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2526,
												"initialValue": {
													"baseExpression": {
														"id": 2523,
														"name": "guilds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2012,
														"src": "7105:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Guild_$1979_storage_$",
															"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref)"
														}
													},
													"id": 2525,
													"indexExpression": {
														"id": 2524,
														"name": "leader",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "7112:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7105:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Guild_$1979_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7083:36:13"
											},
											{
												"body": {
													"id": 2550,
													"nodeType": "Block",
													"src": "7177:107:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"expression": {
																					"id": 2540,
																					"name": "guild",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2522,
																					"src": "7199:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Guild_$1979_storage_ptr",
																						"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage pointer"
																					}
																				},
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7205:7:13",
																				"memberName": "members",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1978,
																				"src": "7199:13:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2543,
																			"indexExpression": {
																				"id": 2542,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2528,
																				"src": "7213:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7199:16:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 2544,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7219:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7223:6:13",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "7219:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7199:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "53656e64657220697320616c72656164792061206d656d626572206f6620746865206775696c64",
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7231:41:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_60488ddff5208baf36b3dd08007032a8dda5e33f922203c6a10ac3af154485c2",
																			"typeString": "literal_string \"Sender is already a member of the guild\""
																		},
																		"value": "Sender is already a member of the guild"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_60488ddff5208baf36b3dd08007032a8dda5e33f922203c6a10ac3af154485c2",
																			"typeString": "literal_string \"Sender is already a member of the guild\""
																		}
																	],
																	"id": 2539,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7191:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:82:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2549,
															"nodeType": "ExpressionStatement",
															"src": "7191:82:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2531,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2528,
														"src": "7146:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2532,
																"name": "guild",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2522,
																"src": "7150:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Guild_$1979_storage_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage pointer"
																}
															},
															"id": 2533,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7156:7:13",
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1978,
															"src": "7150:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7164:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7150:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7146:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2551,
												"initializationExpression": {
													"assignments": [
														2528
													],
													"declarations": [
														{
															"constant": false,
															"id": 2528,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7139:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2551,
															"src": "7134:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2527,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7134:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2530,
													"initialValue": {
														"hexValue": "30",
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7143:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7134:10:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7172:3:13",
														"subExpression": {
															"id": 2536,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2528,
															"src": "7172:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2538,
													"nodeType": "ExpressionStatement",
													"src": "7172:3:13"
												},
												"nodeType": "ForStatement",
												"src": "7129:155:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2557,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7313:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7317:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7313:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 2552,
																"name": "guild",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2522,
																"src": "7294:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Guild_$1979_storage_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage pointer"
																}
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7300:7:13",
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1978,
															"src": "7294:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7308:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7294:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7294:30:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2560,
												"nodeType": "ExpressionStatement",
												"src": "7294:30:13"
											}
										]
									},
									"functionSelector": "e551ba4b",
									"id": 2562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "joinGuild",
									"nameLocation": "6828:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "guildName",
												"nameLocation": "6852:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "6838:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6838:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6837:25:13"
									},
									"returnParameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6870:0:13"
									},
									"scope": 2760,
									"src": "6819:512:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2590,
										"nodeType": "Block",
										"src": "7431:148:13",
										"statements": [
											{
												"expression": {
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2573,
															"name": "recipes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "7441:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$1985_storage_$",
																"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage ref)"
															}
														},
														"id": 2575,
														"indexExpression": {
															"id": 2574,
															"name": "nextRecipeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "7449:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7441:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Recipe_$1985_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2577,
																"name": "itemIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2565,
																"src": "7472:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															{
																"id": 2578,
																"name": "resultItemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2567,
																"src": "7481:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2576,
															"name": "Recipe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "7465:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Recipe_$1985_storage_ptr_$",
																"typeString": "type(struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage pointer)"
															}
														},
														"id": 2579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7465:29:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Recipe_$1985_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
														}
													},
													"src": "7441:53:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Recipe_$1985_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage ref"
													}
												},
												"id": 2581,
												"nodeType": "ExpressionStatement",
												"src": "7441:53:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2583,
															"name": "nextRecipeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "7521:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2584,
															"name": "resultItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "7535:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2582,
														"name": "RecipeAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2049,
														"src": "7509:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7509:39:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2586,
												"nodeType": "EmitStatement",
												"src": "7504:44:13"
											},
											{
												"expression": {
													"id": 2588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7558:14:13",
													"subExpression": {
														"id": 2587,
														"name": "nextRecipeId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1991,
														"src": "7558:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2589,
												"nodeType": "ExpressionStatement",
												"src": "7558:14:13"
											}
										]
									},
									"functionSelector": "a9834b67",
									"id": 2591,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2570,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1908,
													"src": "7414:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2571,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2569,
												"name": "onlyRole",
												"nameLocations": [
													"7405:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "7405:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7405:25:13"
										}
									],
									"name": "addRecipe",
									"nameLocation": "7346:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "itemIds",
												"nameLocation": "7370:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "7356:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2563,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7356:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2564,
													"nodeType": "ArrayTypeName",
													"src": "7356:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "resultItemId",
												"nameLocation": "7384:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "7379:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7379:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7355:42:13"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7431:0:13"
									},
									"scope": 2760,
									"src": "7337:242:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2758,
										"nodeType": "Block",
										"src": "7626:1258:13",
										"statements": [
											{
												"assignments": [
													2598
												],
												"declarations": [
													{
														"constant": false,
														"id": 2598,
														"mutability": "mutable",
														"name": "recipe",
														"nameLocation": "7650:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2758,
														"src": "7636:20:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Recipe_$1985_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe"
														},
														"typeName": {
															"id": 2597,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2596,
																"name": "Recipe",
																"nameLocations": [
																	"7636:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1985,
																"src": "7636:6:13"
															},
															"referencedDeclaration": 1985,
															"src": "7636:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Recipe_$1985_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2602,
												"initialValue": {
													"baseExpression": {
														"id": 2599,
														"name": "recipes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "7659:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$1985_storage_$",
															"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage ref)"
														}
													},
													"id": 2601,
													"indexExpression": {
														"id": 2600,
														"name": "recipeId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2593,
														"src": "7667:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7659:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Recipe_$1985_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7636:40:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 2604,
																		"name": "recipe",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2598,
																		"src": "7694:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Recipe_$1985_memory_ptr",
																			"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																		}
																	},
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7701:7:13",
																	"memberName": "itemIds",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1982,
																	"src": "7694:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7709:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7694:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7718:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7694:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697065",
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7721:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffd94407a19cf8baf61f33fd1e368fd23471d93aa28c06b7e15811441edc47e5",
																"typeString": "literal_string \"Invalid recipe\""
															},
															"value": "Invalid recipe"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffd94407a19cf8baf61f33fd1e368fd23471d93aa28c06b7e15811441edc47e5",
																"typeString": "literal_string \"Invalid recipe\""
															}
														],
														"id": 2603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7686:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7686:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2611,
												"nodeType": "ExpressionStatement",
												"src": "7686:52:13"
											},
											{
												"body": {
													"id": 2669,
													"nodeType": "Block",
													"src": "7856:368:13",
													"statements": [
														{
															"assignments": [
																2625
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2625,
																	"mutability": "mutable",
																	"name": "hasItem",
																	"nameLocation": "7875:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2669,
																	"src": "7870:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2624,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "7870:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2627,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 2626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7885:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7870:20:13"
														},
														{
															"body": {
																"id": 2662,
																"nodeType": "Block",
																"src": "7968:173:13",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 2643,
																							"name": "players",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2001,
																							"src": "7990:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																								"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																							}
																						},
																						"id": 2646,
																						"indexExpression": {
																							"expression": {
																								"id": 2644,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "7998:3:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2645,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8002:6:13",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "7998:10:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7990:19:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Player_$1949_storage",
																							"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																						}
																					},
																					"id": 2647,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8010:9:13",
																					"memberName": "inventory",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1945,
																					"src": "7990:29:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 2649,
																				"indexExpression": {
																					"id": 2648,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2629,
																					"src": "8020:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7990:32:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"expression": {
																						"id": 2650,
																						"name": "recipe",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2598,
																						"src": "8026:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Recipe_$1985_memory_ptr",
																							"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																						}
																					},
																					"id": 2651,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8033:7:13",
																					"memberName": "itemIds",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1982,
																					"src": "8026:14:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2653,
																				"indexExpression": {
																					"id": 2652,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2613,
																					"src": "8041:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8026:17:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7990:53:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2661,
																		"nodeType": "IfStatement",
																		"src": "7986:141:13",
																		"trueBody": {
																			"id": 2660,
																			"nodeType": "Block",
																			"src": "8045:82:13",
																			"statements": [
																				{
																					"expression": {
																						"id": 2657,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2655,
																							"name": "hasItem",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2625,
																							"src": "8067:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 2656,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8077:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "8067:14:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 2658,
																					"nodeType": "ExpressionStatement",
																					"src": "8067:14:13"
																				},
																				{
																					"id": 2659,
																					"nodeType": "Break",
																					"src": "8103:5:13"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2632,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2629,
																	"src": "7921:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2633,
																				"name": "players",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2001,
																				"src": "7925:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																					"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																				}
																			},
																			"id": 2636,
																			"indexExpression": {
																				"expression": {
																					"id": 2634,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7933:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7937:6:13",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "7933:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7925:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Player_$1949_storage",
																				"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																			}
																		},
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7945:9:13",
																		"memberName": "inventory",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1945,
																		"src": "7925:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7955:6:13",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7925:36:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7921:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2663,
															"initializationExpression": {
																"assignments": [
																	2629
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2629,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "7914:1:13",
																		"nodeType": "VariableDeclaration",
																		"scope": 2663,
																		"src": "7909:6:13",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2628,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "7909:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2631,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7918:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7909:10:13"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "7963:3:13",
																	"subExpression": {
																		"id": 2640,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2629,
																		"src": "7963:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2642,
																"nodeType": "ExpressionStatement",
																"src": "7963:3:13"
															},
															"nodeType": "ForStatement",
															"src": "7904:237:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2665,
																		"name": "hasItem",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2625,
																		"src": "8162:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "506c6179657220646f6573206e6f74206861766520616c6c207265717569726564206974656d73",
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8171:41:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6549b2fa5584e8c8ec502931a0b58219efc997d0668f171ad9fa4547ef7827c7",
																			"typeString": "literal_string \"Player does not have all required items\""
																		},
																		"value": "Player does not have all required items"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6549b2fa5584e8c8ec502931a0b58219efc997d0668f171ad9fa4547ef7827c7",
																			"typeString": "literal_string \"Player does not have all required items\""
																		}
																	],
																	"id": 2664,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8154:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8154:59:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2668,
															"nodeType": "ExpressionStatement",
															"src": "8154:59:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2616,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2613,
														"src": "7824:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2617,
																"name": "recipe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "7828:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Recipe_$1985_memory_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																}
															},
															"id": 2618,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7835:7:13",
															"memberName": "itemIds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1982,
															"src": "7828:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7843:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7828:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7824:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2670,
												"initializationExpression": {
													"assignments": [
														2613
													],
													"declarations": [
														{
															"constant": false,
															"id": 2613,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7817:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2670,
															"src": "7812:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2612,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7812:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2615,
													"initialValue": {
														"hexValue": "30",
														"id": 2614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7821:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7812:10:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7851:3:13",
														"subExpression": {
															"id": 2621,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "7851:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2623,
													"nodeType": "ExpressionStatement",
													"src": "7851:3:13"
												},
												"nodeType": "ForStatement",
												"src": "7807:417:13"
											},
											{
												"body": {
													"id": 2746,
													"nodeType": "Block",
													"src": "8344:410:13",
													"statements": [
														{
															"body": {
																"id": 2744,
																"nodeType": "Block",
																"src": "8422:322:13",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 2698,
																							"name": "players",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2001,
																							"src": "8444:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																								"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																							}
																						},
																						"id": 2701,
																						"indexExpression": {
																							"expression": {
																								"id": 2699,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "8452:3:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2700,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8456:6:13",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "8452:10:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8444:19:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Player_$1949_storage",
																							"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																						}
																					},
																					"id": 2702,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8464:9:13",
																					"memberName": "inventory",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1945,
																					"src": "8444:29:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 2704,
																				"indexExpression": {
																					"id": 2703,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2684,
																					"src": "8474:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8444:32:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"expression": {
																						"id": 2705,
																						"name": "recipe",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2598,
																						"src": "8480:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Recipe_$1985_memory_ptr",
																							"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																						}
																					},
																					"id": 2706,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8487:7:13",
																					"memberName": "itemIds",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1982,
																					"src": "8480:14:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2708,
																				"indexExpression": {
																					"id": 2707,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2672,
																					"src": "8495:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8480:17:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8444:53:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2743,
																		"nodeType": "IfStatement",
																		"src": "8440:290:13",
																		"trueBody": {
																			"id": 2742,
																			"nodeType": "Block",
																			"src": "8499:231:13",
																			"statements": [
																				{
																					"expression": {
																						"id": 2731,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 2710,
																										"name": "players",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2001,
																										"src": "8521:7:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																										}
																									},
																									"id": 2713,
																									"indexExpression": {
																										"expression": {
																											"id": 2711,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "8529:3:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2712,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "8533:6:13",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "8529:10:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "8521:19:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Player_$1949_storage",
																										"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																									}
																								},
																								"id": 2714,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8541:9:13",
																								"memberName": "inventory",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1945,
																								"src": "8521:29:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																									"typeString": "uint256[] storage ref"
																								}
																							},
																							"id": 2716,
																							"indexExpression": {
																								"id": 2715,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2684,
																								"src": "8551:1:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "8521:32:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 2717,
																										"name": "players",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2001,
																										"src": "8556:7:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																										}
																									},
																									"id": 2720,
																									"indexExpression": {
																										"expression": {
																											"id": 2718,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "8564:3:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2719,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "8568:6:13",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "8564:10:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "8556:19:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Player_$1949_storage",
																										"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																									}
																								},
																								"id": 2721,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8576:9:13",
																								"memberName": "inventory",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1945,
																								"src": "8556:29:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																									"typeString": "uint256[] storage ref"
																								}
																							},
																							"id": 2730,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2729,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"expression": {
																											"baseExpression": {
																												"id": 2722,
																												"name": "players",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2001,
																												"src": "8586:7:13",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																													"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																												}
																											},
																											"id": 2725,
																											"indexExpression": {
																												"expression": {
																													"id": 2723,
																													"name": "msg",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4294967281,
																													"src": "8594:3:13",
																													"typeDescriptions": {
																														"typeIdentifier": "t_magic_message",
																														"typeString": "msg"
																													}
																												},
																												"id": 2724,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "8598:6:13",
																												"memberName": "sender",
																												"nodeType": "MemberAccess",
																												"src": "8594:10:13",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "8586:19:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Player_$1949_storage",
																												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																											}
																										},
																										"id": 2726,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "8606:9:13",
																										"memberName": "inventory",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1945,
																										"src": "8586:29:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																											"typeString": "uint256[] storage ref"
																										}
																									},
																									"id": 2727,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "8616:6:13",
																									"memberName": "length",
																									"nodeType": "MemberAccess",
																									"src": "8586:36:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 2728,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "8625:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "8586:40:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8556:71:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8521:106:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2732,
																					"nodeType": "ExpressionStatement",
																					"src": "8521:106:13"
																				},
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"expression": {
																									"baseExpression": {
																										"id": 2733,
																										"name": "players",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2001,
																										"src": "8649:7:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																										}
																									},
																									"id": 2736,
																									"indexExpression": {
																										"expression": {
																											"id": 2734,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "8657:3:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2735,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "8661:6:13",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "8657:10:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "8649:19:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Player_$1949_storage",
																										"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																									}
																								},
																								"id": 2737,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8669:9:13",
																								"memberName": "inventory",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1945,
																								"src": "8649:29:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																									"typeString": "uint256[] storage ref"
																								}
																							},
																							"id": 2738,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8679:3:13",
																							"memberName": "pop",
																							"nodeType": "MemberAccess",
																							"src": "8649:33:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																								"typeString": "function (uint256[] storage pointer)"
																							}
																						},
																						"id": 2739,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8649:35:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2740,
																					"nodeType": "ExpressionStatement",
																					"src": "8649:35:13"
																				},
																				{
																					"id": 2741,
																					"nodeType": "Break",
																					"src": "8706:5:13"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2687,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2684,
																	"src": "8375:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2688,
																				"name": "players",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2001,
																				"src": "8379:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																					"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																				}
																			},
																			"id": 2691,
																			"indexExpression": {
																				"expression": {
																					"id": 2689,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "8387:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8391:6:13",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "8387:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8379:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Player_$1949_storage",
																				"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																			}
																		},
																		"id": 2692,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8399:9:13",
																		"memberName": "inventory",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1945,
																		"src": "8379:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8409:6:13",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8379:36:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8375:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2745,
															"initializationExpression": {
																"assignments": [
																	2684
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2684,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "8368:1:13",
																		"nodeType": "VariableDeclaration",
																		"scope": 2745,
																		"src": "8363:6:13",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2683,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "8363:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2686,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8372:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "8363:10:13"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "8417:3:13",
																	"subExpression": {
																		"id": 2695,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2684,
																		"src": "8417:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2697,
																"nodeType": "ExpressionStatement",
																"src": "8417:3:13"
															},
															"nodeType": "ForStatement",
															"src": "8358:386:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2675,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2672,
														"src": "8312:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2676,
																"name": "recipe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "8316:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Recipe_$1985_memory_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																}
															},
															"id": 2677,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8323:7:13",
															"memberName": "itemIds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1982,
															"src": "8316:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8331:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8316:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8312:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2747,
												"initializationExpression": {
													"assignments": [
														2672
													],
													"declarations": [
														{
															"constant": false,
															"id": 2672,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8305:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2747,
															"src": "8300:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2671,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8300:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2674,
													"initialValue": {
														"hexValue": "30",
														"id": 2673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8309:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8300:10:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8339:3:13",
														"subExpression": {
															"id": 2680,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2672,
															"src": "8339:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2682,
													"nodeType": "ExpressionStatement",
													"src": "8339:3:13"
												},
												"nodeType": "ForStatement",
												"src": "8295:459:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2754,
																"name": "recipe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "8857:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Recipe_$1985_memory_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																}
															},
															"id": 2755,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8864:12:13",
															"memberName": "resultItemId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "8857:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 2748,
																	"name": "players",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2001,
																	"src": "8822:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1949_storage_$",
																		"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																	}
																},
																"id": 2751,
																"indexExpression": {
																	"expression": {
																		"id": 2749,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8830:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8834:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8830:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8822:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Player_$1949_storage",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																}
															},
															"id": 2752,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8842:9:13",
															"memberName": "inventory",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1945,
															"src": "8822:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8852:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "8822:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8822:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2757,
												"nodeType": "ExpressionStatement",
												"src": "8822:55:13"
											}
										]
									},
									"functionSelector": "7309cbbd",
									"id": 2759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "craftItem",
									"nameLocation": "7594:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "recipeId",
												"nameLocation": "7609:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "7604:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7604:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7603:15:13"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7626:0:13"
									},
									"scope": 2760,
									"src": "7585:1299:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2761,
							"src": "1186:7814:13",
							"usedErrors": [
								379,
								382,
								643,
								648,
								883,
								886,
								1070,
								1073,
								1188,
								1201,
								1479,
								1482
							],
							"usedEvents": [
								387,
								875,
								880,
								1082,
								1091,
								1100,
								1167,
								2027,
								2031,
								2037,
								2043,
								2049
							]
						}
					],
					"src": "81:8920:13"
				},
				"id": 13
			}
		}
	}
}