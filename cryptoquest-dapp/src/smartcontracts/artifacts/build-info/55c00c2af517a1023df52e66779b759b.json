{
	"id": "55c00c2af517a1023df52e66779b759b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\n// Define interfaces for the other contracts\ninterface IDAO {\n    // Define DAO functions you need\n}\n\ninterface IStaking {\n    // Define Staking functions you need\n}\n\ninterface IFarming {\n    // Define Farming functions you need\n}\n\n/// @custom:security-contact jacquedegraff@creodamo.com\ncontract CryptoQuestTheShardsOfGenesisWallet is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n\n    // Addresses of other contracts\n    address public erc20Address;\n    address public erc721Address;\n    address public erc1155Address;\n    address public daoAddress;\n    address public stakingAddress;\n    address public farmingAddress;\n\n    // Struct for multi-signature transaction\n    struct Transaction {\n        address to;\n        uint256 value;\n        bytes data;\n        bool executed;\n        uint256 numConfirmations;\n    }\n\n    mapping(uint256 => mapping(address => bool)) public isConfirmed;\n    Transaction[] public transactions;\n    uint256 public requiredConfirmations;\n\n    // Struct for staking\n    struct Stake {\n        uint256 amount;\n        uint256 startTime;\n    }\n\n    mapping(address => Stake) public stakes;\n    uint256 public stakingRate; // e.g., rate of return for staking\n\n    event TransactionSubmitted(uint256 indexed txIndex);\n    event TransactionConfirmed(address indexed owner, uint256 indexed txIndex);\n    event TransactionExecuted(uint256 indexed txIndex);\n    event TransactionRevoked(address indexed owner, uint256 indexed txIndex);\n    event TokensStaked(address indexed user, uint256 amount, uint256 startTime);\n    event TokensUnstaked(address indexed user, uint256 amount, uint256 reward);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address admin,\n        uint256 _requiredConfirmations,\n        uint256 _stakingRate,\n        address _erc20Address,\n        address _erc721Address,\n        address _erc1155Address,\n        address _daoAddress,\n        address _stakingAddress,\n        address _farmingAddress\n    ) initializer public {\n        __AccessControl_init();\n        __Pausable_init();\n        __UUPSUpgradeable_init();\n\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(PAUSER_ROLE, admin);\n        _grantRole(ADMIN_ROLE, admin);\n        _grantRole(UPGRADER_ROLE, admin);\n\n        requiredConfirmations = _requiredConfirmations;\n        stakingRate = _stakingRate;\n\n        erc20Address = _erc20Address;\n        erc721Address = _erc721Address;\n        erc1155Address = _erc1155Address;\n        daoAddress = _daoAddress;\n        stakingAddress = _stakingAddress;\n        farmingAddress = _farmingAddress;\n    }\n\n    modifier onlyAdmin() {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\");\n        _;\n    }\n\n    modifier txExists(uint256 _txIndex) {\n        require(_txIndex < transactions.length, \"Transaction does not exist\");\n        _;\n    }\n\n    modifier notExecuted(uint256 _txIndex) {\n        require(!transactions[_txIndex].executed, \"Transaction already executed\");\n        _;\n    }\n\n    modifier notConfirmed(uint256 _txIndex) {\n        require(!isConfirmed[_txIndex][msg.sender], \"Transaction already confirmed\");\n        _;\n    }\n\n    function setERC20Address(address _erc20Address) external onlyAdmin {\n        erc20Address = _erc20Address;\n    }\n\n    function setERC721Address(address _erc721Address) external onlyAdmin {\n        erc721Address = _erc721Address;\n    }\n\n    function setERC1155Address(address _erc1155Address) external onlyAdmin {\n        erc1155Address = _erc1155Address;\n    }\n\n    function setDAOAddress(address _daoAddress) external onlyAdmin {\n        daoAddress = _daoAddress;\n    }\n\n    function setStakingAddress(address _stakingAddress) external onlyAdmin {\n        stakingAddress = _stakingAddress;\n    }\n\n    function setFarmingAddress(address _farmingAddress) external onlyAdmin {\n        farmingAddress = _farmingAddress;\n    }\n\n    function submitTransaction(address _to, uint256 _value, bytes memory _data) public onlyAdmin {\n        uint256 txIndex = transactions.length;\n\n        transactions.push(Transaction({\n            to: _to,\n            value: _value,\n            data: _data,\n            executed: false,\n            numConfirmations: 0\n        }));\n\n        emit TransactionSubmitted(txIndex);\n    }\n\n    function confirmTransaction(uint256 _txIndex)\n        public\n        onlyAdmin\n        txExists(_txIndex)\n        notExecuted(_txIndex)\n        notConfirmed(_txIndex)\n    {\n        Transaction storage transaction = transactions[_txIndex];\n        transaction.numConfirmations += 1;\n        isConfirmed[_txIndex][msg.sender] = true;\n\n        emit TransactionConfirmed(msg.sender, _txIndex);\n    }\n\n    function executeTransaction(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {\n        Transaction storage transaction = transactions[_txIndex];\n\n        require(transaction.numConfirmations >= requiredConfirmations, \"Cannot execute tx\");\n\n        transaction.executed = true;\n\n        (bool success, ) = transaction.to.call{value: transaction.value}(transaction.data);\n        require(success, \"Transaction failed\");\n\n        emit TransactionExecuted(_txIndex);\n    }\n\n    function revokeConfirmation(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {\n        Transaction storage transaction = transactions[_txIndex];\n\n        require(isConfirmed[_txIndex][msg.sender], \"Transaction not confirmed\");\n\n        transaction.numConfirmations -= 1;\n        isConfirmed[_txIndex][msg.sender] = false;\n\n        emit TransactionRevoked(msg.sender, _txIndex);\n    }\n\n    // Staking functionality\n    function stakeTokens(uint256 _amount) public whenNotPaused {\n        IERC20Upgradeable token = IERC20Upgradeable(erc20Address);\n        require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\");\n\n        stakes[msg.sender] = Stake({\n            amount: _amount,\n            startTime: block.timestamp\n        });\n\n        emit TokensStaked(msg.sender, _amount, block.timestamp);\n    }\n\n    function unstakeTokens() public whenNotPaused {\n        Stake memory stake = stakes[msg.sender];\n        require(stake.amount > 0, \"No tokens staked\");\n\n        uint256 stakingDuration = block.timestamp - stake.startTime;\n        uint256 reward = (stake.amount * stakingRate * stakingDuration) / (365 days);\n\n        IERC20Upgradeable token = IERC20Upgradeable(erc20Address);\n        require(token.transfer(msg.sender, stake.amount + reward), \"Token transfer failed\");\n\n        delete stakes[msg.sender];\n\n        emit TokensUnstaked(msg.sender, stake.amount, reward);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {}\n\n    receive() external payable {}\n}\n\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 925,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol": {
				"IERC1155Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":\"IERC1155Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"IERC721Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol": {
				"CryptoQuestTheShardsOfGenesisWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								}
							],
							"name": "TokensStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "TokensUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "txIndex",
									"type": "uint256"
								}
							],
							"name": "TransactionConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "txIndex",
									"type": "uint256"
								}
							],
							"name": "TransactionExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "txIndex",
									"type": "uint256"
								}
							],
							"name": "TransactionRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "txIndex",
									"type": "uint256"
								}
							],
							"name": "TransactionSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_txIndex",
									"type": "uint256"
								}
							],
							"name": "confirmTransaction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "daoAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc1155Address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20Address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc721Address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_txIndex",
									"type": "uint256"
								}
							],
							"name": "executeTransaction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "farmingAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_requiredConfirmations",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_stakingRate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_erc20Address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_erc721Address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_erc1155Address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_daoAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_farmingAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isConfirmed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requiredConfirmations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_txIndex",
									"type": "uint256"
								}
							],
							"name": "revokeConfirmation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_daoAddress",
									"type": "address"
								}
							],
							"name": "setDAOAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_erc1155Address",
									"type": "address"
								}
							],
							"name": "setERC1155Address",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_erc20Address",
									"type": "address"
								}
							],
							"name": "setERC20Address",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_erc721Address",
									"type": "address"
								}
							],
							"name": "setERC721Address",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_farmingAddress",
									"type": "address"
								}
							],
							"name": "setFarmingAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingAddress",
									"type": "address"
								}
							],
							"name": "setStakingAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "submitTransaction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transactions",
							"outputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "numConfirmations",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"custom:security-contact": "jacquedegraff@creodamo.com",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":908:7835  contract CryptoQuestTheShardsOfGenesisWallet is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2539:2592  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2563:2585  _disableInitializers() */\n  tag_4\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2563:2583  _disableInitializers */\n  tag_5\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2563:2585  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":908:7835  contract CryptoQuestTheShardsOfGenesisWallet is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_15:\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":908:7835  contract CryptoQuestTheShardsOfGenesisWallet is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":908:7835  contract CryptoQuestTheShardsOfGenesisWallet is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xc01a8c84\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xd836fc6f\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xd836fc6f\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xee22610b\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf4e0d9ac\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf72c0d8b\n      eq\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0xc01a8c84\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xc63a6ad2\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xc6427474\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd7b4be24\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x9ace38c2\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x9ace38c2\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa5ce413b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb001f618\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup1\n      0x8456cb59\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8a2ade58\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x965afa89\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x9a03d9a3\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x63447471\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x63447471\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7547c7a3\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x80f59a65\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x82e717f7\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x41bec0d2\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup1\n      0x2352a864\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x2352a864\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x276184ae\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x05142002\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x20ea8d86\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2131c68c\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1350:1379  address public erc1155Address */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      sload(0x34)\n      tag_60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_60:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":661:693   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":643:694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1350:1379  address public erc1155Address */\n      tag_57\n        /* \"#utility.yul\":497:700   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1939:1978  mapping(address => Stake) public stakes */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      mstore(0x20, 0x3b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_65:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1248:1273   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1304:1306   */\n      0x20\n        /* \"#utility.yul\":1289:1307   */\n      dup4\n      add\n        /* \"#utility.yul\":1282:1316   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1221:1239   */\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1939:1978  mapping(address => Stake) public stakes */\n      tag_57\n        /* \"#utility.yul\":1074:1322   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6096:6506  function revokeConfirmation(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1385:1410  address public daoAddress */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      sload(0x35)\n      tag_60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1316:1344  address public erc721Address */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      sload(0x33)\n      tag_60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n        /* \"#utility.yul\":1935:1960   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1923:1925   */\n      0x20\n        /* \"#utility.yul\":1908:1926   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      tag_57\n        /* \"#utility.yul\":1789:1966   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1283:1310  address public erc20Address */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      sload(0x32)\n      tag_60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_72\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_72\n      tag_102\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7619:7694  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_72\n      tag_106\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4080:4192  function setERC20Address(address _erc20Address) external onlyAdmin {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_72\n      tag_109\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_15:\n      tag_72\n      tag_112\n      calldatasize\n      0x04\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_85\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n      jump(tag_53)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2598:3528  function initialize(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_72\n      tag_125\n      calldatasize\n      0x04\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6541:6956  function stakeTokens(uint256 _amount) public whenNotPaused {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_72\n      tag_130\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1108:1168  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_85\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1685:1748  mapping(uint256 => mapping(address => bool)) public isConfirmed */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_53\n      tag_138\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_138:\n      0x38\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1793:1829  uint256 public requiredConfirmations */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_85\n      sload(0x3a)\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7542:7613  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_72\n      tag_149\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1451:1480  address public farmingAddress */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      sload(0x37)\n      tag_60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_53\n      tag_156\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4446:4550  function setDAOAddress(address _daoAddress) external onlyAdmin {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_72\n      tag_161\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4198:4314  function setERC721Address(address _erc721Address) external onlyAdmin {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_72\n      tag_165\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1754:1787  Transaction[] public transactions */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_168\n      tag_169\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      tag_57\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      tag_85\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6962:7536  function unstakeTokens() public whenNotPaused {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_72\n      tag_179\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      tag_181\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_181:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4682:4802  function setFarmingAddress(address _farmingAddress) external onlyAdmin {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      tag_72\n      tag_187\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_187:\n      tag_188\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5194:5589  function confirmTransaction(uint256 _txIndex)... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      tag_72\n      tag_191\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_191:\n      tag_192\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1984:2010  uint256 public stakingRate */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      tag_85\n      sload(0x3c)\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4808:5188  function submitTransaction(address _to, uint256 _value, bytes memory _data) public onlyAdmin {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      tag_72\n      tag_199\n      calldatasize\n      0x04\n      tag_200\n      jump\t// in\n    tag_199:\n      tag_201\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      tag_72\n      tag_204\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_204:\n      tag_205\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1416:1445  address public stakingAddress */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      sload(0x36)\n      tag_60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4320:4440  function setERC1155Address(address _erc1155Address) external onlyAdmin {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      tag_72\n      tag_212\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_212:\n      tag_213\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1040:1102  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      tag_85\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5595:6090  function executeTransaction(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      tag_72\n      tag_220\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_220:\n      tag_221\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4556:4676  function setStakingAddress(address _stakingAddress) external onlyAdmin {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      pop\n      tag_72\n      tag_224\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_224:\n      tag_225\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1174:1240  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      tag_85\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1214:1240  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1174:1240  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3528:3532  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_232\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1173  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3544:3638  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6096:6506  function revokeConfirmation(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n    tag_75:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_235\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3593:3603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3580  hasRole */\n      tag_157\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_235:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3565:3621  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3710:3722  transactions */\n      0x39\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3710:3729  transactions.length */\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6168:6176  _txIndex */\n      dup2\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3699:3729  _txIndex < transactions.length */\n      dup2\n      lt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3691:3760  require(_txIndex < transactions.length, \"Transaction does not exist\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_242\n      jump\t// in\n    tag_240:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6190:6198  _txIndex */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3854  transactions */\n      0x39\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3855:3863  _txIndex */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3864  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_245\n      tag_246\n      jump\t// in\n    tag_245:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3873  transactions[_txIndex].executed */\n      0x03\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3864  transactions[_txIndex] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3873  transactions[_txIndex].executed */\n      add\n      sload\n      0xff\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3841:3873  !transactions[_txIndex].executed */\n      iszero\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3833:3906  require(!transactions[_txIndex].executed, \"Transaction already executed\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_250\n      jump\t// in\n    tag_248:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6210:6241  Transaction storage transaction */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6244:6256  transactions */\n      0x39\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6257:6265  _txIndex */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6244:6266  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_253\n      jumpi\n      tag_253\n      tag_246\n      jump\t// in\n    tag_253:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6285:6306  isConfirmed[_txIndex] */\n      dup8\n      dup5\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6285:6296  isConfirmed */\n      0x38\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6285:6306  isConfirmed[_txIndex] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6307:6317  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6285:6318  isConfirmed[_txIndex][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6244:6266  transactions[_txIndex] */\n      0x05\n      swap1\n      swap2\n      mul\n      swap1\n      swap2\n      add\n      swap2\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6285:6318  isConfirmed[_txIndex][msg.sender] */\n      0xff\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6277:6348  require(isConfirmed[_txIndex][msg.sender], \"Transaction not confirmed\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7861:7863   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6277:6348  require(isConfirmed[_txIndex][msg.sender], \"Transaction not confirmed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7843:7864   */\n      mstore\n        /* \"#utility.yul\":7900:7902   */\n      0x19\n        /* \"#utility.yul\":7880:7898   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7873:7903   */\n      mstore\n        /* \"#utility.yul\":7939:7966   */\n      0x5472616e73616374696f6e206e6f7420636f6e6669726d656400000000000000\n        /* \"#utility.yul\":7919:7937   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7912:7967   */\n      mstore\n        /* \"#utility.yul\":7984:8002   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6277:6348  require(isConfirmed[_txIndex][msg.sender], \"Transaction not confirmed\") */\n      tag_237\n        /* \"#utility.yul\":7659:8008   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6277:6348  require(isConfirmed[_txIndex][msg.sender], \"Transaction not confirmed\") */\n    tag_255:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6391:6392  1 */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6359:6370  transaction */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6359:6387  transaction.numConfirmations */\n      0x04\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6359:6392  transaction.numConfirmations -= 1 */\n      dup3\n      dup3\n      sload\n      tag_258\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6438:6443  false */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6402:6423  isConfirmed[_txIndex] */\n      dup5\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6402:6413  isConfirmed */\n      0x38\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6402:6423  isConfirmed[_txIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6424:6434  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6402:6435  isConfirmed[_txIndex][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6402:6443  isConfirmed[_txIndex][msg.sender] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6459:6499  TransactionRevoked(msg.sender, _txIndex) */\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6414:6422  _txIndex */\n      dup7\n      swap3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6459:6499  TransactionRevoked(msg.sender, _txIndex) */\n      0xe5c8875c5e14471f806f15f740cd9fd54937d151e9dcf8ad3ba988d6a285e67e\n      swap2\n      log3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6200:6506  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3770:3771  _ */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3631:3632  _ */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6096:6506  function revokeConfirmation(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4824:4831  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      swap1\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5333:5337  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5332  getRoleAdmin */\n      tag_88\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5361:5365  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5367:5374  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5360  _grantRole */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      jump\t// in\n    tag_268:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_274\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6585  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_275\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_274:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7619:7694  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_106:\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_277:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7677:7687  _unpause() */\n      tag_279\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7677:7685  _unpause */\n      tag_280\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7677:7687  _unpause() */\n      jump\t// in\n    tag_279:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7619:7694  function unpause() public onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4080:4192  function setERC20Address(address _erc20Address) external onlyAdmin {... */\n    tag_110:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_282\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3593:3603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3580  hasRole */\n      tag_157\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_282:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3565:3621  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_283:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4157:4169  erc20Address */\n      0x32\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4157:4185  erc20Address = _erc20Address */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4080:4192  function setERC20Address(address _erc20Address) external onlyAdmin {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_287\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_288\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_291\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_292\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_293\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_295\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_296\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_295:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2598:3528  function initialize(... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_302\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_303\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_304\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_306:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2937:2959  __AccessControl_init() */\n      tag_308\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2937:2957  __AccessControl_init */\n      tag_309\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2937:2959  __AccessControl_init() */\n      jump\t// in\n    tag_308:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2969:2986  __Pausable_init() */\n      tag_310\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2969:2984  __Pausable_init */\n      tag_311\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2969:2986  __Pausable_init() */\n      jump\t// in\n    tag_310:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2996:3020  __UUPSUpgradeable_init() */\n      tag_312\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2996:3018  __UUPSUpgradeable_init */\n      tag_309\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2996:3020  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_312:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3031:3068  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3062:3067  admin */\n      dup16\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3031:3041  _grantRole */\n      tag_269\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3031:3068  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n      jump\t// in\n    tag_314:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3078:3108  _grantRole(PAUSER_ROLE, admin) */\n      tag_315\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3102:3107  admin */\n      dup16\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3078:3088  _grantRole */\n      tag_269\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3078:3108  _grantRole(PAUSER_ROLE, admin) */\n      jump\t// in\n    tag_315:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3118:3147  _grantRole(ADMIN_ROLE, admin) */\n      tag_316\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3141:3146  admin */\n      dup16\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3118:3128  _grantRole */\n      tag_269\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3118:3147  _grantRole(ADMIN_ROLE, admin) */\n      jump\t// in\n    tag_316:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3157:3189  _grantRole(UPGRADER_ROLE, admin) */\n      tag_317\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1214:1240  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3183:3188  admin */\n      dup16\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3157:3167  _grantRole */\n      tag_269\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3157:3189  _grantRole(UPGRADER_ROLE, admin) */\n      jump\t// in\n    tag_317:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3200:3221  requiredConfirmations */\n      0x3a\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3200:3246  requiredConfirmations = _requiredConfirmations */\n      dup14\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3256:3267  stakingRate */\n      0x3c\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3256:3282  stakingRate = _stakingRate */\n      dup13\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3293:3305  erc20Address */\n      0x32\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3293:3321  erc20Address = _erc20Address */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup15\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3331:3344  erc721Address */\n      0x33\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3331:3361  erc721Address = _erc721Address */\n      dup1\n      sload\n      dup3\n      and\n      dup14\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3371:3385  erc1155Address */\n      0x34\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3371:3403  erc1155Address = _erc1155Address */\n      dup1\n      sload\n      dup3\n      and\n      dup13\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3413:3423  daoAddress */\n      0x35\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3413:3437  daoAddress = _daoAddress */\n      dup1\n      sload\n      dup3\n      and\n      dup12\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3447:3461  stakingAddress */\n      0x36\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3447:3479  stakingAddress = _stakingAddress */\n      dup1\n      sload\n      dup3\n      and\n      dup11\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3489:3503  farmingAddress */\n      0x37\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3489:3521  farmingAddress = _farmingAddress */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap2\n      dup9\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":8431:8481   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":8419:8421   */\n      0x20\n        /* \"#utility.yul\":8404:8422   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":2598:3528  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6541:6956  function stakeTokens(uint256 _amount) public whenNotPaused {... */\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_322:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6654:6666  erc20Address */\n      sload(0x32)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6685:6739  token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6704:6714  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6685:6739  token.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8694:8745   */\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6724:6728  this */\n      address\n        /* \"#utility.yul\":8761:8779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8754:8814   */\n      mstore\n        /* \"#utility.yul\":8830:8848   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":8823:8857   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6654:6666  erc20Address */\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6685:6703  token.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":8667:8685   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6685:6739  token.transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_328\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_328:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_329\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6677:6765  require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9352:9354   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6677:6765  require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9334:9355   */\n      mstore\n        /* \"#utility.yul\":9391:9393   */\n      0x15\n        /* \"#utility.yul\":9371:9389   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9364:9394   */\n      mstore\n      shl(0x5a, 0x151bdad95b881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":9410:9428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9403:9454   */\n      mstore\n        /* \"#utility.yul\":9471:9489   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6677:6765  require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\") */\n      tag_237\n        /* \"#utility.yul\":9150:9495   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6677:6765  require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\") */\n    tag_331:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6797:6883  Stake({... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      dup4\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6857:6872  block.timestamp */\n      timestamp\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6797:6883  Stake({... */\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6783:6793  msg.sender */\n      caller\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6776:6794  stakes[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6776:6782  stakes */\n      0x3b\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6776:6794  stakes[msg.sender] */\n      dup5\n      mstore\n      dup7\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6776:6883  stakes[msg.sender] = Stake({... */\n      swap5\n      mload\n      dup6\n      sstore\n      swap1\n      mload\n      0x01\n      swap1\n      swap5\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6899:6949  TokensStaked(msg.sender, _amount, block.timestamp) */\n      dup4\n      mload\n        /* \"#utility.yul\":1248:1273   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":1289:1307   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1282:1316   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6783:6793  msg.sender */\n      swap1\n      swap2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6899:6949  TokensStaked(msg.sender, _amount, block.timestamp) */\n      0xdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc\n      swap2\n        /* \"#utility.yul\":1221:1239   */\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6899:6949  TokensStaked(msg.sender, _amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6600:6956  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6541:6956  function stakeTokens(uint256 _amount) public whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7542:7613  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_149:\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_336:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7598:7606  _pause() */\n      tag_279\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7598:7604  _pause */\n      tag_339\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7598:7606  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3809:3813  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      swap2\n      dup3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4446:4550  function setDAOAddress(address _daoAddress) external onlyAdmin {... */\n    tag_162:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_343\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3593:3603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3580  hasRole */\n      tag_157\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_343:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3565:3621  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_344:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4519:4529  daoAddress */\n      0x35\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4519:4543  daoAddress = _daoAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4446:4550  function setDAOAddress(address _daoAddress) external onlyAdmin {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4198:4314  function setERC721Address(address _erc721Address) external onlyAdmin {... */\n    tag_166:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_348\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3593:3603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3580  hasRole */\n      tag_157\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_348:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3565:3621  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_349:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4277:4290  erc721Address */\n      0x33\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4277:4307  erc721Address = _erc721Address */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4198:4314  function setERC721Address(address _erc721Address) external onlyAdmin {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1754:1787  Transaction[] public transactions */\n    tag_170:\n      0x39\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_352\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_352:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      swap5\n      pop\n      swap1\n      swap3\n      swap2\n      tag_354\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_356\n      swap1\n      tag_355\n      jump\t// in\n    tag_356:\n      dup1\n      iszero\n      tag_357\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_358\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_357)\n    tag_358:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_359:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_359\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_357:\n      pop\n      pop\n      pop\n      pop\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      0xff\n      and\n      swap2\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6962:7536  function unstakeTokens() public whenNotPaused {... */\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_361\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_361:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7046:7056  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7018:7036  Stake memory stake */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7039:7057  stakes[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7039:7045  stakes */\n      0x3b\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7039:7057  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7018:7057  Stake memory stake = stakes[msg.sender] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      sload\n      dup1\n      dup5\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7067:7112  require(stake.amount > 0, \"No tokens staked\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10087:10089   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7067:7112  require(stake.amount > 0, \"No tokens staked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10069:10090   */\n      mstore\n        /* \"#utility.yul\":10126:10128   */\n      0x10\n        /* \"#utility.yul\":10106:10124   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10099:10129   */\n      mstore\n      shl(0x82, 0x139bc81d1bdad95b9cc81cdd185ad959)\n        /* \"#utility.yul\":10145:10163   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10138:10184   */\n      mstore\n        /* \"#utility.yul\":10201:10219   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7067:7112  require(stake.amount > 0, \"No tokens staked\") */\n      tag_237\n        /* \"#utility.yul\":9885:10225   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7067:7112  require(stake.amount > 0, \"No tokens staked\") */\n    tag_363:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7123:7146  uint256 stakingDuration */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7167:7172  stake */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7167:7182  stake.startTime */\n      0x20\n      add\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7149:7164  block.timestamp */\n      timestamp\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7149:7182  block.timestamp - stake.startTime */\n      tag_366\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_366:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7123:7182  uint256 stakingDuration = block.timestamp - stake.startTime */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7192:7206  uint256 reward */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7259:7267  365 days */\n      0x01e13380\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7239:7254  stakingDuration */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7225:7236  stakingRate */\n      sload(0x3c)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7210:7215  stake */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7210:7222  stake.amount */\n      0x00\n      add\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7210:7236  stake.amount * stakingRate */\n      tag_367\n      swap2\n      swap1\n      tag_368\n      jump\t// in\n    tag_367:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7210:7254  stake.amount * stakingRate * stakingDuration */\n      tag_369\n      swap2\n      swap1\n      tag_368\n      jump\t// in\n    tag_369:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7209:7268  (stake.amount * stakingRate * stakingDuration) / (365 days) */\n      tag_370\n      swap2\n      swap1\n      tag_371\n      jump\t// in\n    tag_370:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7323:7335  erc20Address */\n      sload(0x32)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7381:7393  stake.amount */\n      dup5\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7192:7268  uint256 reward = (stake.amount * stakingRate * stakingDuration) / (365 days) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7323:7335  erc20Address */\n      and\n      swap1\n      dup2\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7354:7368  token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7369:7379  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7381:7402  stake.amount + reward */\n      tag_372\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7192:7268  uint256 reward = (stake.amount * stakingRate * stakingDuration) / (365 days) */\n      dup7\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7381:7402  stake.amount + reward */\n      tag_373\n      jump\t// in\n    tag_372:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7354:7403  token.transfer(msg.sender, stake.amount + reward) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10947:10979   */\n      swap1\n      swap3\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7354:7403  token.transfer(msg.sender, stake.amount + reward) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":10929:10980   */\n      mstore\n        /* \"#utility.yul\":10996:11014   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10989:11023   */\n      mstore\n        /* \"#utility.yul\":10902:10920   */\n      0x44\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7354:7403  token.transfer(msg.sender, stake.amount + reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_377\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_377:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_378\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_378:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7346:7429  require(token.transfer(msg.sender, stake.amount + reward), \"Token transfer failed\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9352:9354   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7346:7429  require(token.transfer(msg.sender, stake.amount + reward), \"Token transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9334:9355   */\n      mstore\n        /* \"#utility.yul\":9391:9393   */\n      0x15\n        /* \"#utility.yul\":9371:9389   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9364:9394   */\n      mstore\n      shl(0x5a, 0x151bdad95b881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":9410:9428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9403:9454   */\n      mstore\n        /* \"#utility.yul\":9471:9489   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7346:7429  require(token.transfer(msg.sender, stake.amount + reward), \"Token transfer failed\") */\n      tag_237\n        /* \"#utility.yul\":9150:9495   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7346:7429  require(token.transfer(msg.sender, stake.amount + reward), \"Token transfer failed\") */\n    tag_379:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7454:7464  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7447:7465  stakes[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7447:7453  stakes */\n      0x3b\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7447:7465  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7440:7465  delete stakes[msg.sender] */\n      dup4\n      dup2\n      sstore\n      0x01\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7508:7520  stake.amount */\n      dup7\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7481:7529  TokensUnstaked(msg.sender, stake.amount, reward) */\n      dup3\n      mload\n        /* \"#utility.yul\":1248:1273   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1289:1307   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1282:1316   */\n      dup6\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7481:7529  TokensUnstaked(msg.sender, stake.amount, reward) */\n      0x6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336\n      swap2\n        /* \"#utility.yul\":1221:1239   */\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7481:7529  TokensUnstaked(msg.sender, stake.amount, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7008:7536  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6962:7536  function unstakeTokens() public whenNotPaused {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4682:4802  function setFarmingAddress(address _farmingAddress) external onlyAdmin {... */\n    tag_188:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_383\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3593:3603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3580  hasRole */\n      tag_157\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_383:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3565:3621  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_384:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4763:4777  farmingAddress */\n      0x37\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4763:4795  farmingAddress = _farmingAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4682:4802  function setFarmingAddress(address _farmingAddress) external onlyAdmin {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5194:5589  function confirmTransaction(uint256 _txIndex)... */\n    tag_192:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_388\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3593:3603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3580  hasRole */\n      tag_157\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_388:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3565:3621  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_389\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_389:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3710:3722  transactions */\n      0x39\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3710:3729  transactions.length */\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5290:5298  _txIndex */\n      dup2\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3699:3729  _txIndex < transactions.length */\n      dup2\n      lt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3691:3760  require(_txIndex < transactions.length, \"Transaction does not exist\") */\n      tag_392\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_242\n      jump\t// in\n    tag_392:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5320:5328  _txIndex */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3854  transactions */\n      0x39\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3855:3863  _txIndex */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3864  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_396\n      jumpi\n      tag_396\n      tag_246\n      jump\t// in\n    tag_396:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3873  transactions[_txIndex].executed */\n      0x03\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3864  transactions[_txIndex] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3873  transactions[_txIndex].executed */\n      add\n      sload\n      0xff\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3841:3873  !transactions[_txIndex].executed */\n      iszero\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3833:3906  require(!transactions[_txIndex].executed, \"Transaction already executed\") */\n      tag_398\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_250\n      jump\t// in\n    tag_398:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3989:4010  isConfirmed[_txIndex] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3989:4000  isConfirmed */\n      0x38\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3989:4010  isConfirmed[_txIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4011:4021  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3989:4022  isConfirmed[_txIndex][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5351:5359  _txIndex */\n      dup4\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3989:4022  isConfirmed[_txIndex][msg.sender] */\n      0xff\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3988:4022  !isConfirmed[_txIndex][msg.sender] */\n      iszero\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3980:4056  require(!isConfirmed[_txIndex][msg.sender], \"Transaction already confirmed\") */\n      tag_401\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11236:11238   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3980:4056  require(!isConfirmed[_txIndex][msg.sender], \"Transaction already confirmed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11218:11239   */\n      mstore\n        /* \"#utility.yul\":11275:11277   */\n      0x1d\n        /* \"#utility.yul\":11255:11273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11248:11278   */\n      mstore\n        /* \"#utility.yul\":11314:11345   */\n      0x5472616e73616374696f6e20616c726561647920636f6e6669726d6564000000\n        /* \"#utility.yul\":11294:11312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11287:11346   */\n      mstore\n        /* \"#utility.yul\":11363:11381   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3980:4056  require(!isConfirmed[_txIndex][msg.sender], \"Transaction already confirmed\") */\n      tag_237\n        /* \"#utility.yul\":11034:11387   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3980:4056  require(!isConfirmed[_txIndex][msg.sender], \"Transaction already confirmed\") */\n    tag_401:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5375:5406  Transaction storage transaction */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5409:5421  transactions */\n      0x39\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5422:5430  _txIndex */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5409:5431  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_406\n      jumpi\n      tag_406\n      tag_246\n      jump\t// in\n    tag_406:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5375:5431  Transaction storage transaction = transactions[_txIndex] */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5473:5474  1 */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5441:5452  transaction */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5441:5469  transaction.numConfirmations */\n      0x04\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5441:5474  transaction.numConfirmations += 1 */\n      dup3\n      dup3\n      sload\n      tag_408\n      swap2\n      swap1\n      tag_373\n      jump\t// in\n    tag_408:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5484:5505  isConfirmed[_txIndex] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5484:5495  isConfirmed */\n      0x38\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5484:5505  isConfirmed[_txIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5506:5516  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5484:5517  isConfirmed[_txIndex][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5484:5524  isConfirmed[_txIndex][msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5520:5524  true */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5484:5524  isConfirmed[_txIndex][msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5540:5582  TransactionConfirmed(msg.sender, _txIndex) */\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5496:5504  _txIndex */\n      dup8\n      swap3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5540:5582  TransactionConfirmed(msg.sender, _txIndex) */\n      0xf8a17c9136a3ae33364fac05eb088a3cbafee10c1889c88593e20ee2d8e4eb88\n      swap2\n      log3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5365:5589  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3916:3917  _ */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3770:3771  _ */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3631:3632  _ */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5194:5589  function confirmTransaction(uint256 _txIndex)... */\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4808:5188  function submitTransaction(address _to, uint256 _value, bytes memory _data) public onlyAdmin {... */\n    tag_201:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_410\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3593:3603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3580  hasRole */\n      tag_157\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_410:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3565:3621  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_411\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_411:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4929:4941  transactions */\n      0x39\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4929:4948  transactions.length */\n      dup1\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4977:5135  Transaction({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup8\n      dup2\n      mstore\n      swap3\n      dup3\n      add\n      dup7\n      dup2\n      mstore\n      0x00\n      0x60\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n      0x80\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4959:5136  transactions.push(Transaction({... */\n      dup7\n      add\n      dup8\n      sstore\n      swap6\n      swap1\n      swap6\n      mstore\n      dup2\n      mload\n      0xdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d3\n      0x05\n      dup7\n      mul\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap3\n      swap1\n      swap4\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup3\n      sstore\n      swap3\n      mload\n      0xdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d4\n      dup5\n      add\n      sstore\n      swap4\n      mload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4929:4948  transactions.length */\n      swap3\n      swap4\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4977:5135  Transaction({... */\n      swap1\n      swap3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4959:5136  transactions.push(Transaction({... */\n      swap1\n      swap2\n      0xdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d5\n      add\n      swap1\n      tag_415\n      swap1\n      dup3\n      tag_416\n      jump\t// in\n    tag_415:\n      pop\n      0x60\n      dup3\n      add\n      mload\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x80\n      swap1\n      swap2\n      add\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5152:5181  TransactionSubmitted(txIndex) */\n      mload(0x40)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5173:5180  txIndex */\n      dup2\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5152:5181  TransactionSubmitted(txIndex) */\n      0xd0b5d9eac097410294ec9f2cee7cd185cf31ab46babf3dfdbeac8b222b03f2d1\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4901:5188  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4808:5188  function submitTransaction(address _to, uint256 _value, bytes memory _data) public onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_417\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5750:5754  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5749  getRoleAdmin */\n      tag_88\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_419\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5779:5783  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5785:5792  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5778  _revokeRole */\n      tag_275\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4320:4440  function setERC1155Address(address _erc1155Address) external onlyAdmin {... */\n    tag_213:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_423\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3593:3603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3580  hasRole */\n      tag_157\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_423:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3565:3621  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_424\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_424:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4401:4415  erc1155Address */\n      0x34\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4401:4433  erc1155Address = _erc1155Address */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4320:4440  function setERC1155Address(address _erc1155Address) external onlyAdmin {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5595:6090  function executeTransaction(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n    tag_221:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_428\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3593:3603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3580  hasRole */\n      tag_157\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_428:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3565:3621  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_429\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_429:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3710:3722  transactions */\n      0x39\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3710:3729  transactions.length */\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5667:5675  _txIndex */\n      dup2\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3699:3729  _txIndex < transactions.length */\n      dup2\n      lt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3691:3760  require(_txIndex < transactions.length, \"Transaction does not exist\") */\n      tag_432\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_242\n      jump\t// in\n    tag_432:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5689:5697  _txIndex */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3854  transactions */\n      0x39\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3855:3863  _txIndex */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3864  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_436\n      jumpi\n      tag_436\n      tag_246\n      jump\t// in\n    tag_436:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3873  transactions[_txIndex].executed */\n      0x03\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3864  transactions[_txIndex] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3842:3873  transactions[_txIndex].executed */\n      add\n      sload\n      0xff\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3841:3873  !transactions[_txIndex].executed */\n      iszero\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3833:3906  require(!transactions[_txIndex].executed, \"Transaction already executed\") */\n      tag_438\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_250\n      jump\t// in\n    tag_438:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5709:5740  Transaction storage transaction */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5743:5755  transactions */\n      0x39\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5756:5764  _txIndex */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5743:5765  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_442\n      jumpi\n      tag_442\n      tag_246\n      jump\t// in\n    tag_442:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5709:5765  Transaction storage transaction = transactions[_txIndex] */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5816:5837  requiredConfirmations */\n      sload(0x3a)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5784:5795  transaction */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5784:5812  transaction.numConfirmations */\n      0x04\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5784:5837  transaction.numConfirmations >= requiredConfirmations */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5776:5859  require(transaction.numConfirmations >= requiredConfirmations, \"Cannot execute tx\") */\n      tag_444\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13712:13714   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5776:5859  require(transaction.numConfirmations >= requiredConfirmations, \"Cannot execute tx\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13694:13715   */\n      mstore\n        /* \"#utility.yul\":13751:13753   */\n      0x11\n        /* \"#utility.yul\":13731:13749   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13724:13754   */\n      mstore\n      shl(0x7b, 0x086c2dcdcdee840caf0cac6eae8ca40e8f)\n        /* \"#utility.yul\":13770:13788   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13763:13810   */\n      mstore\n        /* \"#utility.yul\":13827:13845   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5776:5859  require(transaction.numConfirmations >= requiredConfirmations, \"Cannot execute tx\") */\n      tag_237\n        /* \"#utility.yul\":13510:13851   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5776:5859  require(transaction.numConfirmations >= requiredConfirmations, \"Cannot execute tx\") */\n    tag_444:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5870:5890  transaction.executed */\n      0x03\n      dup2\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5870:5897  transaction.executed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5893:5897  true */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5870:5897  transaction.executed = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5927:5941  transaction.to */\n      dup2\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5954:5971  transaction.value */\n      swap1\n      dup3\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5927:5990  transaction.to.call{value: transaction.value}(transaction.data) */\n      mload(0x40)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5870:5890  transaction.executed */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5927:5941  transaction.to */\n      and\n      swap2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5954:5971  transaction.value */\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5927:5990  transaction.to.call{value: transaction.value}(transaction.data) */\n      tag_447\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5973:5989  transaction.data */\n      0x02\n      dup7\n      add\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5927:5990  transaction.to.call{value: transaction.value}(transaction.data) */\n      tag_448\n      jump\t// in\n    tag_447:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_451\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_450)\n    tag_451:\n      0x60\n      swap2\n      pop\n    tag_450:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5908:5990  (bool success, ) = transaction.to.call{value: transaction.value}(transaction.data) */\n      pop\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6008:6015  success */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6000:6038  require(success, \"Transaction failed\") */\n      tag_452\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14858:14860   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6000:6038  require(success, \"Transaction failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14840:14861   */\n      mstore\n        /* \"#utility.yul\":14897:14899   */\n      0x12\n        /* \"#utility.yul\":14877:14895   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14870:14900   */\n      mstore\n      shl(0x72, 0x151c985b9cd858dd1a5bdb8819985a5b1959)\n        /* \"#utility.yul\":14916:14934   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14909:14957   */\n      mstore\n        /* \"#utility.yul\":14974:14992   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6000:6038  require(success, \"Transaction failed\") */\n      tag_237\n        /* \"#utility.yul\":14656:14998   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6000:6038  require(success, \"Transaction failed\") */\n    tag_452:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6054:6083  TransactionExecuted(_txIndex) */\n      mload(0x40)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6074:6082  _txIndex */\n      dup6\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":6054:6083  TransactionExecuted(_txIndex) */\n      0x15ed165a284872ea7017f03df402a0cadfbfab588320ffaf83f160c2f82781c7\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5699:6090  {... */\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3770:3771  _ */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3631:3632  _ */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":5595:6090  function executeTransaction(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4556:4676  function setStakingAddress(address _stakingAddress) external onlyAdmin {... */\n    tag_225:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_456\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3593:3603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3580  hasRole */\n      tag_157\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3573:3604  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_456:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":3565:3621  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_457\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_457:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4637:4651  stakingAddress */\n      0x36\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4637:4669  stakingAddress = _stakingAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":4556:4676  function setStakingAddress(address _stakingAddress) external onlyAdmin {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4225:4229  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4224  _checkRole */\n      tag_465\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      tag_468\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7445:7449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7451:7458  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7444  hasRole */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      jump\t// in\n    tag_468:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n      tag_469\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      tag_470\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n    tag_470:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap2\n      pop\n      pop\n      jump(tag_232)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_469:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap2\n      pop\n      pop\n      jump(tag_232)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7892:8280  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7970:7974  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      tag_475\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8067:8071  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8073:8080  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8066  hasRole */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      jump\t// in\n    tag_475:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8055:8274  if (hasRole(role, account)) {... */\n      iszero\n      tag_469\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8128  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8136  $._roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup8\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8216:8220  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8209:8220  return true */\n      swap2\n      pop\n      pop\n      jump(tag_232)\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n    tag_280:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      tag_480\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1764  _requirePaused */\n      tag_481\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      jump\t// in\n    tag_480:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2765:2770  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2770  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n    tag_483:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":661:693   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":643:694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_486\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_487\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_487:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_486:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_489\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_489:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":7700:7798  function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {} */\n    tag_291:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":1214:1240  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_292\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_494\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_495\n      swap2\n      dup2\n      add\n      swap1\n      tag_496\n      jump\t// in\n    tag_495:\n      0x01\n    tag_494:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_497\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":661:693   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":643:694   */\n      mstore\n        /* \"#utility.yul\":616:634   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_237\n        /* \"#utility.yul\":497:700   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_497:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_503\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1935:1960   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1908:1926   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_237\n        /* \"#utility.yul\":1789:1966   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_503:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_274\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_506\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_296:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_489\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_489\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_512\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_515\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_512\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_515:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      tag_489\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1172  __Pausable_init_unchained */\n      tag_518\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2100:2109  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_489\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15394:15396   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15376:15397   */\n      mstore\n        /* \"#utility.yul\":15433:15435   */\n      0x10\n        /* \"#utility.yul\":15413:15431   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15406:15436   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":15452:15470   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15445:15491   */\n      mstore\n        /* \"#utility.yul\":15508:15526   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_237\n        /* \"#utility.yul\":15192:15532   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n    tag_339:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_528\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_528:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2516  _paused */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2519:2523  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      tag_483\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_465:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      tag_533\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4477:4481  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4483:4490  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4476  hasRole */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      jump\t// in\n    tag_533:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10947:10979   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10929:10980   */\n      mstore\n        /* \"#utility.yul\":10996:11014   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10989:11023   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10902:10920   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      tag_237\n        /* \"#utility.yul\":10755:11029   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n    tag_481:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_489\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16018:16020   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16000:16021   */\n      mstore\n        /* \"#utility.yul\":16057:16059   */\n      0x14\n        /* \"#utility.yul\":16037:16055   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16030:16060   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":16076:16094   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16069:16119   */\n      mstore\n        /* \"#utility.yul\":16136:16154   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_237\n        /* \"#utility.yul\":15816:16160   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_506:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_546\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_547\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_546:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_548\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_274\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_550\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_548:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_292\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_553\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_512:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_489\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_518:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_559\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_512\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_559:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1270:1275  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1275  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_547:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_563\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":661:693   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":643:694   */\n      mstore\n        /* \"#utility.yul\":616:634   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_237\n        /* \"#utility.yul\":497:700   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_563:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_550:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_567\n      swap2\n      swap1\n      tag_568\n      jump\t// in\n    tag_567:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_571\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_570)\n    tag_571:\n      0x60\n      swap2\n      pop\n    tag_570:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_572\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_573\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_572:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_553:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_489\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_573:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_579\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_580\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_581\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_580:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_582)\n    tag_579:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_583\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_583:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_584\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":661:693   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":643:694   */\n      mstore\n        /* \"#utility.yul\":616:634   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_237\n        /* \"#utility.yul\":497:700   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_584:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_582:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_581:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_587\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_587:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:300   */\n    tag_55:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_599:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":705:878   */\n    tag_589:\n        /* \"#utility.yul\":773:793   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":822:853   */\n      dup2\n      and\n        /* \"#utility.yul\":812:854   */\n      dup2\n      eq\n        /* \"#utility.yul\":802:872   */\n      tag_604\n      jumpi\n        /* \"#utility.yul\":868:869   */\n      0x00\n        /* \"#utility.yul\":865:866   */\n      dup1\n        /* \"#utility.yul\":858:870   */\n      revert\n        /* \"#utility.yul\":802:872   */\n    tag_604:\n        /* \"#utility.yul\":705:878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":883:1069   */\n    tag_67:\n        /* \"#utility.yul\":942:948   */\n      0x00\n        /* \"#utility.yul\":995:997   */\n      0x20\n        /* \"#utility.yul\":983:992   */\n      dup3\n        /* \"#utility.yul\":974:981   */\n      dup5\n        /* \"#utility.yul\":970:993   */\n      sub\n        /* \"#utility.yul\":966:998   */\n      slt\n        /* \"#utility.yul\":963:1015   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":1011:1012   */\n      0x00\n        /* \"#utility.yul\":1008:1009   */\n      dup1\n        /* \"#utility.yul\":1001:1013   */\n      revert\n        /* \"#utility.yul\":963:1015   */\n    tag_606:\n        /* \"#utility.yul\":1034:1063   */\n      tag_582\n        /* \"#utility.yul\":1053:1062   */\n      dup3\n        /* \"#utility.yul\":1034:1063   */\n      tag_589\n      jump\t// in\n        /* \"#utility.yul\":1327:1553   */\n    tag_74:\n        /* \"#utility.yul\":1386:1392   */\n      0x00\n        /* \"#utility.yul\":1439:1441   */\n      0x20\n        /* \"#utility.yul\":1427:1436   */\n      dup3\n        /* \"#utility.yul\":1418:1425   */\n      dup5\n        /* \"#utility.yul\":1414:1437   */\n      sub\n        /* \"#utility.yul\":1410:1442   */\n      slt\n        /* \"#utility.yul\":1407:1459   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":1455:1456   */\n      0x00\n        /* \"#utility.yul\":1452:1453   */\n      dup1\n        /* \"#utility.yul\":1445:1457   */\n      revert\n        /* \"#utility.yul\":1407:1459   */\n    tag_610:\n      pop\n        /* \"#utility.yul\":1500:1523   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1327:1553   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1971:2271   */\n    tag_98:\n        /* \"#utility.yul\":2039:2045   */\n      0x00\n        /* \"#utility.yul\":2047:2053   */\n      dup1\n        /* \"#utility.yul\":2100:2102   */\n      0x40\n        /* \"#utility.yul\":2088:2097   */\n      dup4\n        /* \"#utility.yul\":2079:2086   */\n      dup6\n        /* \"#utility.yul\":2075:2098   */\n      sub\n        /* \"#utility.yul\":2071:2103   */\n      slt\n        /* \"#utility.yul\":2068:2120   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":2116:2117   */\n      0x00\n        /* \"#utility.yul\":2113:2114   */\n      dup1\n        /* \"#utility.yul\":2106:2118   */\n      revert\n        /* \"#utility.yul\":2068:2120   */\n    tag_615:\n        /* \"#utility.yul\":2161:2184   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2227:2265   */\n      tag_616\n        /* \"#utility.yul\":2261:2263   */\n      0x20\n        /* \"#utility.yul\":2246:2264   */\n      dup5\n      add\n        /* \"#utility.yul\":2227:2265   */\n      tag_589\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":2217:2265   */\n      swap1\n      pop\n        /* \"#utility.yul\":1971:2271   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2276:2403   */\n    tag_590:\n        /* \"#utility.yul\":2337:2347   */\n      0x4e487b71\n        /* \"#utility.yul\":2332:2335   */\n      0xe0\n        /* \"#utility.yul\":2328:2348   */\n      shl\n        /* \"#utility.yul\":2325:2326   */\n      0x00\n        /* \"#utility.yul\":2318:2349   */\n      mstore\n        /* \"#utility.yul\":2368:2372   */\n      0x41\n        /* \"#utility.yul\":2365:2366   */\n      0x04\n        /* \"#utility.yul\":2358:2373   */\n      mstore\n        /* \"#utility.yul\":2392:2396   */\n      0x24\n        /* \"#utility.yul\":2389:2390   */\n      0x00\n        /* \"#utility.yul\":2382:2397   */\n      revert\n        /* \"#utility.yul\":2408:3133   */\n    tag_591:\n        /* \"#utility.yul\":2450:2455   */\n      0x00\n        /* \"#utility.yul\":2503:2506   */\n      dup3\n        /* \"#utility.yul\":2496:2500   */\n      0x1f\n        /* \"#utility.yul\":2488:2494   */\n      dup4\n        /* \"#utility.yul\":2484:2501   */\n      add\n        /* \"#utility.yul\":2480:2507   */\n      slt\n        /* \"#utility.yul\":2470:2525   */\n      tag_619\n      jumpi\n        /* \"#utility.yul\":2521:2522   */\n      0x00\n        /* \"#utility.yul\":2518:2519   */\n      dup1\n        /* \"#utility.yul\":2511:2523   */\n      revert\n        /* \"#utility.yul\":2470:2525   */\n    tag_619:\n        /* \"#utility.yul\":2561:2567   */\n      dup2\n        /* \"#utility.yul\":2548:2568   */\n      calldataload\n        /* \"#utility.yul\":2591:2609   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2583:2589   */\n      dup2\n        /* \"#utility.yul\":2580:2610   */\n      gt\n        /* \"#utility.yul\":2577:2633   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":2613:2631   */\n      tag_621\n      tag_590\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":2662:2664   */\n      0x40\n        /* \"#utility.yul\":2656:2665   */\n      mload\n        /* \"#utility.yul\":2754:2756   */\n      0x1f\n        /* \"#utility.yul\":2716:2733   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2712:2743   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2745:2747   */\n      0x3f\n        /* \"#utility.yul\":2708:2748   */\n      add\n        /* \"#utility.yul\":2704:2758   */\n      and\n        /* \"#utility.yul\":2692:2759   */\n      dup2\n      add\n        /* \"#utility.yul\":2789:2807   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2774:2808   */\n      dup2\n      gt\n        /* \"#utility.yul\":2810:2832   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2771:2833   */\n      or\n        /* \"#utility.yul\":2768:2856   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":2836:2854   */\n      tag_623\n      tag_590\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":2872:2874   */\n      0x40\n        /* \"#utility.yul\":2865:2887   */\n      mstore\n        /* \"#utility.yul\":2896:2918   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":2937:2956   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":2958:2962   */\n      0x20\n        /* \"#utility.yul\":2933:2963   */\n      add\n        /* \"#utility.yul\":2930:2969   */\n      dup6\n      lt\n        /* \"#utility.yul\":2927:2986   */\n      iszero\n      tag_624\n      jumpi\n        /* \"#utility.yul\":2982:2983   */\n      0x00\n        /* \"#utility.yul\":2979:2980   */\n      dup1\n        /* \"#utility.yul\":2972:2984   */\n      revert\n        /* \"#utility.yul\":2927:2986   */\n    tag_624:\n        /* \"#utility.yul\":3046:3052   */\n      dup2\n        /* \"#utility.yul\":3039:3043   */\n      0x20\n        /* \"#utility.yul\":3031:3037   */\n      dup6\n        /* \"#utility.yul\":3027:3044   */\n      add\n        /* \"#utility.yul\":3020:3024   */\n      0x20\n        /* \"#utility.yul\":3012:3018   */\n      dup4\n        /* \"#utility.yul\":3008:3025   */\n      add\n        /* \"#utility.yul\":2995:3053   */\n      calldatacopy\n        /* \"#utility.yul\":3101:3102   */\n      0x00\n        /* \"#utility.yul\":3073:3092   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3094:3098   */\n      0x20\n        /* \"#utility.yul\":3069:3099   */\n      add\n        /* \"#utility.yul\":3062:3103   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3077:3083   */\n      swap4\n        /* \"#utility.yul\":2408:3133   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3138:3532   */\n    tag_113:\n        /* \"#utility.yul\":3215:3221   */\n      0x00\n        /* \"#utility.yul\":3223:3229   */\n      dup1\n        /* \"#utility.yul\":3276:3278   */\n      0x40\n        /* \"#utility.yul\":3264:3273   */\n      dup4\n        /* \"#utility.yul\":3255:3262   */\n      dup6\n        /* \"#utility.yul\":3251:3274   */\n      sub\n        /* \"#utility.yul\":3247:3279   */\n      slt\n        /* \"#utility.yul\":3244:3296   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":3292:3293   */\n      0x00\n        /* \"#utility.yul\":3289:3290   */\n      dup1\n        /* \"#utility.yul\":3282:3294   */\n      revert\n        /* \"#utility.yul\":3244:3296   */\n    tag_626:\n        /* \"#utility.yul\":3315:3344   */\n      tag_627\n        /* \"#utility.yul\":3334:3343   */\n      dup4\n        /* \"#utility.yul\":3315:3344   */\n      tag_589\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":3305:3344   */\n      swap2\n      pop\n        /* \"#utility.yul\":3395:3397   */\n      0x20\n        /* \"#utility.yul\":3384:3393   */\n      dup4\n        /* \"#utility.yul\":3380:3398   */\n      add\n        /* \"#utility.yul\":3367:3399   */\n      calldataload\n        /* \"#utility.yul\":3422:3440   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3414:3420   */\n      dup2\n        /* \"#utility.yul\":3411:3441   */\n      gt\n        /* \"#utility.yul\":3408:3458   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":3454:3455   */\n      0x00\n        /* \"#utility.yul\":3451:3452   */\n      dup1\n        /* \"#utility.yul\":3444:3456   */\n      revert\n        /* \"#utility.yul\":3408:3458   */\n    tag_628:\n        /* \"#utility.yul\":3477:3526   */\n      tag_629\n        /* \"#utility.yul\":3518:3525   */\n      dup6\n        /* \"#utility.yul\":3509:3515   */\n      dup3\n        /* \"#utility.yul\":3498:3507   */\n      dup7\n        /* \"#utility.yul\":3494:3516   */\n      add\n        /* \"#utility.yul\":3477:3526   */\n      tag_591\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":3467:3526   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3138:3532   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3537:4407   */\n    tag_126:\n        /* \"#utility.yul\":3668:3674   */\n      0x00\n        /* \"#utility.yul\":3676:3682   */\n      dup1\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup1\n        /* \"#utility.yul\":3700:3706   */\n      0x00\n        /* \"#utility.yul\":3708:3714   */\n      dup1\n        /* \"#utility.yul\":3716:3722   */\n      0x00\n        /* \"#utility.yul\":3724:3730   */\n      dup1\n        /* \"#utility.yul\":3732:3738   */\n      0x00\n        /* \"#utility.yul\":3785:3788   */\n      0x0120\n        /* \"#utility.yul\":3773:3782   */\n      dup11\n        /* \"#utility.yul\":3764:3771   */\n      dup13\n        /* \"#utility.yul\":3760:3783   */\n      sub\n        /* \"#utility.yul\":3756:3789   */\n      slt\n        /* \"#utility.yul\":3753:3806   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":3802:3803   */\n      0x00\n        /* \"#utility.yul\":3799:3800   */\n      dup1\n        /* \"#utility.yul\":3792:3804   */\n      revert\n        /* \"#utility.yul\":3753:3806   */\n    tag_631:\n        /* \"#utility.yul\":3825:3854   */\n      tag_632\n        /* \"#utility.yul\":3844:3853   */\n      dup11\n        /* \"#utility.yul\":3825:3854   */\n      tag_589\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":3815:3854   */\n      swap9\n      pop\n        /* \"#utility.yul\":3923:3925   */\n      0x20\n        /* \"#utility.yul\":3908:3926   */\n      dup11\n      add\n        /* \"#utility.yul\":3895:3927   */\n      calldataload\n      swap8\n      pop\n        /* \"#utility.yul\":4024:4026   */\n      0x40\n        /* \"#utility.yul\":4009:4027   */\n      dup11\n      add\n        /* \"#utility.yul\":3996:4028   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":4073:4111   */\n      tag_633\n        /* \"#utility.yul\":4107:4109   */\n      0x60\n        /* \"#utility.yul\":4092:4110   */\n      dup12\n      add\n        /* \"#utility.yul\":4073:4111   */\n      tag_589\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":4063:4111   */\n      swap6\n      pop\n        /* \"#utility.yul\":4130:4169   */\n      tag_634\n        /* \"#utility.yul\":4164:4167   */\n      0x80\n        /* \"#utility.yul\":4153:4162   */\n      dup12\n        /* \"#utility.yul\":4149:4168   */\n      add\n        /* \"#utility.yul\":4130:4169   */\n      tag_589\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":4120:4169   */\n      swap5\n      pop\n        /* \"#utility.yul\":4188:4227   */\n      tag_635\n        /* \"#utility.yul\":4222:4225   */\n      0xa0\n        /* \"#utility.yul\":4211:4220   */\n      dup12\n        /* \"#utility.yul\":4207:4226   */\n      add\n        /* \"#utility.yul\":4188:4227   */\n      tag_589\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":4178:4227   */\n      swap4\n      pop\n        /* \"#utility.yul\":4246:4285   */\n      tag_636\n        /* \"#utility.yul\":4280:4283   */\n      0xc0\n        /* \"#utility.yul\":4269:4278   */\n      dup12\n        /* \"#utility.yul\":4265:4284   */\n      add\n        /* \"#utility.yul\":4246:4285   */\n      tag_589\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":4236:4285   */\n      swap3\n      pop\n        /* \"#utility.yul\":4304:4343   */\n      tag_637\n        /* \"#utility.yul\":4338:4341   */\n      0xe0\n        /* \"#utility.yul\":4327:4336   */\n      dup12\n        /* \"#utility.yul\":4323:4342   */\n      add\n        /* \"#utility.yul\":4304:4343   */\n      tag_589\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":4294:4343   */\n      swap2\n      pop\n        /* \"#utility.yul\":4362:4401   */\n      tag_638\n        /* \"#utility.yul\":4396:4399   */\n      0x0100\n        /* \"#utility.yul\":4385:4394   */\n      dup12\n        /* \"#utility.yul\":4381:4400   */\n      add\n        /* \"#utility.yul\":4362:4401   */\n      tag_589\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":4352:4401   */\n      swap1\n      pop\n        /* \"#utility.yul\":3537:4407   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      jump\t// out\n        /* \"#utility.yul\":4899:5187   */\n    tag_592:\n        /* \"#utility.yul\":4940:4943   */\n      0x00\n        /* \"#utility.yul\":4978:4983   */\n      dup2\n        /* \"#utility.yul\":4972:4984   */\n      mload\n        /* \"#utility.yul\":5005:5011   */\n      dup1\n        /* \"#utility.yul\":5000:5003   */\n      dup5\n        /* \"#utility.yul\":4993:5012   */\n      mstore\n        /* \"#utility.yul\":5061:5067   */\n      dup1\n        /* \"#utility.yul\":5054:5058   */\n      0x20\n        /* \"#utility.yul\":5047:5052   */\n      dup5\n        /* \"#utility.yul\":5043:5059   */\n      add\n        /* \"#utility.yul\":5036:5040   */\n      0x20\n        /* \"#utility.yul\":5031:5034   */\n      dup7\n        /* \"#utility.yul\":5027:5041   */\n      add\n        /* \"#utility.yul\":5021:5068   */\n      mcopy\n        /* \"#utility.yul\":5113:5114   */\n      0x00\n        /* \"#utility.yul\":5106:5110   */\n      0x20\n        /* \"#utility.yul\":5097:5103   */\n      dup3\n        /* \"#utility.yul\":5092:5095   */\n      dup7\n        /* \"#utility.yul\":5088:5104   */\n      add\n        /* \"#utility.yul\":5084:5111   */\n      add\n        /* \"#utility.yul\":5077:5115   */\n      mstore\n        /* \"#utility.yul\":5176:5180   */\n      0x20\n        /* \"#utility.yul\":5169:5171   */\n      0x1f\n        /* \"#utility.yul\":5165:5172   */\n      not\n        /* \"#utility.yul\":5160:5162   */\n      0x1f\n        /* \"#utility.yul\":5152:5158   */\n      dup4\n        /* \"#utility.yul\":5148:5163   */\n      add\n        /* \"#utility.yul\":5144:5173   */\n      and\n        /* \"#utility.yul\":5139:5142   */\n      dup6\n        /* \"#utility.yul\":5135:5174   */\n      add\n        /* \"#utility.yul\":5131:5181   */\n      add\n        /* \"#utility.yul\":5124:5181   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4899:5187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5192:5732   */\n    tag_172:\n        /* \"#utility.yul\":5474:5475   */\n      0x01\n        /* \"#utility.yul\":5470:5471   */\n      dup1\n        /* \"#utility.yul\":5465:5468   */\n      0xa0\n        /* \"#utility.yul\":5461:5472   */\n      shl\n        /* \"#utility.yul\":5457:5476   */\n      sub\n        /* \"#utility.yul\":5449:5455   */\n      dup7\n        /* \"#utility.yul\":5445:5477   */\n      and\n        /* \"#utility.yul\":5434:5443   */\n      dup2\n        /* \"#utility.yul\":5427:5478   */\n      mstore\n        /* \"#utility.yul\":5514:5520   */\n      dup5\n        /* \"#utility.yul\":5509:5511   */\n      0x20\n        /* \"#utility.yul\":5498:5507   */\n      dup3\n        /* \"#utility.yul\":5494:5512   */\n      add\n        /* \"#utility.yul\":5487:5521   */\n      mstore\n        /* \"#utility.yul\":5557:5560   */\n      0xa0\n        /* \"#utility.yul\":5552:5554   */\n      0x40\n        /* \"#utility.yul\":5541:5550   */\n      dup3\n        /* \"#utility.yul\":5537:5555   */\n      add\n        /* \"#utility.yul\":5530:5561   */\n      mstore\n        /* \"#utility.yul\":5408:5412   */\n      0x00\n        /* \"#utility.yul\":5578:5623   */\n      tag_645\n        /* \"#utility.yul\":5618:5621   */\n      0xa0\n        /* \"#utility.yul\":5607:5616   */\n      dup4\n        /* \"#utility.yul\":5603:5622   */\n      add\n        /* \"#utility.yul\":5595:5601   */\n      dup7\n        /* \"#utility.yul\":5578:5623   */\n      tag_592\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":5666:5680   */\n      swap4\n      iszero\n        /* \"#utility.yul\":5659:5681   */\n      iszero\n        /* \"#utility.yul\":5654:5656   */\n      0x60\n        /* \"#utility.yul\":5639:5657   */\n      dup4\n      add\n        /* \"#utility.yul\":5632:5682   */\n      mstore\n      pop\n        /* \"#utility.yul\":5713:5716   */\n      0x80\n        /* \"#utility.yul\":5698:5717   */\n      add\n        /* \"#utility.yul\":5691:5726   */\n      mstore\n        /* \"#utility.yul\":5570:5623   */\n      swap4\n        /* \"#utility.yul\":5192:5732   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5737:5956   */\n    tag_184:\n        /* \"#utility.yul\":5886:5888   */\n      0x20\n        /* \"#utility.yul\":5875:5884   */\n      dup2\n        /* \"#utility.yul\":5868:5889   */\n      mstore\n        /* \"#utility.yul\":5849:5853   */\n      0x00\n        /* \"#utility.yul\":5906:5950   */\n      tag_582\n        /* \"#utility.yul\":5946:5948   */\n      0x20\n        /* \"#utility.yul\":5935:5944   */\n      dup4\n        /* \"#utility.yul\":5931:5949   */\n      add\n        /* \"#utility.yul\":5923:5929   */\n      dup5\n        /* \"#utility.yul\":5906:5950   */\n      tag_592\n      jump\t// in\n        /* \"#utility.yul\":5961:6469   */\n    tag_200:\n        /* \"#utility.yul\":6047:6053   */\n      0x00\n        /* \"#utility.yul\":6055:6061   */\n      dup1\n        /* \"#utility.yul\":6063:6069   */\n      0x00\n        /* \"#utility.yul\":6116:6118   */\n      0x60\n        /* \"#utility.yul\":6104:6113   */\n      dup5\n        /* \"#utility.yul\":6095:6102   */\n      dup7\n        /* \"#utility.yul\":6091:6114   */\n      sub\n        /* \"#utility.yul\":6087:6119   */\n      slt\n        /* \"#utility.yul\":6084:6136   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":6132:6133   */\n      0x00\n        /* \"#utility.yul\":6129:6130   */\n      dup1\n        /* \"#utility.yul\":6122:6134   */\n      revert\n        /* \"#utility.yul\":6084:6136   */\n    tag_649:\n        /* \"#utility.yul\":6155:6184   */\n      tag_650\n        /* \"#utility.yul\":6174:6183   */\n      dup5\n        /* \"#utility.yul\":6155:6184   */\n      tag_589\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":6145:6184   */\n      swap3\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6238:6256   */\n      dup5\n      add\n        /* \"#utility.yul\":6225:6257   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":6332:6334   */\n      0x40\n        /* \"#utility.yul\":6317:6335   */\n      dup5\n      add\n        /* \"#utility.yul\":6304:6336   */\n      calldataload\n        /* \"#utility.yul\":6359:6377   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6348:6378   */\n      dup2\n      gt\n        /* \"#utility.yul\":6345:6395   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":6391:6392   */\n      0x00\n        /* \"#utility.yul\":6388:6389   */\n      dup1\n        /* \"#utility.yul\":6381:6393   */\n      revert\n        /* \"#utility.yul\":6345:6395   */\n    tag_651:\n        /* \"#utility.yul\":6414:6463   */\n      tag_652\n        /* \"#utility.yul\":6455:6462   */\n      dup7\n        /* \"#utility.yul\":6446:6452   */\n      dup3\n        /* \"#utility.yul\":6435:6444   */\n      dup8\n        /* \"#utility.yul\":6431:6453   */\n      add\n        /* \"#utility.yul\":6414:6463   */\n      tag_591\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":6404:6463   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5961:6469   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6474:6810   */\n    tag_238:\n        /* \"#utility.yul\":6676:6678   */\n      0x20\n        /* \"#utility.yul\":6658:6679   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6715:6717   */\n      0x0c\n        /* \"#utility.yul\":6695:6713   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6688:6718   */\n      mstore\n      shl(0xa1, 0x2737ba1030b71030b236b4b7)\n        /* \"#utility.yul\":6749:6751   */\n      0x40\n        /* \"#utility.yul\":6734:6752   */\n      dup3\n      add\n        /* \"#utility.yul\":6727:6769   */\n      mstore\n        /* \"#utility.yul\":6801:6803   */\n      0x60\n        /* \"#utility.yul\":6786:6804   */\n      add\n      swap1\n        /* \"#utility.yul\":6474:6810   */\n      jump\t// out\n        /* \"#utility.yul\":6815:7165   */\n    tag_242:\n        /* \"#utility.yul\":7017:7019   */\n      0x20\n        /* \"#utility.yul\":6999:7020   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7056:7058   */\n      0x1a\n        /* \"#utility.yul\":7036:7054   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7029:7059   */\n      mstore\n        /* \"#utility.yul\":7095:7123   */\n      0x5472616e73616374696f6e20646f6573206e6f74206578697374000000000000\n        /* \"#utility.yul\":7090:7092   */\n      0x40\n        /* \"#utility.yul\":7075:7093   */\n      dup3\n      add\n        /* \"#utility.yul\":7068:7124   */\n      mstore\n        /* \"#utility.yul\":7156:7158   */\n      0x60\n        /* \"#utility.yul\":7141:7159   */\n      add\n      swap1\n        /* \"#utility.yul\":6815:7165   */\n      jump\t// out\n        /* \"#utility.yul\":7170:7297   */\n    tag_246:\n        /* \"#utility.yul\":7231:7241   */\n      0x4e487b71\n        /* \"#utility.yul\":7226:7229   */\n      0xe0\n        /* \"#utility.yul\":7222:7242   */\n      shl\n        /* \"#utility.yul\":7219:7220   */\n      0x00\n        /* \"#utility.yul\":7212:7243   */\n      mstore\n        /* \"#utility.yul\":7262:7266   */\n      0x32\n        /* \"#utility.yul\":7259:7260   */\n      0x04\n        /* \"#utility.yul\":7252:7267   */\n      mstore\n        /* \"#utility.yul\":7286:7290   */\n      0x24\n        /* \"#utility.yul\":7283:7284   */\n      0x00\n        /* \"#utility.yul\":7276:7291   */\n      revert\n        /* \"#utility.yul\":7302:7654   */\n    tag_250:\n        /* \"#utility.yul\":7504:7506   */\n      0x20\n        /* \"#utility.yul\":7486:7507   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7543:7545   */\n      0x1c\n        /* \"#utility.yul\":7523:7541   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7516:7546   */\n      mstore\n        /* \"#utility.yul\":7582:7612   */\n      0x5472616e73616374696f6e20616c726561647920657865637574656400000000\n        /* \"#utility.yul\":7577:7579   */\n      0x40\n        /* \"#utility.yul\":7562:7580   */\n      dup3\n      add\n        /* \"#utility.yul\":7555:7613   */\n      mstore\n        /* \"#utility.yul\":7645:7647   */\n      0x60\n        /* \"#utility.yul\":7630:7648   */\n      add\n      swap1\n        /* \"#utility.yul\":7302:7654   */\n      jump\t// out\n        /* \"#utility.yul\":8013:8140   */\n    tag_593:\n        /* \"#utility.yul\":8074:8084   */\n      0x4e487b71\n        /* \"#utility.yul\":8069:8072   */\n      0xe0\n        /* \"#utility.yul\":8065:8085   */\n      shl\n        /* \"#utility.yul\":8062:8063   */\n      0x00\n        /* \"#utility.yul\":8055:8086   */\n      mstore\n        /* \"#utility.yul\":8105:8109   */\n      0x11\n        /* \"#utility.yul\":8102:8103   */\n      0x04\n        /* \"#utility.yul\":8095:8110   */\n      mstore\n        /* \"#utility.yul\":8129:8133   */\n      0x24\n        /* \"#utility.yul\":8126:8127   */\n      0x00\n        /* \"#utility.yul\":8119:8134   */\n      revert\n        /* \"#utility.yul\":8145:8273   */\n    tag_259:\n        /* \"#utility.yul\":8212:8221   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8233:8244   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8230:8267   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":8247:8265   */\n      tag_232\n      tag_593\n      jump\t// in\n        /* \"#utility.yul\":8868:9145   */\n    tag_330:\n        /* \"#utility.yul\":8935:8941   */\n      0x00\n        /* \"#utility.yul\":8988:8990   */\n      0x20\n        /* \"#utility.yul\":8976:8985   */\n      dup3\n        /* \"#utility.yul\":8967:8974   */\n      dup5\n        /* \"#utility.yul\":8963:8986   */\n      sub\n        /* \"#utility.yul\":8959:8991   */\n      slt\n        /* \"#utility.yul\":8956:9008   */\n      iszero\n      tag_665\n      jumpi\n        /* \"#utility.yul\":9004:9005   */\n      0x00\n        /* \"#utility.yul\":9001:9002   */\n      dup1\n        /* \"#utility.yul\":8994:9006   */\n      revert\n        /* \"#utility.yul\":8956:9008   */\n    tag_665:\n        /* \"#utility.yul\":9036:9045   */\n      dup2\n        /* \"#utility.yul\":9030:9046   */\n      mload\n        /* \"#utility.yul\":9089:9094   */\n      dup1\n        /* \"#utility.yul\":9082:9095   */\n      iszero\n        /* \"#utility.yul\":9075:9096   */\n      iszero\n        /* \"#utility.yul\":9068:9073   */\n      dup2\n        /* \"#utility.yul\":9065:9097   */\n      eq\n        /* \"#utility.yul\":9055:9115   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":9111:9112   */\n      0x00\n        /* \"#utility.yul\":9108:9109   */\n      dup1\n        /* \"#utility.yul\":9101:9113   */\n      revert\n        /* \"#utility.yul\":9500:9880   */\n    tag_355:\n        /* \"#utility.yul\":9579:9580   */\n      0x01\n        /* \"#utility.yul\":9575:9587   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9622:9634   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9643:9704   */\n      tag_669\n      jumpi\n        /* \"#utility.yul\":9697:9701   */\n      0x7f\n        /* \"#utility.yul\":9689:9695   */\n      dup3\n        /* \"#utility.yul\":9685:9702   */\n      and\n        /* \"#utility.yul\":9675:9702   */\n      swap2\n      pop\n        /* \"#utility.yul\":9643:9704   */\n    tag_669:\n        /* \"#utility.yul\":9750:9752   */\n      0x20\n        /* \"#utility.yul\":9742:9748   */\n      dup3\n        /* \"#utility.yul\":9739:9753   */\n      lt\n        /* \"#utility.yul\":9719:9737   */\n      dup2\n        /* \"#utility.yul\":9716:9754   */\n      sub\n        /* \"#utility.yul\":9713:9874   */\n      tag_670\n      jumpi\n        /* \"#utility.yul\":9796:9806   */\n      0x4e487b71\n        /* \"#utility.yul\":9791:9794   */\n      0xe0\n        /* \"#utility.yul\":9787:9807   */\n      shl\n        /* \"#utility.yul\":9784:9785   */\n      0x00\n        /* \"#utility.yul\":9777:9808   */\n      mstore\n        /* \"#utility.yul\":9831:9835   */\n      0x22\n        /* \"#utility.yul\":9828:9829   */\n      0x04\n        /* \"#utility.yul\":9821:9836   */\n      mstore\n        /* \"#utility.yul\":9859:9863   */\n      0x24\n        /* \"#utility.yul\":9856:9857   */\n      0x00\n        /* \"#utility.yul\":9849:9864   */\n      revert\n        /* \"#utility.yul\":9713:9874   */\n    tag_670:\n      pop\n        /* \"#utility.yul\":9500:9880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10230:10398   */\n    tag_368:\n        /* \"#utility.yul\":10303:10312   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10334:10343   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10351:10366   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10345:10367   */\n      dup5\n      eq\n        /* \"#utility.yul\":10331:10368   */\n      or\n        /* \"#utility.yul\":10321:10392   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":10372:10390   */\n      tag_232\n      tag_593\n      jump\t// in\n        /* \"#utility.yul\":10403:10620   */\n    tag_371:\n        /* \"#utility.yul\":10443:10444   */\n      0x00\n        /* \"#utility.yul\":10469:10470   */\n      dup3\n        /* \"#utility.yul\":10459:10591   */\n      tag_676\n      jumpi\n        /* \"#utility.yul\":10513:10523   */\n      0x4e487b71\n        /* \"#utility.yul\":10508:10511   */\n      0xe0\n        /* \"#utility.yul\":10504:10524   */\n      shl\n        /* \"#utility.yul\":10501:10502   */\n      0x00\n        /* \"#utility.yul\":10494:10525   */\n      mstore\n        /* \"#utility.yul\":10548:10552   */\n      0x12\n        /* \"#utility.yul\":10545:10546   */\n      0x04\n        /* \"#utility.yul\":10538:10553   */\n      mstore\n        /* \"#utility.yul\":10576:10580   */\n      0x24\n        /* \"#utility.yul\":10573:10574   */\n      0x00\n        /* \"#utility.yul\":10566:10581   */\n      revert\n        /* \"#utility.yul\":10459:10591   */\n    tag_676:\n      pop\n        /* \"#utility.yul\":10605:10614   */\n      div\n      swap1\n        /* \"#utility.yul\":10403:10620   */\n      jump\t// out\n        /* \"#utility.yul\":10625:10750   */\n    tag_373:\n        /* \"#utility.yul\":10690:10699   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10711:10721   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10708:10744   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":10724:10742   */\n      tag_232\n      tag_593\n      jump\t// in\n        /* \"#utility.yul\":11517:12034   */\n    tag_595:\n        /* \"#utility.yul\":11618:11620   */\n      0x1f\n        /* \"#utility.yul\":11613:11616   */\n      dup3\n        /* \"#utility.yul\":11610:11621   */\n      gt\n        /* \"#utility.yul\":11607:12028   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":11654:11659   */\n      dup1\n        /* \"#utility.yul\":11651:11652   */\n      0x00\n        /* \"#utility.yul\":11644:11660   */\n      mstore\n        /* \"#utility.yul\":11698:11702   */\n      0x20\n        /* \"#utility.yul\":11695:11696   */\n      0x00\n        /* \"#utility.yul\":11685:11703   */\n      keccak256\n        /* \"#utility.yul\":11768:11770   */\n      0x1f\n        /* \"#utility.yul\":11756:11766   */\n      dup5\n        /* \"#utility.yul\":11752:11771   */\n      add\n        /* \"#utility.yul\":11749:11750   */\n      0x05\n        /* \"#utility.yul\":11745:11772   */\n      shr\n        /* \"#utility.yul\":11739:11743   */\n      dup2\n        /* \"#utility.yul\":11735:11773   */\n      add\n        /* \"#utility.yul\":11804:11808   */\n      0x20\n        /* \"#utility.yul\":11792:11802   */\n      dup6\n        /* \"#utility.yul\":11789:11809   */\n      lt\n        /* \"#utility.yul\":11786:11833   */\n      iszero\n      tag_685\n      jumpi\n      pop\n        /* \"#utility.yul\":11827:11831   */\n      dup1\n        /* \"#utility.yul\":11786:11833   */\n    tag_685:\n        /* \"#utility.yul\":11882:11884   */\n      0x1f\n        /* \"#utility.yul\":11877:11880   */\n      dup5\n        /* \"#utility.yul\":11873:11885   */\n      add\n        /* \"#utility.yul\":11870:11871   */\n      0x05\n        /* \"#utility.yul\":11866:11886   */\n      shr\n        /* \"#utility.yul\":11860:11864   */\n      dup3\n        /* \"#utility.yul\":11856:11887   */\n      add\n        /* \"#utility.yul\":11846:11887   */\n      swap2\n      pop\n        /* \"#utility.yul\":11937:12018   */\n    tag_686:\n        /* \"#utility.yul\":11955:11957   */\n      dup2\n        /* \"#utility.yul\":11948:11953   */\n      dup2\n        /* \"#utility.yul\":11945:11958   */\n      lt\n        /* \"#utility.yul\":11937:12018   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":12014:12015   */\n      0x00\n        /* \"#utility.yul\":12000:12016   */\n      dup2\n      sstore\n        /* \"#utility.yul\":11981:11982   */\n      0x01\n        /* \"#utility.yul\":11970:11983   */\n      add\n        /* \"#utility.yul\":11937:12018   */\n      jump(tag_686)\n    tag_688:\n        /* \"#utility.yul\":11941:11944   */\n      pop\n      pop\n        /* \"#utility.yul\":11517:12034   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12210:13505   */\n    tag_416:\n        /* \"#utility.yul\":12334:12337   */\n      dup2\n        /* \"#utility.yul\":12328:12338   */\n      mload\n        /* \"#utility.yul\":12361:12379   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12353:12359   */\n      dup2\n        /* \"#utility.yul\":12350:12380   */\n      gt\n        /* \"#utility.yul\":12347:12403   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":12383:12401   */\n      tag_692\n      tag_590\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":12412:12508   */\n      tag_693\n        /* \"#utility.yul\":12501:12507   */\n      dup2\n        /* \"#utility.yul\":12461:12499   */\n      tag_694\n        /* \"#utility.yul\":12493:12497   */\n      dup5\n        /* \"#utility.yul\":12487:12498   */\n      sload\n        /* \"#utility.yul\":12461:12499   */\n      tag_355\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":12455:12459   */\n      dup5\n        /* \"#utility.yul\":12412:12508   */\n      tag_595\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":12557:12561   */\n      0x20\n        /* \"#utility.yul\":12588:12590   */\n      0x1f\n        /* \"#utility.yul\":12577:12591   */\n      dup3\n      gt\n        /* \"#utility.yul\":12605:12606   */\n      0x01\n        /* \"#utility.yul\":12600:13248   */\n      dup2\n      eq\n      tag_696\n      jumpi\n        /* \"#utility.yul\":13292:13293   */\n      0x00\n        /* \"#utility.yul\":13309:13315   */\n      dup4\n        /* \"#utility.yul\":13306:13395   */\n      iszero\n      tag_697\n      jumpi\n      pop\n        /* \"#utility.yul\":13361:13380   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":13355:13381   */\n      mload\n        /* \"#utility.yul\":13306:13395   */\n    tag_697:\n      not(0x00)\n        /* \"#utility.yul\":12167:12168   */\n      0x03\n        /* \"#utility.yul\":12163:12174   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":12159:12183   */\n      shr\n        /* \"#utility.yul\":12155:12184   */\n      not\n        /* \"#utility.yul\":12145:12185   */\n      and\n        /* \"#utility.yul\":12191:12192   */\n      0x01\n        /* \"#utility.yul\":12187:12198   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":12142:12199   */\n      or\n        /* \"#utility.yul\":13408:13489   */\n      dup5\n      sstore\n        /* \"#utility.yul\":12570:13499   */\n      jump(tag_688)\n        /* \"#utility.yul\":12600:13248   */\n    tag_696:\n        /* \"#utility.yul\":11464:11465   */\n      0x00\n        /* \"#utility.yul\":11457:11471   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":11501:11505   */\n      0x20\n        /* \"#utility.yul\":11488:11506   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":12636:12656   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":12753:12975   */\n    tag_700:\n        /* \"#utility.yul\":12767:12774   */\n      dup3\n        /* \"#utility.yul\":12764:12765   */\n      dup2\n        /* \"#utility.yul\":12761:12775   */\n      lt\n        /* \"#utility.yul\":12753:12975   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":12849:12868   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":12843:12869   */\n      mload\n        /* \"#utility.yul\":12828:12870   */\n      dup3\n      sstore\n        /* \"#utility.yul\":12956:12960   */\n      0x20\n        /* \"#utility.yul\":12941:12961   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":12909:12910   */\n      0x01\n        /* \"#utility.yul\":12897:12911   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":12783:12795   */\n      add\n        /* \"#utility.yul\":12753:12975   */\n      jump(tag_700)\n    tag_702:\n        /* \"#utility.yul\":12757:12760   */\n      pop\n        /* \"#utility.yul\":13003:13009   */\n      dup5\n        /* \"#utility.yul\":12994:13001   */\n      dup3\n        /* \"#utility.yul\":12991:13010   */\n      lt\n        /* \"#utility.yul\":12988:13189   */\n      iszero\n      tag_703\n      jumpi\n        /* \"#utility.yul\":13064:13083   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":13058:13084   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":13147:13148   */\n      0x03\n        /* \"#utility.yul\":13143:13157   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":13159:13162   */\n      0xf8\n        /* \"#utility.yul\":13139:13163   */\n      and\n        /* \"#utility.yul\":13135:13172   */\n      shr\n        /* \"#utility.yul\":13131:13173   */\n      not\n        /* \"#utility.yul\":13116:13174   */\n      and\n        /* \"#utility.yul\":13101:13175   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12988:13189   */\n    tag_703:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13235:13236   */\n      0x01\n        /* \"#utility.yul\":13219:13233   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":13215:13237   */\n      add\n        /* \"#utility.yul\":13202:13238   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":12210:13505   */\n      jump\t// out\n        /* \"#utility.yul\":13856:14651   */\n    tag_448:\n        /* \"#utility.yul\":13982:13985   */\n      0x00\n        /* \"#utility.yul\":14011:14012   */\n      dup1\n        /* \"#utility.yul\":14044:14050   */\n      dup4\n        /* \"#utility.yul\":14038:14051   */\n      sload\n        /* \"#utility.yul\":14074:14110   */\n      tag_706\n        /* \"#utility.yul\":14100:14109   */\n      dup2\n        /* \"#utility.yul\":14074:14110   */\n      tag_355\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":14141:14142   */\n      0x01\n        /* \"#utility.yul\":14126:14143   */\n      dup3\n      and\n        /* \"#utility.yul\":14152:14285   */\n      dup1\n      iszero\n      tag_708\n      jumpi\n        /* \"#utility.yul\":14299:14300   */\n      0x01\n        /* \"#utility.yul\":14294:14626   */\n      dup2\n      eq\n      tag_709\n      jumpi\n        /* \"#utility.yul\":14119:14626   */\n      jump(tag_707)\n        /* \"#utility.yul\":14152:14285   */\n    tag_708:\n      not(0xff)\n        /* \"#utility.yul\":14185:14209   */\n      dup4\n      and\n        /* \"#utility.yul\":14173:14210   */\n      dup7\n      mstore\n        /* \"#utility.yul\":14258:14272   */\n      dup2\n      iszero\n        /* \"#utility.yul\":14251:14273   */\n      iszero\n        /* \"#utility.yul\":14239:14274   */\n      dup3\n      mul\n        /* \"#utility.yul\":14230:14275   */\n      dup7\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":14152:14285   */\n      jump(tag_707)\n        /* \"#utility.yul\":14294:14626   */\n    tag_709:\n        /* \"#utility.yul\":14325:14331   */\n      dup7\n        /* \"#utility.yul\":14322:14323   */\n      0x00\n        /* \"#utility.yul\":14315:14332   */\n      mstore\n        /* \"#utility.yul\":14373:14377   */\n      0x20\n        /* \"#utility.yul\":14370:14371   */\n      0x00\n        /* \"#utility.yul\":14360:14378   */\n      keccak256\n        /* \"#utility.yul\":14400:14401   */\n      0x00\n        /* \"#utility.yul\":14414:14580   */\n    tag_710:\n        /* \"#utility.yul\":14428:14434   */\n      dup4\n        /* \"#utility.yul\":14425:14426   */\n      dup2\n        /* \"#utility.yul\":14422:14435   */\n      lt\n        /* \"#utility.yul\":14414:14580   */\n      iszero\n      tag_712\n      jumpi\n        /* \"#utility.yul\":14508:14522   */\n      dup2\n      sload\n        /* \"#utility.yul\":14495:14506   */\n      dup9\n      dup3\n      add\n        /* \"#utility.yul\":14488:14523   */\n      mstore\n        /* \"#utility.yul\":14564:14565   */\n      0x01\n        /* \"#utility.yul\":14551:14566   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":14450:14454   */\n      0x20\n        /* \"#utility.yul\":14443:14455   */\n      add\n        /* \"#utility.yul\":14414:14580   */\n      jump(tag_710)\n    tag_712:\n        /* \"#utility.yul\":14418:14421   */\n      pop\n      pop\n        /* \"#utility.yul\":14609:14615   */\n      dup2\n        /* \"#utility.yul\":14604:14607   */\n      dup7\n        /* \"#utility.yul\":14600:14616   */\n      add\n        /* \"#utility.yul\":14593:14616   */\n      swap4\n      pop\n        /* \"#utility.yul\":14119:14626   */\n    tag_707:\n      pop\n        /* \"#utility.yul\":14642:14645   */\n      swap2\n      swap6\n        /* \"#utility.yul\":13856:14651   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15003:15187   */\n    tag_496:\n        /* \"#utility.yul\":15073:15079   */\n      0x00\n        /* \"#utility.yul\":15126:15128   */\n      0x20\n        /* \"#utility.yul\":15114:15123   */\n      dup3\n        /* \"#utility.yul\":15105:15112   */\n      dup5\n        /* \"#utility.yul\":15101:15124   */\n      sub\n        /* \"#utility.yul\":15097:15129   */\n      slt\n        /* \"#utility.yul\":15094:15146   */\n      iszero\n      tag_715\n      jumpi\n        /* \"#utility.yul\":15142:15143   */\n      0x00\n        /* \"#utility.yul\":15139:15140   */\n      dup1\n        /* \"#utility.yul\":15132:15144   */\n      revert\n        /* \"#utility.yul\":15094:15146   */\n    tag_715:\n      pop\n        /* \"#utility.yul\":15165:15181   */\n      mload\n      swap2\n        /* \"#utility.yul\":15003:15187   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16165:16466   */\n    tag_568:\n        /* \"#utility.yul\":16294:16297   */\n      0x00\n        /* \"#utility.yul\":16332:16338   */\n      dup3\n        /* \"#utility.yul\":16326:16339   */\n      mload\n        /* \"#utility.yul\":16378:16384   */\n      dup1\n        /* \"#utility.yul\":16371:16375   */\n      0x20\n        /* \"#utility.yul\":16363:16369   */\n      dup6\n        /* \"#utility.yul\":16359:16376   */\n      add\n        /* \"#utility.yul\":16354:16357   */\n      dup5\n        /* \"#utility.yul\":16348:16385   */\n      mcopy\n        /* \"#utility.yul\":16440:16441   */\n      0x00\n        /* \"#utility.yul\":16404:16420   */\n      swap3\n      add\n        /* \"#utility.yul\":16429:16442   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":16404:16420   */\n      swap2\n        /* \"#utility.yul\":16165:16466   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c 65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f 02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n    data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n\n    auxdata: 0xa26469706673582212209751a2fb8d2b5b4f84396109cfd73e27b269854c039cf2e77b4c219a045d7b3364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2248": {
									"entryPoint": null,
									"id": 2248,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_584": {
									"entryPoint": 33,
									"id": 584,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:216:18",
										"nodeType": "YulBlock",
										"src": "0:216:18",
										"statements": [
											{
												"nativeSrc": "6:3:18",
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:18",
													"nodeType": "YulBlock",
													"src": "113:101:18",
													"statements": [
														{
															"nativeSrc": "123:26:18",
															"nodeType": "YulAssignment",
															"src": "123:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:18",
																		"nodeType": "YulLiteral",
																		"src": "146:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:18"
																},
																"nativeSrc": "131:18:18",
																"nodeType": "YulFunctionCall",
																"src": "131:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "196:2:18",
																								"nodeType": "YulLiteral",
																								"src": "196:2:18",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "200:1:18",
																								"nodeType": "YulLiteral",
																								"src": "200:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "192:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:18"
																						},
																						"nativeSrc": "192:10:18",
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "204:1:18",
																						"nodeType": "YulLiteral",
																						"src": "204:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "188:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:18"
																				},
																				"nativeSrc": "188:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:18"
																		},
																		"nativeSrc": "176:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:18"
																},
																"nativeSrc": "158:50:18",
																"nodeType": "YulFunctionCall",
																"src": "158:50:18"
															},
															"nativeSrc": "158:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:18",
														"nodeType": "YulTypedName",
														"src": "82:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:18",
														"nodeType": "YulTypedName",
														"src": "93:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:18",
														"nodeType": "YulTypedName",
														"src": "104:4:18",
														"type": ""
													}
												],
												"src": "14:200:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b60805161249d6100f95f395f81816118dc015281816119050152611a68015261249d5ff3fe608060405260043610610236575f3560e01c80638456cb5911610129578063c01a8c84116100a8578063d836fc6f1161006d578063d836fc6f146106cc578063e63ab1e9146106eb578063ee22610b1461070b578063f4e0d9ac1461072a578063f72c0d8b14610749575f80fd5b8063c01a8c841461063b578063c63a6ad21461065a578063c64274741461066f578063d547741f1461068e578063d7b4be24146106ad575f80fd5b80639ace38c2116100ee5780639ace38c214610588578063a217fddf146105b8578063a5ce413b146105cb578063ad3cb1cc146105df578063b001f6181461061c575f80fd5b80638456cb59146104f85780638a2ade581461050c57806391d148541461052b578063965afa891461054a5780639a03d9a314610569575f80fd5b80633f4ba83a116101b5578063634474711161017a578063634474711461044c5780637547c7a31461046b57806375b238fc1461048a57806380f59a65146104aa57806382e717f7146104e3575f80fd5b80633f4ba83a146103dc57806341bec0d2146103f05780634f1ef2861461040f57806352d1902d146104225780635c975abb14610436575f80fd5b80632352a864116101fb5780632352a86414610333578063248a9ca314610352578063276184ae1461037f5780632f2ff15d1461039e57806336568abe146103bd575f80fd5b806301ffc9a714610241578063051420021461027557806316934fc4146102ac57806320ea8d86146102f35780632131c68c14610314575f80fd5b3661023d57005b5f80fd5b34801561024c575f80fd5b5061026061025b366004611ded565b61077c565b60405190151581526020015b60405180910390f35b348015610280575f80fd5b50603454610294906001600160a01b031681565b6040516001600160a01b03909116815260200161026c565b3480156102b7575f80fd5b506102de6102c6366004611e2f565b603b6020525f90815260409020805460019091015482565b6040805192835260208301919091520161026c565b3480156102fe575f80fd5b5061031261030d366004611e48565b6107b2565b005b34801561031f575f80fd5b50603554610294906001600160a01b031681565b34801561033e575f80fd5b50603354610294906001600160a01b031681565b34801561035d575f80fd5b5061037161036c366004611e48565b610949565b60405190815260200161026c565b34801561038a575f80fd5b50603254610294906001600160a01b031681565b3480156103a9575f80fd5b506103126103b8366004611e5f565b610969565b3480156103c8575f80fd5b506103126103d7366004611e5f565b61098b565b3480156103e7575f80fd5b506103126109c3565b3480156103fb575f80fd5b5061031261040a366004611e2f565b6109e5565b61031261041d366004611f28565b610a3a565b34801561042d575f80fd5b50610371610a59565b348015610441575f80fd5b505f5460ff16610260565b348015610457575f80fd5b50610312610466366004611f73565b610a74565b348015610476575f80fd5b50610312610485366004611e48565b610c6b565b348015610495575f80fd5b506103715f8051602061244883398151915281565b3480156104b5575f80fd5b506102606104c4366004611e5f565b603860209081525f928352604080842090915290825290205460ff1681565b3480156104ee575f80fd5b50610371603a5481565b348015610503575f80fd5b50610312610d9e565b348015610517575f80fd5b50603754610294906001600160a01b031681565b348015610536575f80fd5b50610260610545366004611e5f565b610dbd565b348015610555575f80fd5b50610312610564366004611e2f565b610df3565b348015610574575f80fd5b50610312610583366004611e2f565b610e48565b348015610593575f80fd5b506105a76105a2366004611e48565b610e9d565b60405161026c959493929190612035565b3480156105c3575f80fd5b506103715f81565b3480156105d6575f80fd5b50610312610f72565b3480156105ea575f80fd5b5061060f604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161026c919061206f565b348015610627575f80fd5b50610312610636366004611e2f565b611154565b348015610646575f80fd5b50610312610655366004611e48565b6111a9565b348015610665575f80fd5b50610371603c5481565b34801561067a575f80fd5b50610312610689366004612081565b61133d565b348015610699575f80fd5b506103126106a8366004611e5f565b6114a1565b3480156106b8575f80fd5b50603654610294906001600160a01b031681565b3480156106d7575f80fd5b506103126106e6366004611e2f565b6114bd565b3480156106f6575f80fd5b506103715f8051602061240883398151915281565b348015610716575f80fd5b50610312610725366004611e48565b611512565b348015610735575f80fd5b50610312610744366004611e2f565b611707565b348015610754575f80fd5b506103717f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b14806107ac57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6107c95f8051602061244883398151915233610dbd565b6107ee5760405162461bcd60e51b81526004016107e5906120d4565b60405180910390fd5b603954819081106108115760405162461bcd60e51b81526004016107e5906120fa565b816039818154811061082557610825612131565b5f91825260209091206003600590920201015460ff16156108585760405162461bcd60e51b81526004016107e590612145565b5f6039848154811061086c5761086c612131565b5f91825260208083208784526038825260408085203386529092529220546005909102909101915060ff166108e35760405162461bcd60e51b815260206004820152601960248201527f5472616e73616374696f6e206e6f7420636f6e6669726d65640000000000000060448201526064016107e5565b6001816004015f8282546108f79190612190565b90915550505f848152603860209081526040808320338085529252808320805460ff191690555186927fe5c8875c5e14471f806f15f740cd9fd54937d151e9dcf8ad3ba988d6a285e67e91a350505050565b5f9081525f80516020612428833981519152602052604090206001015490565b61097282610949565b61097b8161175c565b6109858383611766565b50505050565b6001600160a01b03811633146109b45760405163334bd91960e11b815260040160405180910390fd5b6109be8282611807565b505050565b5f805160206124088339815191526109da8161175c565b6109e2611880565b50565b6109fc5f8051602061244883398151915233610dbd565b610a185760405162461bcd60e51b81526004016107e5906120d4565b603280546001600160a01b0319166001600160a01b0392909216919091179055565b610a426118d1565b610a4b82611977565b610a5582826119a1565b5050565b5f610a62611a5d565b505f805160206123e883398151915290565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f81158015610ab95750825b90505f8267ffffffffffffffff166001148015610ad55750303b155b905081158015610ae3575080155b15610b015760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610b2b57845460ff60401b1916600160401b1785555b610b33611aa6565b610b3b611aae565b610b43611aa6565b610b4d5f8f611766565b50610b655f805160206124088339815191528f611766565b50610b7d5f805160206124488339815191528f611766565b50610ba87f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38f611766565b50603a8d9055603c8c9055603280546001600160a01b03199081166001600160a01b038e8116919091179092556033805482168d84161790556034805482168c84161790556035805482168b84161790556036805482168a8416179055603780549091169188169190911790558315610c5b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050505050565b610c73611abe565b6032546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b039091169081906323b872dd906064016020604051808303815f875af1158015610cc9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ced91906121a3565b610d315760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016107e5565b604080518082018252838152426020808301828152335f818152603b845286902094518555905160019094019390935583518681529081019190915290917fdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc910160405180910390a25050565b5f80516020612408833981519152610db58161175c565b6109e2611b03565b5f9182525f80516020612428833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610e0a5f8051602061244883398151915233610dbd565b610e265760405162461bcd60e51b81526004016107e5906120d4565b603580546001600160a01b0319166001600160a01b0392909216919091179055565b610e5f5f8051602061244883398151915233610dbd565b610e7b5760405162461bcd60e51b81526004016107e5906120d4565b603380546001600160a01b0319166001600160a01b0392909216919091179055565b60398181548110610eac575f80fd5b5f9182526020909120600590910201805460018201546002830180546001600160a01b039093169450909291610ee1906121c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0d906121c2565b8015610f585780601f10610f2f57610100808354040283529160200191610f58565b820191905f5260205f20905b815481529060010190602001808311610f3b57829003601f168201915b505050506003830154600490930154919260ff1691905085565b610f7a611abe565b335f908152603b60209081526040918290208251808401909352805480845260019091015491830191909152610fe55760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81cdd185ad95960821b60448201526064016107e5565b5f816020015142610ff69190612190565b90505f6301e1338082603c54855f015161101091906121fa565b61101a91906121fa565b6110249190612211565b60325484519192506001600160a01b031690819063a9059cbb90339061104b908690612230565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015611093573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110b791906121a3565b6110fb5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016107e5565b335f818152603b6020908152604080832083815560010192909255865182519081529081018590527f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336910160405180910390a250505050565b61116b5f8051602061244883398151915233610dbd565b6111875760405162461bcd60e51b81526004016107e5906120d4565b603780546001600160a01b0319166001600160a01b0392909216919091179055565b6111c05f8051602061244883398151915233610dbd565b6111dc5760405162461bcd60e51b81526004016107e5906120d4565b603954819081106111ff5760405162461bcd60e51b81526004016107e5906120fa565b816039818154811061121357611213612131565b5f91825260209091206003600590920201015460ff16156112465760405162461bcd60e51b81526004016107e590612145565b5f838152603860209081526040808320338452909152902054839060ff16156112b15760405162461bcd60e51b815260206004820152601d60248201527f5472616e73616374696f6e20616c726561647920636f6e6669726d656400000060448201526064016107e5565b5f603985815481106112c5576112c5612131565b905f5260205f20906005020190506001816004015f8282546112e79190612230565b90915550505f858152603860209081526040808320338085529252808320805460ff191660011790555187927ff8a17c9136a3ae33364fac05eb088a3cbafee10c1889c88593e20ee2d8e4eb8891a35050505050565b6113545f8051602061244883398151915233610dbd565b6113705760405162461bcd60e51b81526004016107e5906120d4565b603980546040805160a0810182526001600160a01b038781168252602082018781529282018681525f60608401819052608084018190526001860187559590955281517fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d36005860290810180546001600160a01b0319169290931691909117825592517fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d484015593519293909290917fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d5019061144c908261228e565b50606082015160038201805460ff191691151591909117905560809091015160049091015560405181907fd0b5d9eac097410294ec9f2cee7cd185cf31ab46babf3dfdbeac8b222b03f2d1905f90a250505050565b6114aa82610949565b6114b38161175c565b6109858383611807565b6114d45f8051602061244883398151915233610dbd565b6114f05760405162461bcd60e51b81526004016107e5906120d4565b603480546001600160a01b0319166001600160a01b0392909216919091179055565b6115295f8051602061244883398151915233610dbd565b6115455760405162461bcd60e51b81526004016107e5906120d4565b603954819081106115685760405162461bcd60e51b81526004016107e5906120fa565b816039818154811061157c5761157c612131565b5f91825260209091206003600590920201015460ff16156115af5760405162461bcd60e51b81526004016107e590612145565b5f603984815481106115c3576115c3612131565b905f5260205f2090600502019050603a548160040154101561161b5760405162461bcd60e51b8152602060048201526011602482015270086c2dcdcdee840caf0cac6eae8ca40e8f607b1b60448201526064016107e5565b60038101805460ff191660019081179091558154908201546040515f926001600160a01b03169190611651906002860190612349565b5f6040518083038185875af1925050503d805f811461168b576040519150601f19603f3d011682016040523d82523d5f602084013e611690565b606091505b50509050806116d65760405162461bcd60e51b8152602060048201526012602482015271151c985b9cd858dd1a5bdb8819985a5b195960721b60448201526064016107e5565b60405185907f15ed165a284872ea7017f03df402a0cadfbfab588320ffaf83f160c2f82781c7905f90a25050505050565b61171e5f8051602061244883398151915233610dbd565b61173a5760405162461bcd60e51b81526004016107e5906120d4565b603680546001600160a01b0319166001600160a01b0392909216919091179055565b6109e28133611b3f565b5f5f8051602061242883398151915261177f8484610dbd565b6117fe575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556117b43390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506107ac565b5f9150506107ac565b5f5f805160206124288339815191526118208484610dbd565b156117fe575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506107ac565b611888611b78565b5f805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061195757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661194b5f805160206123e8833981519152546001600160a01b031690565b6001600160a01b031614155b156119755760405163703e46dd60e11b815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3610a558161175c565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156119fb575060408051601f3d908101601f191682019092526119f8918101906123ba565b60015b611a2357604051634c9c8ce360e01b81526001600160a01b03831660048201526024016107e5565b5f805160206123e88339815191528114611a5357604051632a87526960e21b8152600481018290526024016107e5565b6109be8383611bc0565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146119755760405163703e46dd60e11b815260040160405180910390fd5b611975611c15565b611ab6611c15565b611975611c5e565b5f5460ff16156119755760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107e5565b611b0b611abe565b5f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118b43390565b611b498282610dbd565b610a555760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016107e5565b5f5460ff166119755760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107e5565b611bc982611c71565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611c0d576109be8282611cd4565b610a55611d46565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661197557604051631afcd79f60e31b815260040160405180910390fd5b611c66611c15565b5f805460ff19169055565b806001600160a01b03163b5f03611ca657604051634c9c8ce360e01b81526001600160a01b03821660048201526024016107e5565b5f805160206123e883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051611cf091906123d1565b5f60405180830381855af49150503d805f8114611d28576040519150601f19603f3d011682016040523d82523d5f602084013e611d2d565b606091505b5091509150611d3d858383611d65565b95945050505050565b34156119755760405163b398979f60e01b815260040160405180910390fd5b606082611d7a57611d7582611dc4565b611dbd565b8151158015611d9157506001600160a01b0384163b155b15611dba57604051639996b31560e01b81526001600160a01b03851660048201526024016107e5565b50805b9392505050565b805115611dd45780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215611dfd575f80fd5b81356001600160e01b031981168114611dbd575f80fd5b80356001600160a01b0381168114611e2a575f80fd5b919050565b5f60208284031215611e3f575f80fd5b611dbd82611e14565b5f60208284031215611e58575f80fd5b5035919050565b5f8060408385031215611e70575f80fd5b82359150611e8060208401611e14565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611eac575f80fd5b813567ffffffffffffffff811115611ec657611ec6611e89565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611ef557611ef5611e89565b604052818152838201602001851015611f0c575f80fd5b816020850160208301375f918101602001919091529392505050565b5f8060408385031215611f39575f80fd5b611f4283611e14565b9150602083013567ffffffffffffffff811115611f5d575f80fd5b611f6985828601611e9d565b9150509250929050565b5f805f805f805f805f6101208a8c031215611f8c575f80fd5b611f958a611e14565b985060208a0135975060408a01359650611fb160608b01611e14565b9550611fbf60808b01611e14565b9450611fcd60a08b01611e14565b9350611fdb60c08b01611e14565b9250611fe960e08b01611e14565b9150611ff86101008b01611e14565b90509295985092959850929598565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60018060a01b038616815284602082015260a060408201525f61205b60a0830186612007565b931515606083015250608001529392505050565b602081525f611dbd6020830184612007565b5f805f60608486031215612093575f80fd5b61209c84611e14565b925060208401359150604084013567ffffffffffffffff8111156120be575f80fd5b6120ca86828701611e9d565b9150509250925092565b6020808252600c908201526b2737ba1030b71030b236b4b760a11b604082015260600190565b6020808252601a908201527f5472616e73616374696f6e20646f6573206e6f74206578697374000000000000604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b6020808252601c908201527f5472616e73616374696f6e20616c726561647920657865637574656400000000604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b818103818111156107ac576107ac61217c565b5f602082840312156121b3575f80fd5b81518015158114611dbd575f80fd5b600181811c908216806121d657607f821691505b6020821081036121f457634e487b7160e01b5f52602260045260245ffd5b50919050565b80820281158282048414176107ac576107ac61217c565b5f8261222b57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156107ac576107ac61217c565b601f8211156109be57805f5260205f20601f840160051c810160208510156122685750805b601f840160051c820191505b81811015612287575f8155600101612274565b5050505050565b815167ffffffffffffffff8111156122a8576122a8611e89565b6122bc816122b684546121c2565b84612243565b6020601f8211600181146122ee575f83156122d75750848201515b5f19600385901b1c1916600184901b178455612287565b5f84815260208120601f198516915b8281101561231d57878501518255602094850194600190920191016122fd565b508482101561233a57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f808354612356816121c2565b60018216801561236d5760018114612382576123af565b60ff19831686528115158202860193506123af565b865f5260205f205f5b838110156123a75781548882015260019091019060200161238b565b505081860193505b509195945050505050565b5f602082840312156123ca575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a26469706673582212209751a2fb8d2b5b4f84396109cfd73e27b269854c039cf2e77b4c219a045d7b3364736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x249D PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x18DC ADD MSTORE DUP2 DUP2 PUSH2 0x1905 ADD MSTORE PUSH2 0x1A68 ADD MSTORE PUSH2 0x249D PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x236 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x129 JUMPI DUP1 PUSH4 0xC01A8C84 GT PUSH2 0xA8 JUMPI DUP1 PUSH4 0xD836FC6F GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xD836FC6F EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xEE22610B EQ PUSH2 0x70B JUMPI DUP1 PUSH4 0xF4E0D9AC EQ PUSH2 0x72A JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x749 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC01A8C84 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0xC63A6AD2 EQ PUSH2 0x65A JUMPI DUP1 PUSH4 0xC6427474 EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xD7B4BE24 EQ PUSH2 0x6AD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9ACE38C2 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x9ACE38C2 EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xB001F618 EQ PUSH2 0x61C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x8A2ADE58 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0x965AFA89 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x9A03D9A3 EQ PUSH2 0x569 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x63447471 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x63447471 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x80F59A65 EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x82E717F7 EQ PUSH2 0x4E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x41BEC0D2 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x436 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2352A864 GT PUSH2 0x1FB JUMPI DUP1 PUSH4 0x2352A864 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x276184AE EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x5142002 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x20EA8D86 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x2131C68C EQ PUSH2 0x314 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x23D JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x34 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x3B PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x32 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x9C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x312 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH2 0xA59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x260 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x457 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x466 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x4C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x38 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH1 0x3A SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0xD9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x517 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x37 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x536 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x545 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0xDBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x564 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0xDF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x583 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0xE48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH2 0x5A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0xF72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x206F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x636 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x1154 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x655 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x11A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x665 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH1 0x3C SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x689 CALLDATASIZE PUSH1 0x4 PUSH2 0x2081 JUMP JUMPDEST PUSH2 0x133D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x699 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x6A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x14A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x36 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x14BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2408 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x716 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x725 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x1512 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x735 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x744 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x1707 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7AC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C9 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x39 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20FA JUMP JUMPDEST DUP2 PUSH1 0x39 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x825 JUMPI PUSH2 0x825 PUSH2 0x2131 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x2145 JUMP JUMPDEST PUSH0 PUSH1 0x39 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x86C JUMPI PUSH2 0x86C PUSH2 0x2131 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x38 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH1 0xFF AND PUSH2 0x8E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206E6F7420636F6E6669726D656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP5 DUP2 MSTORE PUSH1 0x38 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP7 SWAP3 PUSH32 0xE5C8875C5E14471F806F15F740CD9FD54937D151E9DCF8AD3BA988D6A285E67E SWAP2 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2428 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x972 DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x97B DUP2 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x985 DUP4 DUP4 PUSH2 0x1766 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BE DUP3 DUP3 PUSH2 0x1807 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2408 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9DA DUP2 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0x1880 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9FC PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA42 PUSH2 0x18D1 JUMP JUMPDEST PUSH2 0xA4B DUP3 PUSH2 0x1977 JUMP JUMPDEST PUSH2 0xA55 DUP3 DUP3 PUSH2 0x19A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA62 PUSH2 0x1A5D JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xAB9 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xAD5 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAE3 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB01 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xB2B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xB33 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0xB3B PUSH2 0x1AAE JUMP JUMPDEST PUSH2 0xB43 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0xB4D PUSH0 DUP16 PUSH2 0x1766 JUMP JUMPDEST POP PUSH2 0xB65 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2408 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP16 PUSH2 0x1766 JUMP JUMPDEST POP PUSH2 0xB7D PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP16 PUSH2 0x1766 JUMP JUMPDEST POP PUSH2 0xBA8 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP16 PUSH2 0x1766 JUMP JUMPDEST POP PUSH1 0x3A DUP14 SWAP1 SSTORE PUSH1 0x3C DUP13 SWAP1 SSTORE PUSH1 0x32 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x33 DUP1 SLOAD DUP3 AND DUP14 DUP5 AND OR SWAP1 SSTORE PUSH1 0x34 DUP1 SLOAD DUP3 AND DUP13 DUP5 AND OR SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP3 AND DUP12 DUP5 AND OR SWAP1 SSTORE PUSH1 0x36 DUP1 SLOAD DUP3 AND DUP11 DUP5 AND OR SWAP1 SSTORE PUSH1 0x37 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xC5B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC73 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3B DUP5 MSTORE DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 PUSH32 0xDD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2408 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDB5 DUP2 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0x1B03 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2428 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE0A PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0xE26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x35 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE5F PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0xE7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x39 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP2 PUSH2 0xEE1 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF0D SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF58 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF2F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF58 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF3B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0xFF AND SWAP2 SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xF7A PUSH2 0x1ABE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D1BDAD95B9CC81CDD185AD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E13380 DUP3 PUSH1 0x3C SLOAD DUP6 PUSH0 ADD MLOAD PUSH2 0x1010 SWAP2 SWAP1 PUSH2 0x21FA JUMP JUMPDEST PUSH2 0x101A SWAP2 SWAP1 PUSH2 0x21FA JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x32 SLOAD DUP5 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 PUSH2 0x104B SWAP1 DUP7 SWAP1 PUSH2 0x2230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1093 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B7 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP7 MLOAD DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x116B PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x1187 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x37 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x11C0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x39 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x11FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20FA JUMP JUMPDEST DUP2 PUSH1 0x39 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1213 JUMPI PUSH2 0x1213 PUSH2 0x2131 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1246 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x2145 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x38 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x12B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20616C726561647920636F6E6669726D6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH0 PUSH1 0x39 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x12C5 JUMPI PUSH2 0x12C5 PUSH2 0x2131 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12E7 SWAP2 SWAP1 PUSH2 0x2230 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP6 DUP2 MSTORE PUSH1 0x38 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP8 SWAP3 PUSH32 0xF8A17C9136A3AE33364FAC05EB088A3CBAFEE10C1889C88593E20EE2D8E4EB88 SWAP2 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1354 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x1370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x39 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 DUP2 MSTORE SWAP3 DUP3 ADD DUP7 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 DUP7 ADD DUP8 SSTORE SWAP6 SWAP1 SWAP6 MSTORE DUP2 MLOAD PUSH32 0xDC16FEF70F8D5DDBC01EE3D903D1E69C18A3C7BE080EB86A81E0578814EE58D3 PUSH1 0x5 DUP7 MUL SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP3 MLOAD PUSH32 0xDC16FEF70F8D5DDBC01EE3D903D1E69C18A3C7BE080EB86A81E0578814EE58D4 DUP5 ADD SSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH32 0xDC16FEF70F8D5DDBC01EE3D903D1E69C18A3C7BE080EB86A81E0578814EE58D5 ADD SWAP1 PUSH2 0x144C SWAP1 DUP3 PUSH2 0x228E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xD0B5D9EAC097410294EC9F2CEE7CD185CF31AB46BABF3DFDBEAC8B222B03F2D1 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x14AA DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x14B3 DUP2 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x985 DUP4 DUP4 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0x14D4 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x14F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x34 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1529 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x1545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x39 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x1568 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20FA JUMP JUMPDEST DUP2 PUSH1 0x39 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x157C JUMPI PUSH2 0x157C PUSH2 0x2131 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x2145 JUMP JUMPDEST PUSH0 PUSH1 0x39 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x15C3 JUMPI PUSH2 0x15C3 PUSH2 0x2131 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x3A SLOAD DUP2 PUSH1 0x4 ADD SLOAD LT ISZERO PUSH2 0x161B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x86C2DCDCDEE840CAF0CAC6EAE8CA40E8F PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1651 SWAP1 PUSH1 0x2 DUP7 ADD SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x168B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x16D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C985B9CD858DD1A5BDB8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 SWAP1 PUSH32 0x15ED165A284872EA7017F03DF402A0CADFBFAB588320FFAF83F160C2F82781C7 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x171E PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x173A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x36 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9E2 DUP2 CALLER PUSH2 0x1B3F JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2428 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x177F DUP5 DUP5 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x17FE JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x17B4 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x7AC JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x7AC JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2428 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1820 DUP5 DUP5 PUSH2 0xDBD JUMP JUMPDEST ISZERO PUSH2 0x17FE JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x1888 PUSH2 0x1B78 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1957 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x194B PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0xA55 DUP2 PUSH2 0x175C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19FB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x19F8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x23BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1A53 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x9BE DUP4 DUP4 PUSH2 0x1BC0 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1975 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x1AB6 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x1975 PUSH2 0x1C5E JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x1B0B PUSH2 0x1ABE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18B4 CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1B49 DUP3 DUP3 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x1BC9 DUP3 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1C0D JUMPI PUSH2 0x9BE DUP3 DUP3 PUSH2 0x1CD4 JUMP JUMPDEST PUSH2 0xA55 PUSH2 0x1D46 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C66 PUSH2 0x1C15 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1CA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CF0 SWAP2 SWAP1 PUSH2 0x23D1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1D28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1D3D DUP6 DUP4 DUP4 PUSH2 0x1D65 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1D7A JUMPI PUSH2 0x1D75 DUP3 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0x1DBD JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1D91 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1DBA JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7E5 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1DD4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DFD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1DBD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E2A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DBD DUP3 PUSH2 0x1E14 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E70 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1E80 PUSH1 0x20 DUP5 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EAC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EC6 JUMPI PUSH2 0x1EC6 PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1EF5 JUMPI PUSH2 0x1EF5 PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x1F0C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F39 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F42 DUP4 PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F5D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F69 DUP6 DUP3 DUP7 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x1F8C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F95 DUP11 PUSH2 0x1E14 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH2 0x1FB1 PUSH1 0x60 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP6 POP PUSH2 0x1FBF PUSH1 0x80 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP5 POP PUSH2 0x1FCD PUSH1 0xA0 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FDB PUSH1 0xC0 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FE9 PUSH1 0xE0 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF8 PUSH2 0x100 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x205B PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2007 JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1DBD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2007 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2093 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x209C DUP5 PUSH2 0x1E14 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20CA DUP7 DUP3 DUP8 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x2737BA1030B71030B236B4B7 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20646F6573206E6F74206578697374000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20616C726561647920657865637574656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x217C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DBD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x21D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21F4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x217C JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x222B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x217C JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9BE JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2268 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2287 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2274 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22A8 JUMPI PUSH2 0x22A8 PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0x22BC DUP2 PUSH2 0x22B6 DUP5 SLOAD PUSH2 0x21C2 JUMP JUMPDEST DUP5 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22EE JUMPI PUSH0 DUP4 ISZERO PUSH2 0x22D7 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2287 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x231D JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x22FD JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x233A JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SLOAD PUSH2 0x2356 DUP2 PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0x1 DUP3 AND DUP1 ISZERO PUSH2 0x236D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2382 JUMPI PUSH2 0x23AF JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x23AF JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23A7 JUMPI DUP2 SLOAD DUP9 DUP3 ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x238B JUMP JUMPDEST POP POP DUP2 DUP7 ADD SWAP4 POP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800A4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA26469706673582212209751A2FB8D2B5B4F84396109 0xCF 0xD7 RETURNDATACOPY 0x27 0xB2 PUSH10 0x854C039CF2E77B4C219A DIV TSTORE PUSH28 0x3364736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "908:6927:17:-:0;;;1171:4:2;1128:48;;2539:53:17;;;;;;;;;-1:-1:-1;2563:22:17;:20;:22::i;:::-;908:6927;;7711:422:1;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:1;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:1;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:1;-1:-1:-1;;;;;8035:33:1;;;;;8087:29;;158:50:18;;;8087:29:1;;146:2:18;131:18;8087:29:1;;;;;;;7981:146;7760:373;7711:422::o;14:200:18:-;908:6927:17;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_2152": {
									"entryPoint": null,
									"id": 2152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_2147": {
									"entryPoint": null,
									"id": 2147,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADER_ROLE_2157": {
									"entryPoint": null,
									"id": 2157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_640": {
									"entryPoint": null,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2809": {
									"entryPoint": null,
									"id": 2809,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__AccessControl_init_63": {
									"entryPoint": 6822,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_830": {
									"entryPoint": 6830,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_840": {
									"entryPoint": 7262,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_670": {
									"entryPoint": null,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2805": {
									"entryPoint": 6519,
									"id": 2805,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_538": {
									"entryPoint": 7189,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1735": {
									"entryPoint": 7494,
									"id": 1735,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_746": {
									"entryPoint": 6749,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_730": {
									"entryPoint": 6353,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_129": {
									"entryPoint": 5980,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_150": {
									"entryPoint": 6975,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_315": {
									"entryPoint": 5990,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isInitializing_606": {
									"entryPoint": null,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1270": {
									"entryPoint": null,
									"id": 1270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_904": {
									"entryPoint": 6915,
									"id": 904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_877": {
									"entryPoint": 6846,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_888": {
									"entryPoint": 7032,
									"id": 888,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1998": {
									"entryPoint": 7620,
									"id": 1998,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_361": {
									"entryPoint": 6151,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setImplementation_1521": {
									"entryPoint": 7281,
									"id": 1521,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_920": {
									"entryPoint": 6272,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_797": {
									"entryPoint": 6561,
									"id": 797,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@confirmTransaction_2542": {
									"entryPoint": 4521,
									"id": 2542,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@daoAddress_2165": {
									"entryPoint": null,
									"id": 2165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc1155Address_2163": {
									"entryPoint": null,
									"id": 2163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20Address_2159": {
									"entryPoint": null,
									"id": 2159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc721Address_2161": {
									"entryPoint": null,
									"id": 2161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executeTransaction_2598": {
									"entryPoint": 5394,
									"id": 2598,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@farmingAddress_2169": {
									"entryPoint": null,
									"id": 2169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1918": {
									"entryPoint": 7380,
									"id": 1918,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2031": {
									"entryPoint": null,
									"id": 2031,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1494": {
									"entryPoint": null,
									"id": 1494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_171": {
									"entryPoint": 2377,
									"id": 171,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_190": {
									"entryPoint": 2409,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_116": {
									"entryPoint": 3517,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_2333": {
									"entryPoint": 2676,
									"id": 2333,
									"parameterSlots": 9,
									"returnSlots": 0
								},
								"@isConfirmed_2186": {
									"entryPoint": null,
									"id": 2186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pause_2785": {
									"entryPoint": 3486,
									"id": 2785,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_865": {
									"entryPoint": null,
									"id": 865,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_688": {
									"entryPoint": 2649,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_232": {
									"entryPoint": 2443,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@requiredConfirmations_2192": {
									"entryPoint": null,
									"id": 2192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokeConfirmation_2650": {
									"entryPoint": 1970,
									"id": 2650,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revokeRole_209": {
									"entryPoint": 5281,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDAOAddress_2440": {
									"entryPoint": 3571,
									"id": 2440,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setERC1155Address_2428": {
									"entryPoint": 5309,
									"id": 2428,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setERC20Address_2404": {
									"entryPoint": 2533,
									"id": 2404,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setERC721Address_2416": {
									"entryPoint": 3656,
									"id": 2416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFarmingAddress_2464": {
									"entryPoint": 4436,
									"id": 2464,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStakingAddress_2452": {
									"entryPoint": 5895,
									"id": 2452,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeTokens_2698": {
									"entryPoint": 3179,
									"id": 2698,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_2202": {
									"entryPoint": null,
									"id": 2202,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingAddress_2167": {
									"entryPoint": null,
									"id": 2167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingRate_2204": {
									"entryPoint": null,
									"id": 2204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@submitTransaction_2497": {
									"entryPoint": 4925,
									"id": 2497,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1327": {
									"entryPoint": null,
									"id": 1327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_91": {
									"entryPoint": 1916,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transactions_2190": {
									"entryPoint": 3741,
									"id": 2190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_2795": {
									"entryPoint": 2499,
									"id": 2795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstakeTokens_2775": {
									"entryPoint": 3954,
									"id": 2775,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1555": {
									"entryPoint": 7104,
									"id": 1555,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_708": {
									"entryPoint": 2618,
									"id": 708,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1958": {
									"entryPoint": 7525,
									"id": 1958,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 7837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 7976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_addresst_addresst_addresst_addresst_address": {
									"entryPoint": 8051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 9
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 9146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_bytes": {
									"entryPoint": 8199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__to_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c3f7cf602281cf7a98efd78d98ba46309975dadee18bcb57e640145699bd800__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e54dddc19fe041cd2ab5a676b9022929cd57fae1ef2ef044dff489da7dfdd60__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c00ff6506fc53457ae4202871882703dada01c533275bb259e2cd12acaf31a69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cb323e46bbcca91e157c2b50ad4ce2acbe1153338b838c84372d5723b8995ef0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e3d0a597e455a5df21f74650a7518ab8d226371e3763bb9c00413fb3af8193f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_dataslot_bytes_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_bytes_storage": {
									"entryPoint": 8771,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage": {
									"entryPoint": 8846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7817,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16468:18",
										"nodeType": "YulBlock",
										"src": "0:16468:18",
										"statements": [
											{
												"nativeSrc": "6:3:18",
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:18",
													"nodeType": "YulBlock",
													"src": "83:217:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:18",
																"nodeType": "YulBlock",
																"src": "129:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:18",
																					"nodeType": "YulLiteral",
																					"src": "138:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:18",
																					"nodeType": "YulLiteral",
																					"src": "141:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:18"
																			},
																			"nativeSrc": "131:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:18"
																		},
																		"nativeSrc": "131:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:18"
																		},
																		"nativeSrc": "100:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:18",
																		"nodeType": "YulLiteral",
																		"src": "125:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:18"
																},
																"nativeSrc": "96:32:18",
																"nodeType": "YulFunctionCall",
																"src": "96:32:18"
															},
															"nativeSrc": "93:52:18",
															"nodeType": "YulIf",
															"src": "93:52:18"
														},
														{
															"nativeSrc": "154:36:18",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:18"
																},
																"nativeSrc": "167:23:18",
																"nodeType": "YulFunctionCall",
																"src": "167:23:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:18",
																	"nodeType": "YulTypedName",
																	"src": "158:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:18",
																"nodeType": "YulBlock",
																"src": "254:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:18",
																					"nodeType": "YulLiteral",
																					"src": "263:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:18",
																					"nodeType": "YulLiteral",
																					"src": "266:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:18"
																			},
																			"nativeSrc": "256:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:18"
																		},
																		"nativeSrc": "256:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:18",
																								"nodeType": "YulLiteral",
																								"src": "234:3:18",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:18",
																								"nodeType": "YulLiteral",
																								"src": "239:10:18",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:18"
																						},
																						"nativeSrc": "230:20:18",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:18"
																				},
																				"nativeSrc": "219:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:18"
																		},
																		"nativeSrc": "209:43:18",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:18"
																},
																"nativeSrc": "202:51:18",
																"nodeType": "YulFunctionCall",
																"src": "202:51:18"
															},
															"nativeSrc": "199:71:18",
															"nodeType": "YulIf",
															"src": "199:71:18"
														},
														{
															"nativeSrc": "279:15:18",
															"nodeType": "YulAssignment",
															"src": "279:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:18",
																"nodeType": "YulIdentifier",
																"src": "289:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:18",
														"nodeType": "YulTypedName",
														"src": "49:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:18",
														"nodeType": "YulTypedName",
														"src": "60:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:18",
														"nodeType": "YulTypedName",
														"src": "72:6:18",
														"type": ""
													}
												],
												"src": "14:286:18"
											},
											{
												"body": {
													"nativeSrc": "400:92:18",
													"nodeType": "YulBlock",
													"src": "400:92:18",
													"statements": [
														{
															"nativeSrc": "410:26:18",
															"nodeType": "YulAssignment",
															"src": "410:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:18",
																		"nodeType": "YulLiteral",
																		"src": "433:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:18"
																},
																"nativeSrc": "418:18:18",
																"nodeType": "YulFunctionCall",
																"src": "418:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:18"
																				},
																				"nativeSrc": "470:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:18"
																		},
																		"nativeSrc": "463:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:18"
																},
																"nativeSrc": "445:41:18",
																"nodeType": "YulFunctionCall",
																"src": "445:41:18"
															},
															"nativeSrc": "445:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:18",
														"nodeType": "YulTypedName",
														"src": "369:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:18",
														"nodeType": "YulTypedName",
														"src": "380:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:18",
														"nodeType": "YulTypedName",
														"src": "391:4:18",
														"type": ""
													}
												],
												"src": "305:187:18"
											},
											{
												"body": {
													"nativeSrc": "598:102:18",
													"nodeType": "YulBlock",
													"src": "598:102:18",
													"statements": [
														{
															"nativeSrc": "608:26:18",
															"nodeType": "YulAssignment",
															"src": "608:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "620:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "620:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "631:2:18",
																		"nodeType": "YulLiteral",
																		"src": "631:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "616:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:18"
																},
																"nativeSrc": "616:18:18",
																"nodeType": "YulFunctionCall",
																"src": "616:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "608:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "608:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "650:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "665:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "665:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "681:3:18",
																								"nodeType": "YulLiteral",
																								"src": "681:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "686:1:18",
																								"nodeType": "YulLiteral",
																								"src": "686:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "677:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "677:3:18"
																						},
																						"nativeSrc": "677:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "677:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "690:1:18",
																						"nodeType": "YulLiteral",
																						"src": "690:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "673:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "673:3:18"
																				},
																				"nativeSrc": "673:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "673:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "661:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:18"
																		},
																		"nativeSrc": "661:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "661:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "643:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:18"
																},
																"nativeSrc": "643:51:18",
																"nodeType": "YulFunctionCall",
																"src": "643:51:18"
															},
															"nativeSrc": "643:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "643:51:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "497:203:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "567:9:18",
														"nodeType": "YulTypedName",
														"src": "567:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "578:6:18",
														"nodeType": "YulTypedName",
														"src": "578:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "589:4:18",
														"nodeType": "YulTypedName",
														"src": "589:4:18",
														"type": ""
													}
												],
												"src": "497:203:18"
											},
											{
												"body": {
													"nativeSrc": "754:124:18",
													"nodeType": "YulBlock",
													"src": "754:124:18",
													"statements": [
														{
															"nativeSrc": "764:29:18",
															"nodeType": "YulAssignment",
															"src": "764:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "786:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "786:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "773:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "773:12:18"
																},
																"nativeSrc": "773:20:18",
																"nodeType": "YulFunctionCall",
																"src": "773:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "764:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "764:5:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "856:16:18",
																"nodeType": "YulBlock",
																"src": "856:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "865:1:18",
																					"nodeType": "YulLiteral",
																					"src": "865:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "868:1:18",
																					"nodeType": "YulLiteral",
																					"src": "868:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "858:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "858:6:18"
																			},
																			"nativeSrc": "858:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "858:12:18"
																		},
																		"nativeSrc": "858:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "858:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "815:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "815:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "826:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "826:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "841:3:18",
																										"nodeType": "YulLiteral",
																										"src": "841:3:18",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "846:1:18",
																										"nodeType": "YulLiteral",
																										"src": "846:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "837:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "837:3:18"
																								},
																								"nativeSrc": "837:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "837:11:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "850:1:18",
																								"nodeType": "YulLiteral",
																								"src": "850:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "833:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "833:3:18"
																						},
																						"nativeSrc": "833:19:18",
																						"nodeType": "YulFunctionCall",
																						"src": "833:19:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "822:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "822:3:18"
																				},
																				"nativeSrc": "822:31:18",
																				"nodeType": "YulFunctionCall",
																				"src": "822:31:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "812:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "812:2:18"
																		},
																		"nativeSrc": "812:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "812:42:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "805:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "805:6:18"
																},
																"nativeSrc": "805:50:18",
																"nodeType": "YulFunctionCall",
																"src": "805:50:18"
															},
															"nativeSrc": "802:70:18",
															"nodeType": "YulIf",
															"src": "802:70:18"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "705:173:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "733:6:18",
														"nodeType": "YulTypedName",
														"src": "733:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "744:5:18",
														"nodeType": "YulTypedName",
														"src": "744:5:18",
														"type": ""
													}
												],
												"src": "705:173:18"
											},
											{
												"body": {
													"nativeSrc": "953:116:18",
													"nodeType": "YulBlock",
													"src": "953:116:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "999:16:18",
																"nodeType": "YulBlock",
																"src": "999:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1008:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1008:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1011:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1011:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1001:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1001:6:18"
																			},
																			"nativeSrc": "1001:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1001:12:18"
																		},
																		"nativeSrc": "1001:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1001:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "974:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "974:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "983:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "983:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "970:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "970:3:18"
																		},
																		"nativeSrc": "970:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "970:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "995:2:18",
																		"nodeType": "YulLiteral",
																		"src": "995:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "966:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "966:3:18"
																},
																"nativeSrc": "966:32:18",
																"nodeType": "YulFunctionCall",
																"src": "966:32:18"
															},
															"nativeSrc": "963:52:18",
															"nodeType": "YulIf",
															"src": "963:52:18"
														},
														{
															"nativeSrc": "1024:39:18",
															"nodeType": "YulAssignment",
															"src": "1024:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1053:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1053:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1034:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1034:18:18"
																},
																"nativeSrc": "1034:29:18",
																"nodeType": "YulFunctionCall",
																"src": "1034:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1024:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1024:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "883:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "919:9:18",
														"nodeType": "YulTypedName",
														"src": "919:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "930:7:18",
														"nodeType": "YulTypedName",
														"src": "930:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "942:6:18",
														"nodeType": "YulTypedName",
														"src": "942:6:18",
														"type": ""
													}
												],
												"src": "883:186:18"
											},
											{
												"body": {
													"nativeSrc": "1203:119:18",
													"nodeType": "YulBlock",
													"src": "1203:119:18",
													"statements": [
														{
															"nativeSrc": "1213:26:18",
															"nodeType": "YulAssignment",
															"src": "1213:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1225:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1225:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1236:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1236:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1221:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1221:3:18"
																},
																"nativeSrc": "1221:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1221:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1213:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1213:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1255:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1255:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1266:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1266:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1248:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1248:6:18"
																},
																"nativeSrc": "1248:25:18",
																"nodeType": "YulFunctionCall",
																"src": "1248:25:18"
															},
															"nativeSrc": "1248:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "1248:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1293:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1293:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1304:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1304:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1289:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1289:3:18"
																		},
																		"nativeSrc": "1289:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1309:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1309:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1282:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1282:6:18"
																},
																"nativeSrc": "1282:34:18",
																"nodeType": "YulFunctionCall",
																"src": "1282:34:18"
															},
															"nativeSrc": "1282:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "1282:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1074:248:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1164:9:18",
														"nodeType": "YulTypedName",
														"src": "1164:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1175:6:18",
														"nodeType": "YulTypedName",
														"src": "1175:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1183:6:18",
														"nodeType": "YulTypedName",
														"src": "1183:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1194:4:18",
														"nodeType": "YulTypedName",
														"src": "1194:4:18",
														"type": ""
													}
												],
												"src": "1074:248:18"
											},
											{
												"body": {
													"nativeSrc": "1397:156:18",
													"nodeType": "YulBlock",
													"src": "1397:156:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1443:16:18",
																"nodeType": "YulBlock",
																"src": "1443:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1452:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1452:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1455:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1455:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1445:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1445:6:18"
																			},
																			"nativeSrc": "1445:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1445:12:18"
																		},
																		"nativeSrc": "1445:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1445:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1418:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1418:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1427:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1414:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1414:3:18"
																		},
																		"nativeSrc": "1414:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1414:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1439:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1439:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1410:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:18"
																},
																"nativeSrc": "1410:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1410:32:18"
															},
															"nativeSrc": "1407:52:18",
															"nodeType": "YulIf",
															"src": "1407:52:18"
														},
														{
															"nativeSrc": "1468:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1468:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1481:1:18",
																"nodeType": "YulLiteral",
																"src": "1481:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1472:5:18",
																	"nodeType": "YulTypedName",
																	"src": "1472:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1491:32:18",
															"nodeType": "YulAssignment",
															"src": "1491:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1513:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1513:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1500:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1500:12:18"
																},
																"nativeSrc": "1500:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1500:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1491:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1491:5:18"
																}
															]
														},
														{
															"nativeSrc": "1532:15:18",
															"nodeType": "YulAssignment",
															"src": "1532:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "1542:5:18",
																"nodeType": "YulIdentifier",
																"src": "1542:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1532:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1532:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1327:226:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1363:9:18",
														"nodeType": "YulTypedName",
														"src": "1363:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1374:7:18",
														"nodeType": "YulTypedName",
														"src": "1374:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1386:6:18",
														"nodeType": "YulTypedName",
														"src": "1386:6:18",
														"type": ""
													}
												],
												"src": "1327:226:18"
											},
											{
												"body": {
													"nativeSrc": "1628:156:18",
													"nodeType": "YulBlock",
													"src": "1628:156:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1674:16:18",
																"nodeType": "YulBlock",
																"src": "1674:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1683:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1683:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1686:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1676:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:18"
																			},
																			"nativeSrc": "1676:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1676:12:18"
																		},
																		"nativeSrc": "1676:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1676:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1649:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1649:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1658:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1658:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1645:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1645:3:18"
																		},
																		"nativeSrc": "1645:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1645:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1670:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1670:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1641:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1641:3:18"
																},
																"nativeSrc": "1641:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1641:32:18"
															},
															"nativeSrc": "1638:52:18",
															"nodeType": "YulIf",
															"src": "1638:52:18"
														},
														{
															"nativeSrc": "1699:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1699:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1712:1:18",
																"nodeType": "YulLiteral",
																"src": "1712:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1703:5:18",
																	"nodeType": "YulTypedName",
																	"src": "1703:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1722:32:18",
															"nodeType": "YulAssignment",
															"src": "1722:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1744:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1744:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1731:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1731:12:18"
																},
																"nativeSrc": "1731:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1731:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1722:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1722:5:18"
																}
															]
														},
														{
															"nativeSrc": "1763:15:18",
															"nodeType": "YulAssignment",
															"src": "1763:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "1773:5:18",
																"nodeType": "YulIdentifier",
																"src": "1773:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1763:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1763:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1558:226:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1594:9:18",
														"nodeType": "YulTypedName",
														"src": "1594:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1605:7:18",
														"nodeType": "YulTypedName",
														"src": "1605:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1617:6:18",
														"nodeType": "YulTypedName",
														"src": "1617:6:18",
														"type": ""
													}
												],
												"src": "1558:226:18"
											},
											{
												"body": {
													"nativeSrc": "1890:76:18",
													"nodeType": "YulBlock",
													"src": "1890:76:18",
													"statements": [
														{
															"nativeSrc": "1900:26:18",
															"nodeType": "YulAssignment",
															"src": "1900:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1912:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1912:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1923:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1923:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1908:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1908:3:18"
																},
																"nativeSrc": "1908:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1908:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1900:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1900:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1942:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1942:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1953:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1953:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1935:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1935:6:18"
																},
																"nativeSrc": "1935:25:18",
																"nodeType": "YulFunctionCall",
																"src": "1935:25:18"
															},
															"nativeSrc": "1935:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "1935:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1789:177:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1859:9:18",
														"nodeType": "YulTypedName",
														"src": "1859:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1870:6:18",
														"nodeType": "YulTypedName",
														"src": "1870:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1881:4:18",
														"nodeType": "YulTypedName",
														"src": "1881:4:18",
														"type": ""
													}
												],
												"src": "1789:177:18"
											},
											{
												"body": {
													"nativeSrc": "2058:213:18",
													"nodeType": "YulBlock",
													"src": "2058:213:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2104:16:18",
																"nodeType": "YulBlock",
																"src": "2104:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2113:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2113:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2116:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2116:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2106:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2106:6:18"
																			},
																			"nativeSrc": "2106:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2106:12:18"
																		},
																		"nativeSrc": "2106:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2106:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2079:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2079:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2088:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2088:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2075:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2075:3:18"
																		},
																		"nativeSrc": "2075:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2075:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2100:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2100:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2071:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2071:3:18"
																},
																"nativeSrc": "2071:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2071:32:18"
															},
															"nativeSrc": "2068:52:18",
															"nodeType": "YulIf",
															"src": "2068:52:18"
														},
														{
															"nativeSrc": "2129:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2129:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2142:1:18",
																"nodeType": "YulLiteral",
																"src": "2142:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2133:5:18",
																	"nodeType": "YulTypedName",
																	"src": "2133:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2152:32:18",
															"nodeType": "YulAssignment",
															"src": "2152:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2174:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2174:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2161:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2161:12:18"
																},
																"nativeSrc": "2161:23:18",
																"nodeType": "YulFunctionCall",
																"src": "2161:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2152:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2152:5:18"
																}
															]
														},
														{
															"nativeSrc": "2193:15:18",
															"nodeType": "YulAssignment",
															"src": "2193:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "2203:5:18",
																"nodeType": "YulIdentifier",
																"src": "2203:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2193:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2193:6:18"
																}
															]
														},
														{
															"nativeSrc": "2217:48:18",
															"nodeType": "YulAssignment",
															"src": "2217:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2250:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2250:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2261:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2261:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2246:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2246:3:18"
																		},
																		"nativeSrc": "2246:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2227:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "2227:18:18"
																},
																"nativeSrc": "2227:38:18",
																"nodeType": "YulFunctionCall",
																"src": "2227:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2217:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "1971:300:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2016:9:18",
														"nodeType": "YulTypedName",
														"src": "2016:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2027:7:18",
														"nodeType": "YulTypedName",
														"src": "2027:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2039:6:18",
														"nodeType": "YulTypedName",
														"src": "2039:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2047:6:18",
														"nodeType": "YulTypedName",
														"src": "2047:6:18",
														"type": ""
													}
												],
												"src": "1971:300:18"
											},
											{
												"body": {
													"nativeSrc": "2308:95:18",
													"nodeType": "YulBlock",
													"src": "2308:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2325:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2325:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2332:3:18",
																				"nodeType": "YulLiteral",
																				"src": "2332:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2337:10:18",
																				"nodeType": "YulLiteral",
																				"src": "2337:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2328:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2328:3:18"
																		},
																		"nativeSrc": "2328:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2328:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2318:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:18"
																},
																"nativeSrc": "2318:31:18",
																"nodeType": "YulFunctionCall",
																"src": "2318:31:18"
															},
															"nativeSrc": "2318:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "2318:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2365:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2365:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2368:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2368:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2358:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:18"
																},
																"nativeSrc": "2358:15:18",
																"nodeType": "YulFunctionCall",
																"src": "2358:15:18"
															},
															"nativeSrc": "2358:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "2358:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2389:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2389:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2392:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2382:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2382:6:18"
																},
																"nativeSrc": "2382:15:18",
																"nodeType": "YulFunctionCall",
																"src": "2382:15:18"
															},
															"nativeSrc": "2382:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "2382:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2276:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "2276:127:18"
											},
											{
												"body": {
													"nativeSrc": "2460:673:18",
													"nodeType": "YulBlock",
													"src": "2460:673:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2509:16:18",
																"nodeType": "YulBlock",
																"src": "2509:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2518:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2518:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2521:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2521:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2511:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2511:6:18"
																			},
																			"nativeSrc": "2511:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2511:12:18"
																		},
																		"nativeSrc": "2511:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2511:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2488:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2488:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2496:4:18",
																						"nodeType": "YulLiteral",
																						"src": "2496:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2484:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2484:3:18"
																				},
																				"nativeSrc": "2484:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2484:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2503:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2480:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2480:3:18"
																		},
																		"nativeSrc": "2480:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2480:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2473:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:18"
																},
																"nativeSrc": "2473:35:18",
																"nodeType": "YulFunctionCall",
																"src": "2473:35:18"
															},
															"nativeSrc": "2470:55:18",
															"nodeType": "YulIf",
															"src": "2470:55:18"
														},
														{
															"nativeSrc": "2534:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2534:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2561:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2561:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2548:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2548:12:18"
																},
																"nativeSrc": "2548:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2548:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2538:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2538:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2611:22:18",
																"nodeType": "YulBlock",
																"src": "2611:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2613:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "2613:16:18"
																			},
																			"nativeSrc": "2613:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:18:18"
																		},
																		"nativeSrc": "2613:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2583:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2591:18:18",
																		"nodeType": "YulLiteral",
																		"src": "2591:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2580:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2580:2:18"
																},
																"nativeSrc": "2580:30:18",
																"nodeType": "YulFunctionCall",
																"src": "2580:30:18"
															},
															"nativeSrc": "2577:56:18",
															"nodeType": "YulIf",
															"src": "2577:56:18"
														},
														{
															"nativeSrc": "2642:23:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2642:23:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2662:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2662:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2656:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2656:5:18"
																},
																"nativeSrc": "2656:9:18",
																"nodeType": "YulFunctionCall",
																"src": "2656:9:18"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2646:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2646:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2674:85:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2674:85:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2696:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2696:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "2720:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "2720:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2728:4:18",
																										"nodeType": "YulLiteral",
																										"src": "2728:4:18",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2716:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "2716:3:18"
																								},
																								"nativeSrc": "2716:17:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2716:17:18"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2739:2:18",
																										"nodeType": "YulLiteral",
																										"src": "2739:2:18",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2735:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "2735:3:18"
																								},
																								"nativeSrc": "2735:7:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2735:7:18"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2712:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "2712:3:18"
																						},
																						"nativeSrc": "2712:31:18",
																						"nodeType": "YulFunctionCall",
																						"src": "2712:31:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2745:2:18",
																						"nodeType": "YulLiteral",
																						"src": "2745:2:18",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2708:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2708:3:18"
																				},
																				"nativeSrc": "2708:40:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2708:40:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2754:2:18",
																						"nodeType": "YulLiteral",
																						"src": "2754:2:18",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2750:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2750:3:18"
																				},
																				"nativeSrc": "2750:7:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2750:7:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2704:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2704:3:18"
																		},
																		"nativeSrc": "2704:54:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2704:54:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2692:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2692:3:18"
																},
																"nativeSrc": "2692:67:18",
																"nodeType": "YulFunctionCall",
																"src": "2692:67:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2678:10:18",
																	"nodeType": "YulTypedName",
																	"src": "2678:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2834:22:18",
																"nodeType": "YulBlock",
																"src": "2834:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2836:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "2836:16:18"
																			},
																			"nativeSrc": "2836:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2836:18:18"
																		},
																		"nativeSrc": "2836:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2836:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2777:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "2777:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2789:18:18",
																				"nodeType": "YulLiteral",
																				"src": "2789:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2774:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2774:2:18"
																		},
																		"nativeSrc": "2774:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2774:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2813:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "2813:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2825:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2825:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2810:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2810:2:18"
																		},
																		"nativeSrc": "2810:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2810:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2771:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2771:2:18"
																},
																"nativeSrc": "2771:62:18",
																"nodeType": "YulFunctionCall",
																"src": "2771:62:18"
															},
															"nativeSrc": "2768:88:18",
															"nodeType": "YulIf",
															"src": "2768:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2872:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2872:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2876:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "2876:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2865:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2865:6:18"
																},
																"nativeSrc": "2865:22:18",
																"nodeType": "YulFunctionCall",
																"src": "2865:22:18"
															},
															"nativeSrc": "2865:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "2865:22:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2903:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2903:6:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2911:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2911:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2896:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2896:6:18"
																},
																"nativeSrc": "2896:22:18",
																"nodeType": "YulFunctionCall",
																"src": "2896:22:18"
															},
															"nativeSrc": "2896:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "2896:22:18"
														},
														{
															"body": {
																"nativeSrc": "2970:16:18",
																"nodeType": "YulBlock",
																"src": "2970:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2979:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2979:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2982:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2982:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2972:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2972:6:18"
																			},
																			"nativeSrc": "2972:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2972:12:18"
																		},
																		"nativeSrc": "2972:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2972:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2941:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2941:6:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2949:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2949:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2937:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2937:3:18"
																				},
																				"nativeSrc": "2937:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2937:19:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2958:4:18",
																				"nodeType": "YulLiteral",
																				"src": "2958:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2933:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2933:3:18"
																		},
																		"nativeSrc": "2933:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2933:30:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2965:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2965:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2930:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2930:2:18"
																},
																"nativeSrc": "2930:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2930:39:18"
															},
															"nativeSrc": "2927:59:18",
															"nodeType": "YulIf",
															"src": "2927:59:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3012:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3012:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3020:4:18",
																				"nodeType": "YulLiteral",
																				"src": "3020:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3008:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3008:3:18"
																		},
																		"nativeSrc": "3008:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3008:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3031:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3031:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3039:4:18",
																				"nodeType": "YulLiteral",
																				"src": "3039:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3027:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3027:3:18"
																		},
																		"nativeSrc": "3027:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3027:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3046:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2995:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2995:12:18"
																},
																"nativeSrc": "2995:58:18",
																"nodeType": "YulFunctionCall",
																"src": "2995:58:18"
															},
															"nativeSrc": "2995:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "2995:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3077:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3077:6:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3085:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3085:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3073:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3073:3:18"
																				},
																				"nativeSrc": "3073:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3073:19:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3094:4:18",
																				"nodeType": "YulLiteral",
																				"src": "3094:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3069:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3069:3:18"
																		},
																		"nativeSrc": "3069:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3069:30:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3101:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3101:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3062:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3062:6:18"
																},
																"nativeSrc": "3062:41:18",
																"nodeType": "YulFunctionCall",
																"src": "3062:41:18"
															},
															"nativeSrc": "3062:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "3062:41:18"
														},
														{
															"nativeSrc": "3112:15:18",
															"nodeType": "YulAssignment",
															"src": "3112:15:18",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3121:6:18",
																"nodeType": "YulIdentifier",
																"src": "3121:6:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3112:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3112:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nativeSrc": "2408:725:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2434:6:18",
														"nodeType": "YulTypedName",
														"src": "2434:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2442:3:18",
														"nodeType": "YulTypedName",
														"src": "2442:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2450:5:18",
														"nodeType": "YulTypedName",
														"src": "2450:5:18",
														"type": ""
													}
												],
												"src": "2408:725:18"
											},
											{
												"body": {
													"nativeSrc": "3234:298:18",
													"nodeType": "YulBlock",
													"src": "3234:298:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3280:16:18",
																"nodeType": "YulBlock",
																"src": "3280:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3289:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3289:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3292:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3292:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3282:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3282:6:18"
																			},
																			"nativeSrc": "3282:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3282:12:18"
																		},
																		"nativeSrc": "3282:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3282:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3255:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3255:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3264:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3264:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3251:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3251:3:18"
																		},
																		"nativeSrc": "3251:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3251:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3276:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3247:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3247:3:18"
																},
																"nativeSrc": "3247:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3247:32:18"
															},
															"nativeSrc": "3244:52:18",
															"nodeType": "YulIf",
															"src": "3244:52:18"
														},
														{
															"nativeSrc": "3305:39:18",
															"nodeType": "YulAssignment",
															"src": "3305:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3334:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3334:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3315:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3315:18:18"
																},
																"nativeSrc": "3315:29:18",
																"nodeType": "YulFunctionCall",
																"src": "3315:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3305:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3305:6:18"
																}
															]
														},
														{
															"nativeSrc": "3353:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3353:46:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3384:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3384:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3395:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3395:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3380:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3380:3:18"
																		},
																		"nativeSrc": "3380:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3380:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3367:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3367:12:18"
																},
																"nativeSrc": "3367:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3367:32:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3357:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3357:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3442:16:18",
																"nodeType": "YulBlock",
																"src": "3442:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3451:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3451:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3454:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3454:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3444:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3444:6:18"
																			},
																			"nativeSrc": "3444:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3444:12:18"
																		},
																		"nativeSrc": "3444:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3444:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3414:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3414:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3422:18:18",
																		"nodeType": "YulLiteral",
																		"src": "3422:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3411:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3411:2:18"
																},
																"nativeSrc": "3411:30:18",
																"nodeType": "YulFunctionCall",
																"src": "3411:30:18"
															},
															"nativeSrc": "3408:50:18",
															"nodeType": "YulIf",
															"src": "3408:50:18"
														},
														{
															"nativeSrc": "3467:59:18",
															"nodeType": "YulAssignment",
															"src": "3467:59:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3498:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3498:9:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3494:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3494:3:18"
																		},
																		"nativeSrc": "3494:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3494:22:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3518:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "3518:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "3477:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "3477:16:18"
																},
																"nativeSrc": "3477:49:18",
																"nodeType": "YulFunctionCall",
																"src": "3477:49:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3467:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3467:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "3138:394:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3192:9:18",
														"nodeType": "YulTypedName",
														"src": "3192:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3203:7:18",
														"nodeType": "YulTypedName",
														"src": "3203:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3215:6:18",
														"nodeType": "YulTypedName",
														"src": "3215:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3223:6:18",
														"nodeType": "YulTypedName",
														"src": "3223:6:18",
														"type": ""
													}
												],
												"src": "3138:394:18"
											},
											{
												"body": {
													"nativeSrc": "3743:664:18",
													"nodeType": "YulBlock",
													"src": "3743:664:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3790:16:18",
																"nodeType": "YulBlock",
																"src": "3790:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3799:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3799:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3802:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3802:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3792:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3792:6:18"
																			},
																			"nativeSrc": "3792:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3792:12:18"
																		},
																		"nativeSrc": "3792:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3792:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3764:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3764:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3773:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3760:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3760:3:18"
																		},
																		"nativeSrc": "3760:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3760:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3785:3:18",
																		"nodeType": "YulLiteral",
																		"src": "3785:3:18",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3756:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3756:3:18"
																},
																"nativeSrc": "3756:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3756:33:18"
															},
															"nativeSrc": "3753:53:18",
															"nodeType": "YulIf",
															"src": "3753:53:18"
														},
														{
															"nativeSrc": "3815:39:18",
															"nodeType": "YulAssignment",
															"src": "3815:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3844:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3844:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3825:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3825:18:18"
																},
																"nativeSrc": "3825:29:18",
																"nodeType": "YulFunctionCall",
																"src": "3825:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3815:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3815:6:18"
																}
															]
														},
														{
															"nativeSrc": "3863:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3863:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "3876:1:18",
																"nodeType": "YulLiteral",
																"src": "3876:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3867:5:18",
																	"nodeType": "YulTypedName",
																	"src": "3867:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3886:41:18",
															"nodeType": "YulAssignment",
															"src": "3886:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3912:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3912:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3923:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3923:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3908:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3908:3:18"
																		},
																		"nativeSrc": "3908:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3908:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3895:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3895:12:18"
																},
																"nativeSrc": "3895:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3895:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3886:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3886:5:18"
																}
															]
														},
														{
															"nativeSrc": "3936:15:18",
															"nodeType": "YulAssignment",
															"src": "3936:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "3946:5:18",
																"nodeType": "YulIdentifier",
																"src": "3946:5:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3936:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3936:6:18"
																}
															]
														},
														{
															"nativeSrc": "3960:16:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3960:16:18",
															"value": {
																"kind": "number",
																"nativeSrc": "3975:1:18",
																"nodeType": "YulLiteral",
																"src": "3975:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3964:7:18",
																	"nodeType": "YulTypedName",
																	"src": "3964:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3985:43:18",
															"nodeType": "YulAssignment",
															"src": "3985:43:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4013:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4013:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4024:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4024:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4009:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4009:3:18"
																		},
																		"nativeSrc": "4009:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4009:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3996:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3996:12:18"
																},
																"nativeSrc": "3996:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3996:32:18"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3985:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3985:7:18"
																}
															]
														},
														{
															"nativeSrc": "4037:17:18",
															"nodeType": "YulAssignment",
															"src": "4037:17:18",
															"value": {
																"name": "value_1",
																"nativeSrc": "4047:7:18",
																"nodeType": "YulIdentifier",
																"src": "4047:7:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4037:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4037:6:18"
																}
															]
														},
														{
															"nativeSrc": "4063:48:18",
															"nodeType": "YulAssignment",
															"src": "4063:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4096:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4096:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4107:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4107:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4092:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4092:3:18"
																		},
																		"nativeSrc": "4092:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4092:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4073:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "4073:18:18"
																},
																"nativeSrc": "4073:38:18",
																"nodeType": "YulFunctionCall",
																"src": "4073:38:18"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4063:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4063:6:18"
																}
															]
														},
														{
															"nativeSrc": "4120:49:18",
															"nodeType": "YulAssignment",
															"src": "4120:49:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4153:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4153:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4164:3:18",
																				"nodeType": "YulLiteral",
																				"src": "4164:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4149:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4149:3:18"
																		},
																		"nativeSrc": "4149:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4149:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4130:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "4130:18:18"
																},
																"nativeSrc": "4130:39:18",
																"nodeType": "YulFunctionCall",
																"src": "4130:39:18"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4120:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4120:6:18"
																}
															]
														},
														{
															"nativeSrc": "4178:49:18",
															"nodeType": "YulAssignment",
															"src": "4178:49:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4211:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4211:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4222:3:18",
																				"nodeType": "YulLiteral",
																				"src": "4222:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4207:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4207:3:18"
																		},
																		"nativeSrc": "4207:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4207:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4188:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "4188:18:18"
																},
																"nativeSrc": "4188:39:18",
																"nodeType": "YulFunctionCall",
																"src": "4188:39:18"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "4178:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4178:6:18"
																}
															]
														},
														{
															"nativeSrc": "4236:49:18",
															"nodeType": "YulAssignment",
															"src": "4236:49:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4269:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4269:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4280:3:18",
																				"nodeType": "YulLiteral",
																				"src": "4280:3:18",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4265:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:18"
																		},
																		"nativeSrc": "4265:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4265:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4246:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "4246:18:18"
																},
																"nativeSrc": "4246:39:18",
																"nodeType": "YulFunctionCall",
																"src": "4246:39:18"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "4236:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4236:6:18"
																}
															]
														},
														{
															"nativeSrc": "4294:49:18",
															"nodeType": "YulAssignment",
															"src": "4294:49:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4327:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4327:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4338:3:18",
																				"nodeType": "YulLiteral",
																				"src": "4338:3:18",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4323:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:18"
																		},
																		"nativeSrc": "4323:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4323:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4304:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "4304:18:18"
																},
																"nativeSrc": "4304:39:18",
																"nodeType": "YulFunctionCall",
																"src": "4304:39:18"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "4294:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4294:6:18"
																}
															]
														},
														{
															"nativeSrc": "4352:49:18",
															"nodeType": "YulAssignment",
															"src": "4352:49:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4385:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4385:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4396:3:18",
																				"nodeType": "YulLiteral",
																				"src": "4396:3:18",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4381:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4381:3:18"
																		},
																		"nativeSrc": "4381:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4381:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4362:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "4362:18:18"
																},
																"nativeSrc": "4362:39:18",
																"nodeType": "YulFunctionCall",
																"src": "4362:39:18"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nativeSrc": "4352:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4352:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_addresst_addresst_addresst_addresst_address",
												"nativeSrc": "3537:870:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3645:9:18",
														"nodeType": "YulTypedName",
														"src": "3645:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3656:7:18",
														"nodeType": "YulTypedName",
														"src": "3656:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3668:6:18",
														"nodeType": "YulTypedName",
														"src": "3668:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3676:6:18",
														"nodeType": "YulTypedName",
														"src": "3676:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3684:6:18",
														"nodeType": "YulTypedName",
														"src": "3684:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3692:6:18",
														"nodeType": "YulTypedName",
														"src": "3692:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3700:6:18",
														"nodeType": "YulTypedName",
														"src": "3700:6:18",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3708:6:18",
														"nodeType": "YulTypedName",
														"src": "3708:6:18",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3716:6:18",
														"nodeType": "YulTypedName",
														"src": "3716:6:18",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "3724:6:18",
														"nodeType": "YulTypedName",
														"src": "3724:6:18",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "3732:6:18",
														"nodeType": "YulTypedName",
														"src": "3732:6:18",
														"type": ""
													}
												],
												"src": "3537:870:18"
											},
											{
												"body": {
													"nativeSrc": "4499:213:18",
													"nodeType": "YulBlock",
													"src": "4499:213:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4545:16:18",
																"nodeType": "YulBlock",
																"src": "4545:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4554:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4554:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4557:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4557:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4547:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4547:6:18"
																			},
																			"nativeSrc": "4547:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4547:12:18"
																		},
																		"nativeSrc": "4547:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4547:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4520:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4520:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4529:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4529:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4516:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4516:3:18"
																		},
																		"nativeSrc": "4516:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4516:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4541:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4541:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4512:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4512:3:18"
																},
																"nativeSrc": "4512:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4512:32:18"
															},
															"nativeSrc": "4509:52:18",
															"nodeType": "YulIf",
															"src": "4509:52:18"
														},
														{
															"nativeSrc": "4570:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4570:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4583:1:18",
																"nodeType": "YulLiteral",
																"src": "4583:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4574:5:18",
																	"nodeType": "YulTypedName",
																	"src": "4574:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4593:32:18",
															"nodeType": "YulAssignment",
															"src": "4593:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4615:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4615:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4602:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4602:12:18"
																},
																"nativeSrc": "4602:23:18",
																"nodeType": "YulFunctionCall",
																"src": "4602:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4593:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4593:5:18"
																}
															]
														},
														{
															"nativeSrc": "4634:15:18",
															"nodeType": "YulAssignment",
															"src": "4634:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "4644:5:18",
																"nodeType": "YulIdentifier",
																"src": "4644:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4634:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:18"
																}
															]
														},
														{
															"nativeSrc": "4658:48:18",
															"nodeType": "YulAssignment",
															"src": "4658:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4691:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4691:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4702:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4702:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4687:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4687:3:18"
																		},
																		"nativeSrc": "4687:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4687:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4668:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "4668:18:18"
																},
																"nativeSrc": "4668:38:18",
																"nodeType": "YulFunctionCall",
																"src": "4668:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4658:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4658:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "4412:300:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4457:9:18",
														"nodeType": "YulTypedName",
														"src": "4457:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4468:7:18",
														"nodeType": "YulTypedName",
														"src": "4468:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4480:6:18",
														"nodeType": "YulTypedName",
														"src": "4480:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4488:6:18",
														"nodeType": "YulTypedName",
														"src": "4488:6:18",
														"type": ""
													}
												],
												"src": "4412:300:18"
											},
											{
												"body": {
													"nativeSrc": "4818:76:18",
													"nodeType": "YulBlock",
													"src": "4818:76:18",
													"statements": [
														{
															"nativeSrc": "4828:26:18",
															"nodeType": "YulAssignment",
															"src": "4828:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4840:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4840:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4851:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4851:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4836:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4836:3:18"
																},
																"nativeSrc": "4836:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4836:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4828:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4828:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4870:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4870:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4881:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4881:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4863:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4863:6:18"
																},
																"nativeSrc": "4863:25:18",
																"nodeType": "YulFunctionCall",
																"src": "4863:25:18"
															},
															"nativeSrc": "4863:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "4863:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4717:177:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4787:9:18",
														"nodeType": "YulTypedName",
														"src": "4787:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4798:6:18",
														"nodeType": "YulTypedName",
														"src": "4798:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4809:4:18",
														"nodeType": "YulTypedName",
														"src": "4809:4:18",
														"type": ""
													}
												],
												"src": "4717:177:18"
											},
											{
												"body": {
													"nativeSrc": "4948:239:18",
													"nodeType": "YulBlock",
													"src": "4948:239:18",
													"statements": [
														{
															"nativeSrc": "4958:26:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4958:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4978:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4978:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4972:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4972:5:18"
																},
																"nativeSrc": "4972:12:18",
																"nodeType": "YulFunctionCall",
																"src": "4972:12:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4962:6:18",
																	"nodeType": "YulTypedName",
																	"src": "4962:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5000:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5000:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5005:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4993:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4993:6:18"
																},
																"nativeSrc": "4993:19:18",
																"nodeType": "YulFunctionCall",
																"src": "4993:19:18"
															},
															"nativeSrc": "4993:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "4993:19:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5031:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "5031:3:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5036:4:18",
																				"nodeType": "YulLiteral",
																				"src": "5036:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5027:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5027:3:18"
																		},
																		"nativeSrc": "5027:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5027:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5047:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5047:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5054:4:18",
																				"nodeType": "YulLiteral",
																				"src": "5054:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5043:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:18"
																		},
																		"nativeSrc": "5043:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5043:16:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5061:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5061:6:18"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5021:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "5021:5:18"
																},
																"nativeSrc": "5021:47:18",
																"nodeType": "YulFunctionCall",
																"src": "5021:47:18"
															},
															"nativeSrc": "5021:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "5021:47:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5092:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "5092:3:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5097:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5097:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5088:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5088:3:18"
																				},
																				"nativeSrc": "5088:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5088:16:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5106:4:18",
																				"nodeType": "YulLiteral",
																				"src": "5106:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5084:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5084:3:18"
																		},
																		"nativeSrc": "5084:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5084:27:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5113:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5113:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5077:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5077:6:18"
																},
																"nativeSrc": "5077:38:18",
																"nodeType": "YulFunctionCall",
																"src": "5077:38:18"
															},
															"nativeSrc": "5077:38:18",
															"nodeType": "YulExpressionStatement",
															"src": "5077:38:18"
														},
														{
															"nativeSrc": "5124:57:18",
															"nodeType": "YulAssignment",
															"src": "5124:57:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5139:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "5139:3:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5152:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "5152:6:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5160:2:18",
																								"nodeType": "YulLiteral",
																								"src": "5160:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5148:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5148:3:18"
																						},
																						"nativeSrc": "5148:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5148:15:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5169:2:18",
																								"nodeType": "YulLiteral",
																								"src": "5169:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5165:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5165:3:18"
																						},
																						"nativeSrc": "5165:7:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5165:7:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5144:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5144:3:18"
																				},
																				"nativeSrc": "5144:29:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5144:29:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5135:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5135:3:18"
																		},
																		"nativeSrc": "5135:39:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5135:39:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5176:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5176:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5131:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:18"
																},
																"nativeSrc": "5131:50:18",
																"nodeType": "YulFunctionCall",
																"src": "5131:50:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5124:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5124:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nativeSrc": "4899:288:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4925:5:18",
														"nodeType": "YulTypedName",
														"src": "4925:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4932:3:18",
														"nodeType": "YulTypedName",
														"src": "4932:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4940:3:18",
														"nodeType": "YulTypedName",
														"src": "4940:3:18",
														"type": ""
													}
												],
												"src": "4899:288:18"
											},
											{
												"body": {
													"nativeSrc": "5417:315:18",
													"nodeType": "YulBlock",
													"src": "5417:315:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5434:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5434:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5449:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5449:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5465:3:18",
																								"nodeType": "YulLiteral",
																								"src": "5465:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5470:1:18",
																								"nodeType": "YulLiteral",
																								"src": "5470:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5461:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5461:3:18"
																						},
																						"nativeSrc": "5461:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5461:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5474:1:18",
																						"nodeType": "YulLiteral",
																						"src": "5474:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5457:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5457:3:18"
																				},
																				"nativeSrc": "5457:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5457:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5445:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5445:3:18"
																		},
																		"nativeSrc": "5445:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5445:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5427:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:18"
																},
																"nativeSrc": "5427:51:18",
																"nodeType": "YulFunctionCall",
																"src": "5427:51:18"
															},
															"nativeSrc": "5427:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "5427:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5498:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5498:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5509:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5509:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5494:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5494:3:18"
																		},
																		"nativeSrc": "5494:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5494:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5514:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5514:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5487:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5487:6:18"
																},
																"nativeSrc": "5487:34:18",
																"nodeType": "YulFunctionCall",
																"src": "5487:34:18"
															},
															"nativeSrc": "5487:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "5487:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5541:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5541:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5552:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5552:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5537:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5537:3:18"
																		},
																		"nativeSrc": "5537:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5537:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5557:3:18",
																		"nodeType": "YulLiteral",
																		"src": "5557:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5530:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5530:6:18"
																},
																"nativeSrc": "5530:31:18",
																"nodeType": "YulFunctionCall",
																"src": "5530:31:18"
															},
															"nativeSrc": "5530:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "5530:31:18"
														},
														{
															"nativeSrc": "5570:53:18",
															"nodeType": "YulAssignment",
															"src": "5570:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5595:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5595:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5607:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5607:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5618:3:18",
																				"nodeType": "YulLiteral",
																				"src": "5618:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5603:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5603:3:18"
																		},
																		"nativeSrc": "5603:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5603:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "5578:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "5578:16:18"
																},
																"nativeSrc": "5578:45:18",
																"nodeType": "YulFunctionCall",
																"src": "5578:45:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5570:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5570:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5643:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5643:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5654:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5654:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5639:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5639:3:18"
																		},
																		"nativeSrc": "5639:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5639:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "5673:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5673:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5666:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "5666:6:18"
																				},
																				"nativeSrc": "5666:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5666:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5659:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5659:6:18"
																		},
																		"nativeSrc": "5659:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5659:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5632:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5632:6:18"
																},
																"nativeSrc": "5632:50:18",
																"nodeType": "YulFunctionCall",
																"src": "5632:50:18"
															},
															"nativeSrc": "5632:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "5632:50:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5702:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5702:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5713:3:18",
																				"nodeType": "YulLiteral",
																				"src": "5713:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5698:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5698:3:18"
																		},
																		"nativeSrc": "5698:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5698:19:18"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "5719:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5719:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5691:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5691:6:18"
																},
																"nativeSrc": "5691:35:18",
																"nodeType": "YulFunctionCall",
																"src": "5691:35:18"
															},
															"nativeSrc": "5691:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "5691:35:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__to_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "5192:540:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5354:9:18",
														"nodeType": "YulTypedName",
														"src": "5354:9:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5365:6:18",
														"nodeType": "YulTypedName",
														"src": "5365:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5373:6:18",
														"nodeType": "YulTypedName",
														"src": "5373:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5381:6:18",
														"nodeType": "YulTypedName",
														"src": "5381:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5389:6:18",
														"nodeType": "YulTypedName",
														"src": "5389:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5397:6:18",
														"nodeType": "YulTypedName",
														"src": "5397:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5408:4:18",
														"nodeType": "YulTypedName",
														"src": "5408:4:18",
														"type": ""
													}
												],
												"src": "5192:540:18"
											},
											{
												"body": {
													"nativeSrc": "5858:98:18",
													"nodeType": "YulBlock",
													"src": "5858:98:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5875:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5875:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5886:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5886:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5868:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5868:6:18"
																},
																"nativeSrc": "5868:21:18",
																"nodeType": "YulFunctionCall",
																"src": "5868:21:18"
															},
															"nativeSrc": "5868:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "5868:21:18"
														},
														{
															"nativeSrc": "5898:52:18",
															"nodeType": "YulAssignment",
															"src": "5898:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5923:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5923:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5935:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5935:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5946:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5946:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5931:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5931:3:18"
																		},
																		"nativeSrc": "5931:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5931:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "5906:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "5906:16:18"
																},
																"nativeSrc": "5906:44:18",
																"nodeType": "YulFunctionCall",
																"src": "5906:44:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5898:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5898:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5737:219:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5827:9:18",
														"nodeType": "YulTypedName",
														"src": "5827:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5838:6:18",
														"nodeType": "YulTypedName",
														"src": "5838:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5849:4:18",
														"nodeType": "YulTypedName",
														"src": "5849:4:18",
														"type": ""
													}
												],
												"src": "5737:219:18"
											},
											{
												"body": {
													"nativeSrc": "6074:395:18",
													"nodeType": "YulBlock",
													"src": "6074:395:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6120:16:18",
																"nodeType": "YulBlock",
																"src": "6120:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6129:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6129:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6132:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6132:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6122:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6122:6:18"
																			},
																			"nativeSrc": "6122:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6122:12:18"
																		},
																		"nativeSrc": "6122:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6122:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6095:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6095:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6104:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6104:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6091:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6091:3:18"
																		},
																		"nativeSrc": "6091:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6091:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6116:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6116:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6087:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6087:3:18"
																},
																"nativeSrc": "6087:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6087:32:18"
															},
															"nativeSrc": "6084:52:18",
															"nodeType": "YulIf",
															"src": "6084:52:18"
														},
														{
															"nativeSrc": "6145:39:18",
															"nodeType": "YulAssignment",
															"src": "6145:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6174:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6174:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6155:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "6155:18:18"
																},
																"nativeSrc": "6155:29:18",
																"nodeType": "YulFunctionCall",
																"src": "6155:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6145:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6145:6:18"
																}
															]
														},
														{
															"nativeSrc": "6193:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6193:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "6206:1:18",
																"nodeType": "YulLiteral",
																"src": "6206:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6197:5:18",
																	"nodeType": "YulTypedName",
																	"src": "6197:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6216:41:18",
															"nodeType": "YulAssignment",
															"src": "6216:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6242:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6242:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6253:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6253:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6238:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:18"
																		},
																		"nativeSrc": "6238:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6238:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6225:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "6225:12:18"
																},
																"nativeSrc": "6225:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6225:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6216:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "6216:5:18"
																}
															]
														},
														{
															"nativeSrc": "6266:15:18",
															"nodeType": "YulAssignment",
															"src": "6266:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "6276:5:18",
																"nodeType": "YulIdentifier",
																"src": "6276:5:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6266:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6266:6:18"
																}
															]
														},
														{
															"nativeSrc": "6290:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6290:46:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6321:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6321:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6332:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6332:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6317:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6317:3:18"
																		},
																		"nativeSrc": "6317:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6317:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6304:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "6304:12:18"
																},
																"nativeSrc": "6304:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6304:32:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6294:6:18",
																	"nodeType": "YulTypedName",
																	"src": "6294:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6379:16:18",
																"nodeType": "YulBlock",
																"src": "6379:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6388:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6388:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6391:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6391:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6381:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6381:6:18"
																			},
																			"nativeSrc": "6381:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6381:12:18"
																		},
																		"nativeSrc": "6381:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6381:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6351:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6351:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6359:18:18",
																		"nodeType": "YulLiteral",
																		"src": "6359:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6348:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6348:2:18"
																},
																"nativeSrc": "6348:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6348:30:18"
															},
															"nativeSrc": "6345:50:18",
															"nodeType": "YulIf",
															"src": "6345:50:18"
														},
														{
															"nativeSrc": "6404:59:18",
															"nodeType": "YulAssignment",
															"src": "6404:59:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6435:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6435:9:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6446:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6446:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6431:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6431:3:18"
																		},
																		"nativeSrc": "6431:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6431:22:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6455:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "6455:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "6414:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "6414:16:18"
																},
																"nativeSrc": "6414:49:18",
																"nodeType": "YulFunctionCall",
																"src": "6414:49:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6404:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6404:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "5961:508:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6024:9:18",
														"nodeType": "YulTypedName",
														"src": "6024:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6035:7:18",
														"nodeType": "YulTypedName",
														"src": "6035:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6047:6:18",
														"nodeType": "YulTypedName",
														"src": "6047:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6055:6:18",
														"nodeType": "YulTypedName",
														"src": "6055:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6063:6:18",
														"nodeType": "YulTypedName",
														"src": "6063:6:18",
														"type": ""
													}
												],
												"src": "5961:508:18"
											},
											{
												"body": {
													"nativeSrc": "6648:162:18",
													"nodeType": "YulBlock",
													"src": "6648:162:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6665:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6665:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6676:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6676:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6658:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6658:6:18"
																},
																"nativeSrc": "6658:21:18",
																"nodeType": "YulFunctionCall",
																"src": "6658:21:18"
															},
															"nativeSrc": "6658:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "6658:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6699:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6699:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6710:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6710:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6695:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6695:3:18"
																		},
																		"nativeSrc": "6695:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6695:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6715:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6715:2:18",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6688:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6688:6:18"
																},
																"nativeSrc": "6688:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6688:30:18"
															},
															"nativeSrc": "6688:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "6688:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6738:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6738:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6749:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6749:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6734:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6734:3:18"
																		},
																		"nativeSrc": "6734:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6734:18:18"
																	},
																	{
																		"hexValue": "4e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "6754:14:18",
																		"nodeType": "YulLiteral",
																		"src": "6754:14:18",
																		"type": "",
																		"value": "Not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6727:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6727:6:18"
																},
																"nativeSrc": "6727:42:18",
																"nodeType": "YulFunctionCall",
																"src": "6727:42:18"
															},
															"nativeSrc": "6727:42:18",
															"nodeType": "YulExpressionStatement",
															"src": "6727:42:18"
														},
														{
															"nativeSrc": "6778:26:18",
															"nodeType": "YulAssignment",
															"src": "6778:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6790:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6790:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6801:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6801:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6786:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6786:3:18"
																},
																"nativeSrc": "6786:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6786:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6778:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6778:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6474:336:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6625:9:18",
														"nodeType": "YulTypedName",
														"src": "6625:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6639:4:18",
														"nodeType": "YulTypedName",
														"src": "6639:4:18",
														"type": ""
													}
												],
												"src": "6474:336:18"
											},
											{
												"body": {
													"nativeSrc": "6989:176:18",
													"nodeType": "YulBlock",
													"src": "6989:176:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7006:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7006:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7017:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7017:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6999:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6999:6:18"
																},
																"nativeSrc": "6999:21:18",
																"nodeType": "YulFunctionCall",
																"src": "6999:21:18"
															},
															"nativeSrc": "6999:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "6999:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7040:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7040:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7051:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7051:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7036:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7036:3:18"
																		},
																		"nativeSrc": "7036:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7036:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7056:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7056:2:18",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7029:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7029:6:18"
																},
																"nativeSrc": "7029:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7029:30:18"
															},
															"nativeSrc": "7029:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7029:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7079:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7079:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7090:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7090:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7075:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7075:3:18"
																		},
																		"nativeSrc": "7075:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7075:18:18"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e20646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "7095:28:18",
																		"nodeType": "YulLiteral",
																		"src": "7095:28:18",
																		"type": "",
																		"value": "Transaction does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7068:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7068:6:18"
																},
																"nativeSrc": "7068:56:18",
																"nodeType": "YulFunctionCall",
																"src": "7068:56:18"
															},
															"nativeSrc": "7068:56:18",
															"nodeType": "YulExpressionStatement",
															"src": "7068:56:18"
														},
														{
															"nativeSrc": "7133:26:18",
															"nodeType": "YulAssignment",
															"src": "7133:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7145:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7145:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7156:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7156:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7141:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7141:3:18"
																},
																"nativeSrc": "7141:18:18",
																"nodeType": "YulFunctionCall",
																"src": "7141:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7133:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7133:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cb323e46bbcca91e157c2b50ad4ce2acbe1153338b838c84372d5723b8995ef0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6815:350:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6966:9:18",
														"nodeType": "YulTypedName",
														"src": "6966:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6980:4:18",
														"nodeType": "YulTypedName",
														"src": "6980:4:18",
														"type": ""
													}
												],
												"src": "6815:350:18"
											},
											{
												"body": {
													"nativeSrc": "7202:95:18",
													"nodeType": "YulBlock",
													"src": "7202:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7219:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7219:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7226:3:18",
																				"nodeType": "YulLiteral",
																				"src": "7226:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7231:10:18",
																				"nodeType": "YulLiteral",
																				"src": "7231:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7222:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7222:3:18"
																		},
																		"nativeSrc": "7222:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7222:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7212:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7212:6:18"
																},
																"nativeSrc": "7212:31:18",
																"nodeType": "YulFunctionCall",
																"src": "7212:31:18"
															},
															"nativeSrc": "7212:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "7212:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7259:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7259:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7262:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7262:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7252:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7252:6:18"
																},
																"nativeSrc": "7252:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7252:15:18"
															},
															"nativeSrc": "7252:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "7252:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7283:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7283:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7286:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7286:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7276:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7276:6:18"
																},
																"nativeSrc": "7276:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7276:15:18"
															},
															"nativeSrc": "7276:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "7276:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7170:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "7170:127:18"
											},
											{
												"body": {
													"nativeSrc": "7476:178:18",
													"nodeType": "YulBlock",
													"src": "7476:178:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7493:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7493:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7504:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7504:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7486:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7486:6:18"
																},
																"nativeSrc": "7486:21:18",
																"nodeType": "YulFunctionCall",
																"src": "7486:21:18"
															},
															"nativeSrc": "7486:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "7486:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7527:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7527:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7538:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7538:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7523:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7523:3:18"
																		},
																		"nativeSrc": "7523:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7523:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7543:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7543:2:18",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7516:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7516:6:18"
																},
																"nativeSrc": "7516:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7516:30:18"
															},
															"nativeSrc": "7516:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7516:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7566:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7566:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7577:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7577:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7562:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7562:3:18"
																		},
																		"nativeSrc": "7562:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7562:18:18"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e20616c7265616479206578656375746564",
																		"kind": "string",
																		"nativeSrc": "7582:30:18",
																		"nodeType": "YulLiteral",
																		"src": "7582:30:18",
																		"type": "",
																		"value": "Transaction already executed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7555:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7555:6:18"
																},
																"nativeSrc": "7555:58:18",
																"nodeType": "YulFunctionCall",
																"src": "7555:58:18"
															},
															"nativeSrc": "7555:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "7555:58:18"
														},
														{
															"nativeSrc": "7622:26:18",
															"nodeType": "YulAssignment",
															"src": "7622:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7634:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7634:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7645:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7645:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7630:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7630:3:18"
																},
																"nativeSrc": "7630:18:18",
																"nodeType": "YulFunctionCall",
																"src": "7630:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7622:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7622:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c3f7cf602281cf7a98efd78d98ba46309975dadee18bcb57e640145699bd800__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7302:352:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7453:9:18",
														"nodeType": "YulTypedName",
														"src": "7453:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7467:4:18",
														"nodeType": "YulTypedName",
														"src": "7467:4:18",
														"type": ""
													}
												],
												"src": "7302:352:18"
											},
											{
												"body": {
													"nativeSrc": "7833:175:18",
													"nodeType": "YulBlock",
													"src": "7833:175:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7850:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7850:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7861:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7861:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7843:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7843:6:18"
																},
																"nativeSrc": "7843:21:18",
																"nodeType": "YulFunctionCall",
																"src": "7843:21:18"
															},
															"nativeSrc": "7843:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "7843:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7884:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7884:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7895:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7895:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7880:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7880:3:18"
																		},
																		"nativeSrc": "7880:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7880:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7900:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7900:2:18",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7873:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7873:6:18"
																},
																"nativeSrc": "7873:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7873:30:18"
															},
															"nativeSrc": "7873:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7873:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7923:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7923:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7934:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7934:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7919:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7919:3:18"
																		},
																		"nativeSrc": "7919:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7919:18:18"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e206e6f7420636f6e6669726d6564",
																		"kind": "string",
																		"nativeSrc": "7939:27:18",
																		"nodeType": "YulLiteral",
																		"src": "7939:27:18",
																		"type": "",
																		"value": "Transaction not confirmed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7912:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7912:6:18"
																},
																"nativeSrc": "7912:55:18",
																"nodeType": "YulFunctionCall",
																"src": "7912:55:18"
															},
															"nativeSrc": "7912:55:18",
															"nodeType": "YulExpressionStatement",
															"src": "7912:55:18"
														},
														{
															"nativeSrc": "7976:26:18",
															"nodeType": "YulAssignment",
															"src": "7976:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7988:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7988:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7999:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7999:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7984:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7984:3:18"
																},
																"nativeSrc": "7984:18:18",
																"nodeType": "YulFunctionCall",
																"src": "7984:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7976:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7976:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e3d0a597e455a5df21f74650a7518ab8d226371e3763bb9c00413fb3af8193f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7659:349:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7810:9:18",
														"nodeType": "YulTypedName",
														"src": "7810:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7824:4:18",
														"nodeType": "YulTypedName",
														"src": "7824:4:18",
														"type": ""
													}
												],
												"src": "7659:349:18"
											},
											{
												"body": {
													"nativeSrc": "8045:95:18",
													"nodeType": "YulBlock",
													"src": "8045:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8062:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8062:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8069:3:18",
																				"nodeType": "YulLiteral",
																				"src": "8069:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8074:10:18",
																				"nodeType": "YulLiteral",
																				"src": "8074:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8065:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8065:3:18"
																		},
																		"nativeSrc": "8065:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8065:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8055:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8055:6:18"
																},
																"nativeSrc": "8055:31:18",
																"nodeType": "YulFunctionCall",
																"src": "8055:31:18"
															},
															"nativeSrc": "8055:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "8055:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8102:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8102:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8105:4:18",
																		"nodeType": "YulLiteral",
																		"src": "8105:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8095:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8095:6:18"
																},
																"nativeSrc": "8095:15:18",
																"nodeType": "YulFunctionCall",
																"src": "8095:15:18"
															},
															"nativeSrc": "8095:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "8095:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8126:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8126:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8129:4:18",
																		"nodeType": "YulLiteral",
																		"src": "8129:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8119:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8119:6:18"
																},
																"nativeSrc": "8119:15:18",
																"nodeType": "YulFunctionCall",
																"src": "8119:15:18"
															},
															"nativeSrc": "8119:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "8119:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8013:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "8013:127:18"
											},
											{
												"body": {
													"nativeSrc": "8194:79:18",
													"nodeType": "YulBlock",
													"src": "8194:79:18",
													"statements": [
														{
															"nativeSrc": "8204:17:18",
															"nodeType": "YulAssignment",
															"src": "8204:17:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8216:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "8216:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8219:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "8219:1:18"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8212:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8212:3:18"
																},
																"nativeSrc": "8212:9:18",
																"nodeType": "YulFunctionCall",
																"src": "8212:9:18"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8204:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8204:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8245:22:18",
																"nodeType": "YulBlock",
																"src": "8245:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8247:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "8247:16:18"
																			},
																			"nativeSrc": "8247:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8247:18:18"
																		},
																		"nativeSrc": "8247:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8247:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8236:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8236:4:18"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8242:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "8242:1:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8233:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "8233:2:18"
																},
																"nativeSrc": "8233:11:18",
																"nodeType": "YulFunctionCall",
																"src": "8233:11:18"
															},
															"nativeSrc": "8230:37:18",
															"nodeType": "YulIf",
															"src": "8230:37:18"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8145:128:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8176:1:18",
														"nodeType": "YulTypedName",
														"src": "8176:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8179:1:18",
														"nodeType": "YulTypedName",
														"src": "8179:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8185:4:18",
														"nodeType": "YulTypedName",
														"src": "8185:4:18",
														"type": ""
													}
												],
												"src": "8145:128:18"
											},
											{
												"body": {
													"nativeSrc": "8386:101:18",
													"nodeType": "YulBlock",
													"src": "8386:101:18",
													"statements": [
														{
															"nativeSrc": "8396:26:18",
															"nodeType": "YulAssignment",
															"src": "8396:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8408:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8408:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8419:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8419:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8404:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8404:3:18"
																},
																"nativeSrc": "8404:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8404:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8396:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8396:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8438:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8438:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8453:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8453:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8461:18:18",
																				"nodeType": "YulLiteral",
																				"src": "8461:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8449:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8449:3:18"
																		},
																		"nativeSrc": "8449:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8449:31:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8431:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8431:6:18"
																},
																"nativeSrc": "8431:50:18",
																"nodeType": "YulFunctionCall",
																"src": "8431:50:18"
															},
															"nativeSrc": "8431:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "8431:50:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "8278:209:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8355:9:18",
														"nodeType": "YulTypedName",
														"src": "8355:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8366:6:18",
														"nodeType": "YulTypedName",
														"src": "8366:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8377:4:18",
														"nodeType": "YulTypedName",
														"src": "8377:4:18",
														"type": ""
													}
												],
												"src": "8278:209:18"
											},
											{
												"body": {
													"nativeSrc": "8649:214:18",
													"nodeType": "YulBlock",
													"src": "8649:214:18",
													"statements": [
														{
															"nativeSrc": "8659:26:18",
															"nodeType": "YulAssignment",
															"src": "8659:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8671:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8671:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8682:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8682:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8667:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8667:3:18"
																},
																"nativeSrc": "8667:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8667:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8659:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8659:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8701:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8701:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8716:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8716:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8732:3:18",
																								"nodeType": "YulLiteral",
																								"src": "8732:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8737:1:18",
																								"nodeType": "YulLiteral",
																								"src": "8737:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8728:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "8728:3:18"
																						},
																						"nativeSrc": "8728:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "8728:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8741:1:18",
																						"nodeType": "YulLiteral",
																						"src": "8741:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8724:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8724:3:18"
																				},
																				"nativeSrc": "8724:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8724:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8712:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8712:3:18"
																		},
																		"nativeSrc": "8712:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8712:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8694:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8694:6:18"
																},
																"nativeSrc": "8694:51:18",
																"nodeType": "YulFunctionCall",
																"src": "8694:51:18"
															},
															"nativeSrc": "8694:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "8694:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8765:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8765:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8776:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8776:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8761:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8761:3:18"
																		},
																		"nativeSrc": "8761:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8761:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8785:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8785:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8801:3:18",
																								"nodeType": "YulLiteral",
																								"src": "8801:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8806:1:18",
																								"nodeType": "YulLiteral",
																								"src": "8806:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8797:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "8797:3:18"
																						},
																						"nativeSrc": "8797:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "8797:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8810:1:18",
																						"nodeType": "YulLiteral",
																						"src": "8810:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8793:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8793:3:18"
																				},
																				"nativeSrc": "8793:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8793:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8781:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8781:3:18"
																		},
																		"nativeSrc": "8781:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8781:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8754:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8754:6:18"
																},
																"nativeSrc": "8754:60:18",
																"nodeType": "YulFunctionCall",
																"src": "8754:60:18"
															},
															"nativeSrc": "8754:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "8754:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8834:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8834:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8845:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8845:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8830:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8830:3:18"
																		},
																		"nativeSrc": "8830:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8830:18:18"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8850:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8850:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8823:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8823:6:18"
																},
																"nativeSrc": "8823:34:18",
																"nodeType": "YulFunctionCall",
																"src": "8823:34:18"
															},
															"nativeSrc": "8823:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "8823:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8492:371:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8602:9:18",
														"nodeType": "YulTypedName",
														"src": "8602:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8613:6:18",
														"nodeType": "YulTypedName",
														"src": "8613:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8621:6:18",
														"nodeType": "YulTypedName",
														"src": "8621:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8629:6:18",
														"nodeType": "YulTypedName",
														"src": "8629:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8640:4:18",
														"nodeType": "YulTypedName",
														"src": "8640:4:18",
														"type": ""
													}
												],
												"src": "8492:371:18"
											},
											{
												"body": {
													"nativeSrc": "8946:199:18",
													"nodeType": "YulBlock",
													"src": "8946:199:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8992:16:18",
																"nodeType": "YulBlock",
																"src": "8992:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9001:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9001:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9004:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9004:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8994:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8994:6:18"
																			},
																			"nativeSrc": "8994:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8994:12:18"
																		},
																		"nativeSrc": "8994:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8994:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8967:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8967:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8976:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8976:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8963:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8963:3:18"
																		},
																		"nativeSrc": "8963:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8963:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8988:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8988:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8959:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8959:3:18"
																},
																"nativeSrc": "8959:32:18",
																"nodeType": "YulFunctionCall",
																"src": "8959:32:18"
															},
															"nativeSrc": "8956:52:18",
															"nodeType": "YulIf",
															"src": "8956:52:18"
														},
														{
															"nativeSrc": "9017:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "9017:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9036:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9036:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9030:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "9030:5:18"
																},
																"nativeSrc": "9030:16:18",
																"nodeType": "YulFunctionCall",
																"src": "9030:16:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9021:5:18",
																	"nodeType": "YulTypedName",
																	"src": "9021:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9099:16:18",
																"nodeType": "YulBlock",
																"src": "9099:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9108:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9108:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9111:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9111:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9101:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9101:6:18"
																			},
																			"nativeSrc": "9101:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9101:12:18"
																		},
																		"nativeSrc": "9101:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9101:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9068:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "9068:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "9089:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "9089:5:18"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "9082:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "9082:6:18"
																						},
																						"nativeSrc": "9082:13:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9082:13:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9075:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "9075:6:18"
																				},
																				"nativeSrc": "9075:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9075:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9065:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "9065:2:18"
																		},
																		"nativeSrc": "9065:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9065:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9058:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9058:6:18"
																},
																"nativeSrc": "9058:40:18",
																"nodeType": "YulFunctionCall",
																"src": "9058:40:18"
															},
															"nativeSrc": "9055:60:18",
															"nodeType": "YulIf",
															"src": "9055:60:18"
														},
														{
															"nativeSrc": "9124:15:18",
															"nodeType": "YulAssignment",
															"src": "9124:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "9134:5:18",
																"nodeType": "YulIdentifier",
																"src": "9134:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9124:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9124:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8868:277:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8912:9:18",
														"nodeType": "YulTypedName",
														"src": "8912:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8923:7:18",
														"nodeType": "YulTypedName",
														"src": "8923:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8935:6:18",
														"nodeType": "YulTypedName",
														"src": "8935:6:18",
														"type": ""
													}
												],
												"src": "8868:277:18"
											},
											{
												"body": {
													"nativeSrc": "9324:171:18",
													"nodeType": "YulBlock",
													"src": "9324:171:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9341:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9341:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9352:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9352:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9334:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9334:6:18"
																},
																"nativeSrc": "9334:21:18",
																"nodeType": "YulFunctionCall",
																"src": "9334:21:18"
															},
															"nativeSrc": "9334:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "9334:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9375:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9375:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9386:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9386:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9371:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9371:3:18"
																		},
																		"nativeSrc": "9371:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9371:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9391:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9391:2:18",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9364:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9364:6:18"
																},
																"nativeSrc": "9364:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9364:30:18"
															},
															"nativeSrc": "9364:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "9364:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9414:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9414:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9425:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9425:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9410:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9410:3:18"
																		},
																		"nativeSrc": "9410:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9410:18:18"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "9430:23:18",
																		"nodeType": "YulLiteral",
																		"src": "9430:23:18",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9403:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9403:6:18"
																},
																"nativeSrc": "9403:51:18",
																"nodeType": "YulFunctionCall",
																"src": "9403:51:18"
															},
															"nativeSrc": "9403:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "9403:51:18"
														},
														{
															"nativeSrc": "9463:26:18",
															"nodeType": "YulAssignment",
															"src": "9463:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9475:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9475:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9486:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9486:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9471:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9471:3:18"
																},
																"nativeSrc": "9471:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9471:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9463:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9463:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9150:345:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9301:9:18",
														"nodeType": "YulTypedName",
														"src": "9301:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9315:4:18",
														"nodeType": "YulTypedName",
														"src": "9315:4:18",
														"type": ""
													}
												],
												"src": "9150:345:18"
											},
											{
												"body": {
													"nativeSrc": "9555:325:18",
													"nodeType": "YulBlock",
													"src": "9555:325:18",
													"statements": [
														{
															"nativeSrc": "9565:22:18",
															"nodeType": "YulAssignment",
															"src": "9565:22:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9579:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9579:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "9582:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "9582:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9575:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9575:3:18"
																},
																"nativeSrc": "9575:12:18",
																"nodeType": "YulFunctionCall",
																"src": "9575:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9565:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9565:6:18"
																}
															]
														},
														{
															"nativeSrc": "9596:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "9596:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9626:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "9626:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9632:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9632:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9622:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9622:3:18"
																},
																"nativeSrc": "9622:12:18",
																"nodeType": "YulFunctionCall",
																"src": "9622:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9600:18:18",
																	"nodeType": "YulTypedName",
																	"src": "9600:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9673:31:18",
																"nodeType": "YulBlock",
																"src": "9673:31:18",
																"statements": [
																	{
																		"nativeSrc": "9675:27:18",
																		"nodeType": "YulAssignment",
																		"src": "9675:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9689:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "9689:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9697:4:18",
																					"nodeType": "YulLiteral",
																					"src": "9697:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9685:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9685:3:18"
																			},
																			"nativeSrc": "9685:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9685:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9675:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9675:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9653:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "9653:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9646:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9646:6:18"
																},
																"nativeSrc": "9646:26:18",
																"nodeType": "YulFunctionCall",
																"src": "9646:26:18"
															},
															"nativeSrc": "9643:61:18",
															"nodeType": "YulIf",
															"src": "9643:61:18"
														},
														{
															"body": {
																"nativeSrc": "9763:111:18",
																"nodeType": "YulBlock",
																"src": "9763:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9784:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9784:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9791:3:18",
																							"nodeType": "YulLiteral",
																							"src": "9791:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9796:10:18",
																							"nodeType": "YulLiteral",
																							"src": "9796:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9787:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "9787:3:18"
																					},
																					"nativeSrc": "9787:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9787:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9777:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9777:6:18"
																			},
																			"nativeSrc": "9777:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9777:31:18"
																		},
																		"nativeSrc": "9777:31:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9777:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9828:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9828:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9831:4:18",
																					"nodeType": "YulLiteral",
																					"src": "9831:4:18",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9821:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9821:6:18"
																			},
																			"nativeSrc": "9821:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9821:15:18"
																		},
																		"nativeSrc": "9821:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9821:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9856:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9856:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9859:4:18",
																					"nodeType": "YulLiteral",
																					"src": "9859:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9849:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9849:6:18"
																			},
																			"nativeSrc": "9849:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9849:15:18"
																		},
																		"nativeSrc": "9849:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9849:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9719:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "9719:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9742:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9742:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9750:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9750:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9739:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "9739:2:18"
																		},
																		"nativeSrc": "9739:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9739:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9716:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9716:2:18"
																},
																"nativeSrc": "9716:38:18",
																"nodeType": "YulFunctionCall",
																"src": "9716:38:18"
															},
															"nativeSrc": "9713:161:18",
															"nodeType": "YulIf",
															"src": "9713:161:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9500:380:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9535:4:18",
														"nodeType": "YulTypedName",
														"src": "9535:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9544:6:18",
														"nodeType": "YulTypedName",
														"src": "9544:6:18",
														"type": ""
													}
												],
												"src": "9500:380:18"
											},
											{
												"body": {
													"nativeSrc": "10059:166:18",
													"nodeType": "YulBlock",
													"src": "10059:166:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10076:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10076:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10087:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10087:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10069:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10069:6:18"
																},
																"nativeSrc": "10069:21:18",
																"nodeType": "YulFunctionCall",
																"src": "10069:21:18"
															},
															"nativeSrc": "10069:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "10069:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10110:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10110:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10121:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10121:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10106:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10106:3:18"
																		},
																		"nativeSrc": "10106:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10106:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10126:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10126:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10099:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10099:6:18"
																},
																"nativeSrc": "10099:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10099:30:18"
															},
															"nativeSrc": "10099:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "10099:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10149:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10149:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10160:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10160:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10145:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10145:3:18"
																		},
																		"nativeSrc": "10145:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10145:18:18"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73207374616b6564",
																		"kind": "string",
																		"nativeSrc": "10165:18:18",
																		"nodeType": "YulLiteral",
																		"src": "10165:18:18",
																		"type": "",
																		"value": "No tokens staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10138:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10138:6:18"
																},
																"nativeSrc": "10138:46:18",
																"nodeType": "YulFunctionCall",
																"src": "10138:46:18"
															},
															"nativeSrc": "10138:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "10138:46:18"
														},
														{
															"nativeSrc": "10193:26:18",
															"nodeType": "YulAssignment",
															"src": "10193:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10205:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10205:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10216:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10216:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10201:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10201:3:18"
																},
																"nativeSrc": "10201:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10201:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10193:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10193:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9885:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10036:9:18",
														"nodeType": "YulTypedName",
														"src": "10036:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10050:4:18",
														"nodeType": "YulTypedName",
														"src": "10050:4:18",
														"type": ""
													}
												],
												"src": "9885:340:18"
											},
											{
												"body": {
													"nativeSrc": "10282:116:18",
													"nodeType": "YulBlock",
													"src": "10282:116:18",
													"statements": [
														{
															"nativeSrc": "10292:20:18",
															"nodeType": "YulAssignment",
															"src": "10292:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10307:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10307:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10310:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10310:1:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10303:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10303:3:18"
																},
																"nativeSrc": "10303:9:18",
																"nodeType": "YulFunctionCall",
																"src": "10303:9:18"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10292:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "10292:7:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10370:22:18",
																"nodeType": "YulBlock",
																"src": "10370:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10372:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "10372:16:18"
																			},
																			"nativeSrc": "10372:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10372:18:18"
																		},
																		"nativeSrc": "10372:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10372:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10341:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "10341:1:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10334:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "10334:6:18"
																				},
																				"nativeSrc": "10334:9:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10334:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10348:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "10348:1:18"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10355:7:18",
																								"nodeType": "YulIdentifier",
																								"src": "10355:7:18"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10364:1:18",
																								"nodeType": "YulIdentifier",
																								"src": "10364:1:18"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10351:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "10351:3:18"
																						},
																						"nativeSrc": "10351:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "10351:15:18"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10345:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "10345:2:18"
																				},
																				"nativeSrc": "10345:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10345:22:18"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10331:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "10331:2:18"
																		},
																		"nativeSrc": "10331:37:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10331:37:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10324:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10324:6:18"
																},
																"nativeSrc": "10324:45:18",
																"nodeType": "YulFunctionCall",
																"src": "10324:45:18"
															},
															"nativeSrc": "10321:71:18",
															"nodeType": "YulIf",
															"src": "10321:71:18"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10230:168:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10261:1:18",
														"nodeType": "YulTypedName",
														"src": "10261:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10264:1:18",
														"nodeType": "YulTypedName",
														"src": "10264:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10270:7:18",
														"nodeType": "YulTypedName",
														"src": "10270:7:18",
														"type": ""
													}
												],
												"src": "10230:168:18"
											},
											{
												"body": {
													"nativeSrc": "10449:171:18",
													"nodeType": "YulBlock",
													"src": "10449:171:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10480:111:18",
																"nodeType": "YulBlock",
																"src": "10480:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10501:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10501:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10508:3:18",
																							"nodeType": "YulLiteral",
																							"src": "10508:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10513:10:18",
																							"nodeType": "YulLiteral",
																							"src": "10513:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10504:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "10504:3:18"
																					},
																					"nativeSrc": "10504:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10504:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10494:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10494:6:18"
																			},
																			"nativeSrc": "10494:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10494:31:18"
																		},
																		"nativeSrc": "10494:31:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10494:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10545:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10545:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10548:4:18",
																					"nodeType": "YulLiteral",
																					"src": "10548:4:18",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10538:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10538:6:18"
																			},
																			"nativeSrc": "10538:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10538:15:18"
																		},
																		"nativeSrc": "10538:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10538:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10573:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10573:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10576:4:18",
																					"nodeType": "YulLiteral",
																					"src": "10576:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10566:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10566:6:18"
																			},
																			"nativeSrc": "10566:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10566:15:18"
																		},
																		"nativeSrc": "10566:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10566:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10469:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10469:1:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10462:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10462:6:18"
																},
																"nativeSrc": "10462:9:18",
																"nodeType": "YulFunctionCall",
																"src": "10462:9:18"
															},
															"nativeSrc": "10459:132:18",
															"nodeType": "YulIf",
															"src": "10459:132:18"
														},
														{
															"nativeSrc": "10600:14:18",
															"nodeType": "YulAssignment",
															"src": "10600:14:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10609:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10609:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10612:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10612:1:18"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10605:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10605:3:18"
																},
																"nativeSrc": "10605:9:18",
																"nodeType": "YulFunctionCall",
																"src": "10605:9:18"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10600:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "10600:1:18"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10403:217:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10434:1:18",
														"nodeType": "YulTypedName",
														"src": "10434:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10437:1:18",
														"nodeType": "YulTypedName",
														"src": "10437:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10443:1:18",
														"nodeType": "YulTypedName",
														"src": "10443:1:18",
														"type": ""
													}
												],
												"src": "10403:217:18"
											},
											{
												"body": {
													"nativeSrc": "10673:77:18",
													"nodeType": "YulBlock",
													"src": "10673:77:18",
													"statements": [
														{
															"nativeSrc": "10683:16:18",
															"nodeType": "YulAssignment",
															"src": "10683:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10694:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10694:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10697:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10697:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10690:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10690:3:18"
																},
																"nativeSrc": "10690:9:18",
																"nodeType": "YulFunctionCall",
																"src": "10690:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10683:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10683:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10722:22:18",
																"nodeType": "YulBlock",
																"src": "10722:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10724:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "10724:16:18"
																			},
																			"nativeSrc": "10724:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10724:18:18"
																		},
																		"nativeSrc": "10724:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10724:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10714:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10714:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10717:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10717:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10711:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10711:2:18"
																},
																"nativeSrc": "10711:10:18",
																"nodeType": "YulFunctionCall",
																"src": "10711:10:18"
															},
															"nativeSrc": "10708:36:18",
															"nodeType": "YulIf",
															"src": "10708:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10625:125:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10656:1:18",
														"nodeType": "YulTypedName",
														"src": "10656:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10659:1:18",
														"nodeType": "YulTypedName",
														"src": "10659:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10665:3:18",
														"nodeType": "YulTypedName",
														"src": "10665:3:18",
														"type": ""
													}
												],
												"src": "10625:125:18"
											},
											{
												"body": {
													"nativeSrc": "10884:145:18",
													"nodeType": "YulBlock",
													"src": "10884:145:18",
													"statements": [
														{
															"nativeSrc": "10894:26:18",
															"nodeType": "YulAssignment",
															"src": "10894:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10906:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10906:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10917:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10917:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10902:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10902:3:18"
																},
																"nativeSrc": "10902:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10902:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10894:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10894:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10936:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10936:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10951:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10951:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10967:3:18",
																								"nodeType": "YulLiteral",
																								"src": "10967:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10972:1:18",
																								"nodeType": "YulLiteral",
																								"src": "10972:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10963:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "10963:3:18"
																						},
																						"nativeSrc": "10963:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "10963:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10976:1:18",
																						"nodeType": "YulLiteral",
																						"src": "10976:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10959:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10959:3:18"
																				},
																				"nativeSrc": "10959:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10959:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10947:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10947:3:18"
																		},
																		"nativeSrc": "10947:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10947:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10929:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10929:6:18"
																},
																"nativeSrc": "10929:51:18",
																"nodeType": "YulFunctionCall",
																"src": "10929:51:18"
															},
															"nativeSrc": "10929:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "10929:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11000:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11000:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11011:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11011:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10996:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10996:3:18"
																		},
																		"nativeSrc": "10996:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10996:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11016:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11016:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10989:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10989:6:18"
																},
																"nativeSrc": "10989:34:18",
																"nodeType": "YulFunctionCall",
																"src": "10989:34:18"
															},
															"nativeSrc": "10989:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "10989:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10755:274:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10845:9:18",
														"nodeType": "YulTypedName",
														"src": "10845:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10856:6:18",
														"nodeType": "YulTypedName",
														"src": "10856:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10864:6:18",
														"nodeType": "YulTypedName",
														"src": "10864:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10875:4:18",
														"nodeType": "YulTypedName",
														"src": "10875:4:18",
														"type": ""
													}
												],
												"src": "10755:274:18"
											},
											{
												"body": {
													"nativeSrc": "11208:179:18",
													"nodeType": "YulBlock",
													"src": "11208:179:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11225:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11225:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11236:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11236:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11218:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11218:6:18"
																},
																"nativeSrc": "11218:21:18",
																"nodeType": "YulFunctionCall",
																"src": "11218:21:18"
															},
															"nativeSrc": "11218:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "11218:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11259:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11259:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11270:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11270:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11255:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11255:3:18"
																		},
																		"nativeSrc": "11255:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11255:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11275:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11275:2:18",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11248:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11248:6:18"
																},
																"nativeSrc": "11248:30:18",
																"nodeType": "YulFunctionCall",
																"src": "11248:30:18"
															},
															"nativeSrc": "11248:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "11248:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11298:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11298:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11309:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11309:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11294:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11294:3:18"
																		},
																		"nativeSrc": "11294:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11294:18:18"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e20616c726561647920636f6e6669726d6564",
																		"kind": "string",
																		"nativeSrc": "11314:31:18",
																		"nodeType": "YulLiteral",
																		"src": "11314:31:18",
																		"type": "",
																		"value": "Transaction already confirmed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11287:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11287:6:18"
																},
																"nativeSrc": "11287:59:18",
																"nodeType": "YulFunctionCall",
																"src": "11287:59:18"
															},
															"nativeSrc": "11287:59:18",
															"nodeType": "YulExpressionStatement",
															"src": "11287:59:18"
														},
														{
															"nativeSrc": "11355:26:18",
															"nodeType": "YulAssignment",
															"src": "11355:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11367:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11367:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11378:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11378:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11363:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11363:3:18"
																},
																"nativeSrc": "11363:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11363:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11355:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11355:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c00ff6506fc53457ae4202871882703dada01c533275bb259e2cd12acaf31a69__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11034:353:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11185:9:18",
														"nodeType": "YulTypedName",
														"src": "11185:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11199:4:18",
														"nodeType": "YulTypedName",
														"src": "11199:4:18",
														"type": ""
													}
												],
												"src": "11034:353:18"
											},
											{
												"body": {
													"nativeSrc": "11447:65:18",
													"nodeType": "YulBlock",
													"src": "11447:65:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11464:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11464:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "11467:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11467:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11457:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11457:6:18"
																},
																"nativeSrc": "11457:14:18",
																"nodeType": "YulFunctionCall",
																"src": "11457:14:18"
															},
															"nativeSrc": "11457:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "11457:14:18"
														},
														{
															"nativeSrc": "11480:26:18",
															"nodeType": "YulAssignment",
															"src": "11480:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11498:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11498:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11501:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11501:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "11488:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "11488:9:18"
																},
																"nativeSrc": "11488:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11488:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11480:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11480:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_bytes_storage",
												"nativeSrc": "11392:120:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11430:3:18",
														"nodeType": "YulTypedName",
														"src": "11430:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11438:4:18",
														"nodeType": "YulTypedName",
														"src": "11438:4:18",
														"type": ""
													}
												],
												"src": "11392:120:18"
											},
											{
												"body": {
													"nativeSrc": "11597:437:18",
													"nodeType": "YulBlock",
													"src": "11597:437:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11630:398:18",
																"nodeType": "YulBlock",
																"src": "11630:398:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11651:1:18",
																					"nodeType": "YulLiteral",
																					"src": "11651:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "11654:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "11654:5:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11644:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11644:6:18"
																			},
																			"nativeSrc": "11644:16:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11644:16:18"
																		},
																		"nativeSrc": "11644:16:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11644:16:18"
																	},
																	{
																		"nativeSrc": "11673:30:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11673:30:18",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11695:1:18",
																					"nodeType": "YulLiteral",
																					"src": "11695:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11698:4:18",
																					"nodeType": "YulLiteral",
																					"src": "11698:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "11685:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11685:9:18"
																			},
																			"nativeSrc": "11685:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11685:18:18"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "11677:4:18",
																				"nodeType": "YulTypedName",
																				"src": "11677:4:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11716:57:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11716:57:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "11739:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "11739:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11749:1:18",
																							"nodeType": "YulLiteral",
																							"src": "11749:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "11756:10:18",
																									"nodeType": "YulIdentifier",
																									"src": "11756:10:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11768:2:18",
																									"nodeType": "YulLiteral",
																									"src": "11768:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11752:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "11752:3:18"
																							},
																							"nativeSrc": "11752:19:18",
																							"nodeType": "YulFunctionCall",
																							"src": "11752:19:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "11745:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "11745:3:18"
																					},
																					"nativeSrc": "11745:27:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11745:27:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11735:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "11735:3:18"
																			},
																			"nativeSrc": "11735:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11735:38:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "11720:11:18",
																				"nodeType": "YulTypedName",
																				"src": "11720:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11810:23:18",
																			"nodeType": "YulBlock",
																			"src": "11810:23:18",
																			"statements": [
																				{
																					"nativeSrc": "11812:19:18",
																					"nodeType": "YulAssignment",
																					"src": "11812:19:18",
																					"value": {
																						"name": "data",
																						"nativeSrc": "11827:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "11827:4:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "11812:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "11812:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "11792:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "11792:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11804:4:18",
																					"nodeType": "YulLiteral",
																					"src": "11804:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11789:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "11789:2:18"
																			},
																			"nativeSrc": "11789:20:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11789:20:18"
																		},
																		"nativeSrc": "11786:47:18",
																		"nodeType": "YulIf",
																		"src": "11786:47:18"
																	},
																	{
																		"nativeSrc": "11846:41:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11846:41:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "11860:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "11860:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11870:1:18",
																							"nodeType": "YulLiteral",
																							"src": "11870:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "11877:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "11877:3:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11882:2:18",
																									"nodeType": "YulLiteral",
																									"src": "11882:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11873:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "11873:3:18"
																							},
																							"nativeSrc": "11873:12:18",
																							"nodeType": "YulFunctionCall",
																							"src": "11873:12:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "11866:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "11866:3:18"
																					},
																					"nativeSrc": "11866:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11866:20:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11856:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "11856:3:18"
																			},
																			"nativeSrc": "11856:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11856:31:18"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "11850:2:18",
																				"nodeType": "YulTypedName",
																				"src": "11850:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11900:24:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11900:24:18",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "11913:11:18",
																			"nodeType": "YulIdentifier",
																			"src": "11913:11:18"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "11904:5:18",
																				"nodeType": "YulTypedName",
																				"src": "11904:5:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11998:20:18",
																			"nodeType": "YulBlock",
																			"src": "11998:20:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "12007:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "12007:5:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12014:1:18",
																								"nodeType": "YulLiteral",
																								"src": "12014:1:18",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "12000:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "12000:6:18"
																						},
																						"nativeSrc": "12000:16:18",
																						"nodeType": "YulFunctionCall",
																						"src": "12000:16:18"
																					},
																					"nativeSrc": "12000:16:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "12000:16:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11948:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "11948:5:18"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "11955:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "11955:2:18"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11945:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "11945:2:18"
																			},
																			"nativeSrc": "11945:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11945:13:18"
																		},
																		"nativeSrc": "11937:81:18",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "11959:26:18",
																			"nodeType": "YulBlock",
																			"src": "11959:26:18",
																			"statements": [
																				{
																					"nativeSrc": "11961:22:18",
																					"nodeType": "YulAssignment",
																					"src": "11961:22:18",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "11974:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "11974:5:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11981:1:18",
																								"nodeType": "YulLiteral",
																								"src": "11981:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "11970:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "11970:3:18"
																						},
																						"nativeSrc": "11970:13:18",
																						"nodeType": "YulFunctionCall",
																						"src": "11970:13:18"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "11961:5:18",
																							"nodeType": "YulIdentifier",
																							"src": "11961:5:18"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "11941:3:18",
																			"nodeType": "YulBlock",
																			"src": "11941:3:18",
																			"statements": []
																		},
																		"src": "11937:81:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "11613:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11613:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11618:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11618:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11610:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11610:2:18"
																},
																"nativeSrc": "11610:11:18",
																"nodeType": "YulFunctionCall",
																"src": "11610:11:18"
															},
															"nativeSrc": "11607:421:18",
															"nodeType": "YulIf",
															"src": "11607:421:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_bytes_storage",
												"nativeSrc": "11517:517:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11569:5:18",
														"nodeType": "YulTypedName",
														"src": "11569:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11576:3:18",
														"nodeType": "YulTypedName",
														"src": "11576:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "11581:10:18",
														"nodeType": "YulTypedName",
														"src": "11581:10:18",
														"type": ""
													}
												],
												"src": "11517:517:18"
											},
											{
												"body": {
													"nativeSrc": "12124:81:18",
													"nodeType": "YulBlock",
													"src": "12124:81:18",
													"statements": [
														{
															"nativeSrc": "12134:65:18",
															"nodeType": "YulAssignment",
															"src": "12134:65:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "12149:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "12149:4:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12167:1:18",
																										"nodeType": "YulLiteral",
																										"src": "12167:1:18",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "12170:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "12170:3:18"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "12163:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "12163:3:18"
																								},
																								"nativeSrc": "12163:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "12163:11:18"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12180:1:18",
																										"nodeType": "YulLiteral",
																										"src": "12180:1:18",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "12176:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "12176:3:18"
																								},
																								"nativeSrc": "12176:6:18",
																								"nodeType": "YulFunctionCall",
																								"src": "12176:6:18"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "12159:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "12159:3:18"
																						},
																						"nativeSrc": "12159:24:18",
																						"nodeType": "YulFunctionCall",
																						"src": "12159:24:18"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12155:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12155:3:18"
																				},
																				"nativeSrc": "12155:29:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12155:29:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12145:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12145:3:18"
																		},
																		"nativeSrc": "12145:40:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12145:40:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12191:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12191:1:18",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12194:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "12194:3:18"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12187:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12187:3:18"
																		},
																		"nativeSrc": "12187:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12187:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12142:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12142:2:18"
																},
																"nativeSrc": "12142:57:18",
																"nodeType": "YulFunctionCall",
																"src": "12142:57:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "12134:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12134:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "12039:166:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12101:4:18",
														"nodeType": "YulTypedName",
														"src": "12101:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12107:3:18",
														"nodeType": "YulTypedName",
														"src": "12107:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "12115:4:18",
														"nodeType": "YulTypedName",
														"src": "12115:4:18",
														"type": ""
													}
												],
												"src": "12039:166:18"
											},
											{
												"body": {
													"nativeSrc": "12304:1201:18",
													"nodeType": "YulBlock",
													"src": "12304:1201:18",
													"statements": [
														{
															"nativeSrc": "12314:24:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12314:24:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12334:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12334:3:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12328:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12328:5:18"
																},
																"nativeSrc": "12328:10:18",
																"nodeType": "YulFunctionCall",
																"src": "12328:10:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12318:6:18",
																	"nodeType": "YulTypedName",
																	"src": "12318:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12381:22:18",
																"nodeType": "YulBlock",
																"src": "12381:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12383:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "12383:16:18"
																			},
																			"nativeSrc": "12383:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12383:18:18"
																		},
																		"nativeSrc": "12383:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12383:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12353:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12353:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12361:18:18",
																		"nodeType": "YulLiteral",
																		"src": "12361:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12350:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12350:2:18"
																},
																"nativeSrc": "12350:30:18",
																"nodeType": "YulFunctionCall",
																"src": "12350:30:18"
															},
															"nativeSrc": "12347:56:18",
															"nodeType": "YulIf",
															"src": "12347:56:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12455:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "12455:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "12493:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "12493:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "12487:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "12487:5:18"
																				},
																				"nativeSrc": "12487:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12487:11:18"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "12461:25:18",
																			"nodeType": "YulIdentifier",
																			"src": "12461:25:18"
																		},
																		"nativeSrc": "12461:38:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12461:38:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "12501:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12501:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_bytes_storage",
																	"nativeSrc": "12412:42:18",
																	"nodeType": "YulIdentifier",
																	"src": "12412:42:18"
																},
																"nativeSrc": "12412:96:18",
																"nodeType": "YulFunctionCall",
																"src": "12412:96:18"
															},
															"nativeSrc": "12412:96:18",
															"nodeType": "YulExpressionStatement",
															"src": "12412:96:18"
														},
														{
															"nativeSrc": "12517:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12517:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "12534:1:18",
																"nodeType": "YulLiteral",
																"src": "12534:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12521:9:18",
																	"nodeType": "YulTypedName",
																	"src": "12521:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12544:17:18",
															"nodeType": "YulAssignment",
															"src": "12544:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "12557:4:18",
																"nodeType": "YulLiteral",
																"src": "12557:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12544:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "12544:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12607:641:18",
																		"nodeType": "YulBlock",
																		"src": "12607:641:18",
																		"statements": [
																			{
																				"nativeSrc": "12621:35:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12621:35:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "12640:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "12640:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "12652:2:18",
																									"nodeType": "YulLiteral",
																									"src": "12652:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "12648:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "12648:3:18"
																							},
																							"nativeSrc": "12648:7:18",
																							"nodeType": "YulFunctionCall",
																							"src": "12648:7:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "12636:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "12636:3:18"
																					},
																					"nativeSrc": "12636:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "12636:20:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "12625:7:18",
																						"nodeType": "YulTypedName",
																						"src": "12625:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12669:48:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12669:48:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12712:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "12712:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_bytes_storage",
																						"nativeSrc": "12683:28:18",
																						"nodeType": "YulIdentifier",
																						"src": "12683:28:18"
																					},
																					"nativeSrc": "12683:34:18",
																					"nodeType": "YulFunctionCall",
																					"src": "12683:34:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "12673:6:18",
																						"nodeType": "YulTypedName",
																						"src": "12673:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12730:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12730:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12739:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12739:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "12734:1:18",
																						"nodeType": "YulTypedName",
																						"src": "12734:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12810:165:18",
																					"nodeType": "YulBlock",
																					"src": "12810:165:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12835:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "12835:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "12853:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "12853:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "12858:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "12858:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "12849:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "12849:3:18"
																												},
																												"nativeSrc": "12849:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "12849:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "12843:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "12843:5:18"
																										},
																										"nativeSrc": "12843:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "12843:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "12828:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "12828:6:18"
																								},
																								"nativeSrc": "12828:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "12828:42:18"
																							},
																							"nativeSrc": "12828:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "12828:42:18"
																						},
																						{
																							"nativeSrc": "12887:24:18",
																							"nodeType": "YulAssignment",
																							"src": "12887:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12901:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "12901:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12909:1:18",
																										"nodeType": "YulLiteral",
																										"src": "12909:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12897:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "12897:3:18"
																								},
																								"nativeSrc": "12897:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "12897:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "12887:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "12887:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "12928:33:18",
																							"nodeType": "YulAssignment",
																							"src": "12928:33:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "12945:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "12945:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12956:4:18",
																										"nodeType": "YulLiteral",
																										"src": "12956:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12941:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "12941:3:18"
																								},
																								"nativeSrc": "12941:20:18",
																								"nodeType": "YulFunctionCall",
																								"src": "12941:20:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "12928:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "12928:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "12764:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "12764:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12767:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "12767:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12761:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "12761:2:18"
																					},
																					"nativeSrc": "12761:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "12761:14:18"
																				},
																				"nativeSrc": "12753:222:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "12776:21:18",
																					"nodeType": "YulBlock",
																					"src": "12776:21:18",
																					"statements": [
																						{
																							"nativeSrc": "12778:17:18",
																							"nodeType": "YulAssignment",
																							"src": "12778:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "12787:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "12787:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12790:4:18",
																										"nodeType": "YulLiteral",
																										"src": "12790:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12783:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "12783:3:18"
																								},
																								"nativeSrc": "12783:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "12783:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "12778:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "12778:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "12757:3:18",
																					"nodeType": "YulBlock",
																					"src": "12757:3:18",
																					"statements": []
																				},
																				"src": "12753:222:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "13023:166:18",
																					"nodeType": "YulBlock",
																					"src": "13023:166:18",
																					"statements": [
																						{
																							"nativeSrc": "13041:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "13041:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13068:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "13068:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13073:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "13073:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13064:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "13064:3:18"
																										},
																										"nativeSrc": "13064:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "13064:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13058:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "13058:5:18"
																								},
																								"nativeSrc": "13058:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "13058:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "13045:9:18",
																									"nodeType": "YulTypedName",
																									"src": "13045:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13108:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "13108:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "13120:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "13120:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "13147:1:18",
																																				"nodeType": "YulLiteral",
																																				"src": "13147:1:18",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "13150:6:18",
																																				"nodeType": "YulIdentifier",
																																				"src": "13150:6:18"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "13143:3:18",
																																			"nodeType": "YulIdentifier",
																																			"src": "13143:3:18"
																																		},
																																		"nativeSrc": "13143:14:18",
																																		"nodeType": "YulFunctionCall",
																																		"src": "13143:14:18"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13159:3:18",
																																		"nodeType": "YulLiteral",
																																		"src": "13159:3:18",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "13139:3:18",
																																	"nodeType": "YulIdentifier",
																																	"src": "13139:3:18"
																																},
																																"nativeSrc": "13139:24:18",
																																"nodeType": "YulFunctionCall",
																																"src": "13139:24:18"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13169:1:18",
																																		"nodeType": "YulLiteral",
																																		"src": "13169:1:18",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "13165:3:18",
																																	"nodeType": "YulIdentifier",
																																	"src": "13165:3:18"
																																},
																																"nativeSrc": "13165:6:18",
																																"nodeType": "YulFunctionCall",
																																"src": "13165:6:18"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "13135:3:18",
																															"nodeType": "YulIdentifier",
																															"src": "13135:3:18"
																														},
																														"nativeSrc": "13135:37:18",
																														"nodeType": "YulFunctionCall",
																														"src": "13135:37:18"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "13131:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "13131:3:18"
																												},
																												"nativeSrc": "13131:42:18",
																												"nodeType": "YulFunctionCall",
																												"src": "13131:42:18"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "13116:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "13116:3:18"
																										},
																										"nativeSrc": "13116:58:18",
																										"nodeType": "YulFunctionCall",
																										"src": "13116:58:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13101:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "13101:6:18"
																								},
																								"nativeSrc": "13101:74:18",
																								"nodeType": "YulFunctionCall",
																								"src": "13101:74:18"
																							},
																							"nativeSrc": "13101:74:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "13101:74:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12994:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "12994:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "13003:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "13003:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12991:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "12991:2:18"
																					},
																					"nativeSrc": "12991:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "12991:19:18"
																				},
																				"nativeSrc": "12988:201:18",
																				"nodeType": "YulIf",
																				"src": "12988:201:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13209:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "13209:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "13223:1:18",
																											"nodeType": "YulLiteral",
																											"src": "13223:1:18",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "13226:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "13226:6:18"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "13219:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "13219:3:18"
																									},
																									"nativeSrc": "13219:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "13219:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13235:1:18",
																									"nodeType": "YulLiteral",
																									"src": "13235:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13215:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "13215:3:18"
																							},
																							"nativeSrc": "13215:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "13215:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13202:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13202:6:18"
																					},
																					"nativeSrc": "13202:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13202:36:18"
																				},
																				"nativeSrc": "13202:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "13202:36:18"
																			}
																		]
																	},
																	"nativeSrc": "12600:648:18",
																	"nodeType": "YulCase",
																	"src": "12600:648:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12605:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12605:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13265:234:18",
																		"nodeType": "YulBlock",
																		"src": "13265:234:18",
																		"statements": [
																			{
																				"nativeSrc": "13279:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13279:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13292:1:18",
																					"nodeType": "YulLiteral",
																					"src": "13292:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13283:5:18",
																						"nodeType": "YulTypedName",
																						"src": "13283:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13328:67:18",
																					"nodeType": "YulBlock",
																					"src": "13328:67:18",
																					"statements": [
																						{
																							"nativeSrc": "13346:35:18",
																							"nodeType": "YulAssignment",
																							"src": "13346:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13365:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "13365:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13370:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "13370:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13361:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "13361:3:18"
																										},
																										"nativeSrc": "13361:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "13361:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13355:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "13355:5:18"
																								},
																								"nativeSrc": "13355:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "13355:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13346:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "13346:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13309:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "13309:6:18"
																				},
																				"nativeSrc": "13306:89:18",
																				"nodeType": "YulIf",
																				"src": "13306:89:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13415:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "13415:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "13474:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "13474:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "13481:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "13481:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "13421:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "13421:52:18"
																							},
																							"nativeSrc": "13421:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "13421:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13408:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13408:6:18"
																					},
																					"nativeSrc": "13408:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13408:81:18"
																				},
																				"nativeSrc": "13408:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "13408:81:18"
																			}
																		]
																	},
																	"nativeSrc": "13257:242:18",
																	"nodeType": "YulCase",
																	"src": "13257:242:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12580:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12580:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12588:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12588:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12577:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12577:2:18"
																},
																"nativeSrc": "12577:14:18",
																"nodeType": "YulFunctionCall",
																"src": "12577:14:18"
															},
															"nativeSrc": "12570:929:18",
															"nodeType": "YulSwitch",
															"src": "12570:929:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage",
												"nativeSrc": "12210:1295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12289:4:18",
														"nodeType": "YulTypedName",
														"src": "12289:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12295:3:18",
														"nodeType": "YulTypedName",
														"src": "12295:3:18",
														"type": ""
													}
												],
												"src": "12210:1295:18"
											},
											{
												"body": {
													"nativeSrc": "13684:167:18",
													"nodeType": "YulBlock",
													"src": "13684:167:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13701:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13701:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13712:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13712:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13694:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13694:6:18"
																},
																"nativeSrc": "13694:21:18",
																"nodeType": "YulFunctionCall",
																"src": "13694:21:18"
															},
															"nativeSrc": "13694:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "13694:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13735:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13735:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13746:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13746:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13731:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13731:3:18"
																		},
																		"nativeSrc": "13731:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13731:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13751:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13751:2:18",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13724:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13724:6:18"
																},
																"nativeSrc": "13724:30:18",
																"nodeType": "YulFunctionCall",
																"src": "13724:30:18"
															},
															"nativeSrc": "13724:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "13724:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13774:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13774:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13785:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13785:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13770:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13770:3:18"
																		},
																		"nativeSrc": "13770:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13770:18:18"
																	},
																	{
																		"hexValue": "43616e6e6f742065786563757465207478",
																		"kind": "string",
																		"nativeSrc": "13790:19:18",
																		"nodeType": "YulLiteral",
																		"src": "13790:19:18",
																		"type": "",
																		"value": "Cannot execute tx"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13763:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13763:6:18"
																},
																"nativeSrc": "13763:47:18",
																"nodeType": "YulFunctionCall",
																"src": "13763:47:18"
															},
															"nativeSrc": "13763:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "13763:47:18"
														},
														{
															"nativeSrc": "13819:26:18",
															"nodeType": "YulAssignment",
															"src": "13819:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13831:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13831:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13842:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13842:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13827:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13827:3:18"
																},
																"nativeSrc": "13827:18:18",
																"nodeType": "YulFunctionCall",
																"src": "13827:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13819:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13819:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e54dddc19fe041cd2ab5a676b9022929cd57fae1ef2ef044dff489da7dfdd60__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13510:341:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13661:9:18",
														"nodeType": "YulTypedName",
														"src": "13661:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13675:4:18",
														"nodeType": "YulTypedName",
														"src": "13675:4:18",
														"type": ""
													}
												],
												"src": "13510:341:18"
											},
											{
												"body": {
													"nativeSrc": "13990:661:18",
													"nodeType": "YulBlock",
													"src": "13990:661:18",
													"statements": [
														{
															"nativeSrc": "14000:12:18",
															"nodeType": "YulVariableDeclaration",
															"src": "14000:12:18",
															"value": {
																"kind": "number",
																"nativeSrc": "14011:1:18",
																"nodeType": "YulLiteral",
																"src": "14011:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nativeSrc": "14004:3:18",
																	"nodeType": "YulTypedName",
																	"src": "14004:3:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14021:30:18",
															"nodeType": "YulVariableDeclaration",
															"src": "14021:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14044:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14044:6:18"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "14038:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "14038:5:18"
																},
																"nativeSrc": "14038:13:18",
																"nodeType": "YulFunctionCall",
																"src": "14038:13:18"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "14025:9:18",
																	"nodeType": "YulTypedName",
																	"src": "14025:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14060:50:18",
															"nodeType": "YulVariableDeclaration",
															"src": "14060:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "14100:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14100:9:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "14074:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "14074:25:18"
																},
																"nativeSrc": "14074:36:18",
																"nodeType": "YulFunctionCall",
																"src": "14074:36:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14064:6:18",
																	"nodeType": "YulTypedName",
																	"src": "14064:6:18",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14159:126:18",
																		"nodeType": "YulBlock",
																		"src": "14159:126:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "14180:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "14180:3:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "14189:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "14189:9:18"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "14204:3:18",
																											"nodeType": "YulLiteral",
																											"src": "14204:3:18",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "14200:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "14200:3:18"
																									},
																									"nativeSrc": "14200:8:18",
																									"nodeType": "YulFunctionCall",
																									"src": "14200:8:18"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "14185:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "14185:3:18"
																							},
																							"nativeSrc": "14185:24:18",
																							"nodeType": "YulFunctionCall",
																							"src": "14185:24:18"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "14173:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14173:6:18"
																					},
																					"nativeSrc": "14173:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14173:37:18"
																				},
																				"nativeSrc": "14173:37:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "14173:37:18"
																			},
																			{
																				"nativeSrc": "14223:52:18",
																				"nodeType": "YulAssignment",
																				"src": "14223:52:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "14234:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "14234:3:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "14243:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "14243:6:18"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "14265:6:18",
																													"nodeType": "YulIdentifier",
																													"src": "14265:6:18"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "14258:6:18",
																												"nodeType": "YulIdentifier",
																												"src": "14258:6:18"
																											},
																											"nativeSrc": "14258:14:18",
																											"nodeType": "YulFunctionCall",
																											"src": "14258:14:18"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "14251:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "14251:6:18"
																									},
																									"nativeSrc": "14251:22:18",
																									"nodeType": "YulFunctionCall",
																									"src": "14251:22:18"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "14239:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "14239:3:18"
																							},
																							"nativeSrc": "14239:35:18",
																							"nodeType": "YulFunctionCall",
																							"src": "14239:35:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "14230:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "14230:3:18"
																					},
																					"nativeSrc": "14230:45:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14230:45:18"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "14223:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "14223:3:18"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "14152:133:18",
																	"nodeType": "YulCase",
																	"src": "14152:133:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14157:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14157:1:18",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "14301:325:18",
																		"nodeType": "YulBlock",
																		"src": "14301:325:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "14322:1:18",
																							"nodeType": "YulLiteral",
																							"src": "14322:1:18",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value0",
																							"nativeSrc": "14325:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "14325:6:18"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "14315:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14315:6:18"
																					},
																					"nativeSrc": "14315:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14315:17:18"
																				},
																				"nativeSrc": "14315:17:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "14315:17:18"
																			},
																			{
																				"nativeSrc": "14345:33:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14345:33:18",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "14370:1:18",
																							"nodeType": "YulLiteral",
																							"src": "14370:1:18",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "14373:4:18",
																							"nodeType": "YulLiteral",
																							"src": "14373:4:18",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nativeSrc": "14360:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14360:9:18"
																					},
																					"nativeSrc": "14360:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14360:18:18"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "14349:7:18",
																						"nodeType": "YulTypedName",
																						"src": "14349:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "14391:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14391:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14400:1:18",
																					"nodeType": "YulLiteral",
																					"src": "14400:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "14395:1:18",
																						"nodeType": "YulTypedName",
																						"src": "14395:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "14470:110:18",
																					"nodeType": "YulBlock",
																					"src": "14470:110:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "14499:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "14499:3:18"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "14504:1:18",
																												"nodeType": "YulIdentifier",
																												"src": "14504:1:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "14495:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "14495:3:18"
																										},
																										"nativeSrc": "14495:11:18",
																										"nodeType": "YulFunctionCall",
																										"src": "14495:11:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "14514:7:18",
																												"nodeType": "YulIdentifier",
																												"src": "14514:7:18"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "14508:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "14508:5:18"
																										},
																										"nativeSrc": "14508:14:18",
																										"nodeType": "YulFunctionCall",
																										"src": "14508:14:18"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "14488:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "14488:6:18"
																								},
																								"nativeSrc": "14488:35:18",
																								"nodeType": "YulFunctionCall",
																								"src": "14488:35:18"
																							},
																							"nativeSrc": "14488:35:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "14488:35:18"
																						},
																						{
																							"nativeSrc": "14540:26:18",
																							"nodeType": "YulAssignment",
																							"src": "14540:26:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "14555:7:18",
																										"nodeType": "YulIdentifier",
																										"src": "14555:7:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14564:1:18",
																										"nodeType": "YulLiteral",
																										"src": "14564:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14551:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "14551:3:18"
																								},
																								"nativeSrc": "14551:15:18",
																								"nodeType": "YulFunctionCall",
																								"src": "14551:15:18"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "14540:7:18",
																									"nodeType": "YulIdentifier",
																									"src": "14540:7:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "14425:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "14425:1:18"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "14428:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "14428:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "14422:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "14422:2:18"
																					},
																					"nativeSrc": "14422:13:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14422:13:18"
																				},
																				"nativeSrc": "14414:166:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "14436:21:18",
																					"nodeType": "YulBlock",
																					"src": "14436:21:18",
																					"statements": [
																						{
																							"nativeSrc": "14438:17:18",
																							"nodeType": "YulAssignment",
																							"src": "14438:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "14447:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "14447:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14450:4:18",
																										"nodeType": "YulLiteral",
																										"src": "14450:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14443:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "14443:3:18"
																								},
																								"nativeSrc": "14443:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "14443:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "14438:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "14438:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "14418:3:18",
																					"nodeType": "YulBlock",
																					"src": "14418:3:18",
																					"statements": []
																				},
																				"src": "14414:166:18"
																			},
																			{
																				"nativeSrc": "14593:23:18",
																				"nodeType": "YulAssignment",
																				"src": "14593:23:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "14604:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "14604:3:18"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "14609:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "14609:6:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "14600:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "14600:3:18"
																					},
																					"nativeSrc": "14600:16:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14600:16:18"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "14593:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "14593:3:18"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "14294:332:18",
																	"nodeType": "YulCase",
																	"src": "14294:332:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14299:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14299:1:18",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "14130:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14130:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14141:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14141:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14126:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14126:3:18"
																},
																"nativeSrc": "14126:17:18",
																"nodeType": "YulFunctionCall",
																"src": "14126:17:18"
															},
															"nativeSrc": "14119:507:18",
															"nodeType": "YulSwitch",
															"src": "14119:507:18"
														},
														{
															"nativeSrc": "14635:10:18",
															"nodeType": "YulAssignment",
															"src": "14635:10:18",
															"value": {
																"name": "ret",
																"nativeSrc": "14642:3:18",
																"nodeType": "YulIdentifier",
																"src": "14642:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14635:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14635:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13856:795:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13966:3:18",
														"nodeType": "YulTypedName",
														"src": "13966:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13971:6:18",
														"nodeType": "YulTypedName",
														"src": "13971:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13982:3:18",
														"nodeType": "YulTypedName",
														"src": "13982:3:18",
														"type": ""
													}
												],
												"src": "13856:795:18"
											},
											{
												"body": {
													"nativeSrc": "14830:168:18",
													"nodeType": "YulBlock",
													"src": "14830:168:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14847:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14847:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14858:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14858:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14840:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14840:6:18"
																},
																"nativeSrc": "14840:21:18",
																"nodeType": "YulFunctionCall",
																"src": "14840:21:18"
															},
															"nativeSrc": "14840:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "14840:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14881:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14881:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14892:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14892:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14877:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14877:3:18"
																		},
																		"nativeSrc": "14877:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14877:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14897:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14897:2:18",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14870:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14870:6:18"
																},
																"nativeSrc": "14870:30:18",
																"nodeType": "YulFunctionCall",
																"src": "14870:30:18"
															},
															"nativeSrc": "14870:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "14870:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14920:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14920:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14931:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14931:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14916:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14916:3:18"
																		},
																		"nativeSrc": "14916:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14916:18:18"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14936:20:18",
																		"nodeType": "YulLiteral",
																		"src": "14936:20:18",
																		"type": "",
																		"value": "Transaction failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14909:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14909:6:18"
																},
																"nativeSrc": "14909:48:18",
																"nodeType": "YulFunctionCall",
																"src": "14909:48:18"
															},
															"nativeSrc": "14909:48:18",
															"nodeType": "YulExpressionStatement",
															"src": "14909:48:18"
														},
														{
															"nativeSrc": "14966:26:18",
															"nodeType": "YulAssignment",
															"src": "14966:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14978:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14978:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14989:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14989:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14974:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14974:3:18"
																},
																"nativeSrc": "14974:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14974:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14966:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14966:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14656:342:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14807:9:18",
														"nodeType": "YulTypedName",
														"src": "14807:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14821:4:18",
														"nodeType": "YulTypedName",
														"src": "14821:4:18",
														"type": ""
													}
												],
												"src": "14656:342:18"
											},
											{
												"body": {
													"nativeSrc": "15084:103:18",
													"nodeType": "YulBlock",
													"src": "15084:103:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "15130:16:18",
																"nodeType": "YulBlock",
																"src": "15130:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15139:1:18",
																					"nodeType": "YulLiteral",
																					"src": "15139:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15142:1:18",
																					"nodeType": "YulLiteral",
																					"src": "15142:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15132:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15132:6:18"
																			},
																			"nativeSrc": "15132:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15132:12:18"
																		},
																		"nativeSrc": "15132:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "15132:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15105:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "15105:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15114:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15114:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15101:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15101:3:18"
																		},
																		"nativeSrc": "15101:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15101:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15126:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15126:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15097:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15097:3:18"
																},
																"nativeSrc": "15097:32:18",
																"nodeType": "YulFunctionCall",
																"src": "15097:32:18"
															},
															"nativeSrc": "15094:52:18",
															"nodeType": "YulIf",
															"src": "15094:52:18"
														},
														{
															"nativeSrc": "15155:26:18",
															"nodeType": "YulAssignment",
															"src": "15155:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15171:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15171:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15165:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "15165:5:18"
																},
																"nativeSrc": "15165:16:18",
																"nodeType": "YulFunctionCall",
																"src": "15165:16:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "15155:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15155:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "15003:184:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15050:9:18",
														"nodeType": "YulTypedName",
														"src": "15050:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15061:7:18",
														"nodeType": "YulTypedName",
														"src": "15061:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15073:6:18",
														"nodeType": "YulTypedName",
														"src": "15073:6:18",
														"type": ""
													}
												],
												"src": "15003:184:18"
											},
											{
												"body": {
													"nativeSrc": "15366:166:18",
													"nodeType": "YulBlock",
													"src": "15366:166:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15383:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15383:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15394:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15394:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15376:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15376:6:18"
																},
																"nativeSrc": "15376:21:18",
																"nodeType": "YulFunctionCall",
																"src": "15376:21:18"
															},
															"nativeSrc": "15376:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "15376:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15417:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15417:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15428:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15428:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15413:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15413:3:18"
																		},
																		"nativeSrc": "15413:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15413:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15433:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15433:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15406:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15406:6:18"
																},
																"nativeSrc": "15406:30:18",
																"nodeType": "YulFunctionCall",
																"src": "15406:30:18"
															},
															"nativeSrc": "15406:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "15406:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15456:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15456:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15467:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15467:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15452:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15452:3:18"
																		},
																		"nativeSrc": "15452:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15452:18:18"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "15472:18:18",
																		"nodeType": "YulLiteral",
																		"src": "15472:18:18",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15445:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15445:6:18"
																},
																"nativeSrc": "15445:46:18",
																"nodeType": "YulFunctionCall",
																"src": "15445:46:18"
															},
															"nativeSrc": "15445:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "15445:46:18"
														},
														{
															"nativeSrc": "15500:26:18",
															"nodeType": "YulAssignment",
															"src": "15500:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15512:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15512:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15523:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15523:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15508:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15508:3:18"
																},
																"nativeSrc": "15508:18:18",
																"nodeType": "YulFunctionCall",
																"src": "15508:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15500:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15500:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15192:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15343:9:18",
														"nodeType": "YulTypedName",
														"src": "15343:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15357:4:18",
														"nodeType": "YulTypedName",
														"src": "15357:4:18",
														"type": ""
													}
												],
												"src": "15192:340:18"
											},
											{
												"body": {
													"nativeSrc": "15666:145:18",
													"nodeType": "YulBlock",
													"src": "15666:145:18",
													"statements": [
														{
															"nativeSrc": "15676:26:18",
															"nodeType": "YulAssignment",
															"src": "15676:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15688:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15688:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15699:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15699:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15684:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15684:3:18"
																},
																"nativeSrc": "15684:18:18",
																"nodeType": "YulFunctionCall",
																"src": "15684:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15676:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15676:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15718:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15718:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15733:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15733:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15749:3:18",
																								"nodeType": "YulLiteral",
																								"src": "15749:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15754:1:18",
																								"nodeType": "YulLiteral",
																								"src": "15754:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15745:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "15745:3:18"
																						},
																						"nativeSrc": "15745:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "15745:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15758:1:18",
																						"nodeType": "YulLiteral",
																						"src": "15758:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15741:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "15741:3:18"
																				},
																				"nativeSrc": "15741:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "15741:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15729:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15729:3:18"
																		},
																		"nativeSrc": "15729:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15729:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15711:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15711:6:18"
																},
																"nativeSrc": "15711:51:18",
																"nodeType": "YulFunctionCall",
																"src": "15711:51:18"
															},
															"nativeSrc": "15711:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "15711:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15782:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15782:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15793:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15793:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15778:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15778:3:18"
																		},
																		"nativeSrc": "15778:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15778:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15798:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15798:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15771:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15771:6:18"
																},
																"nativeSrc": "15771:34:18",
																"nodeType": "YulFunctionCall",
																"src": "15771:34:18"
															},
															"nativeSrc": "15771:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "15771:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "15537:274:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15627:9:18",
														"nodeType": "YulTypedName",
														"src": "15627:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15638:6:18",
														"nodeType": "YulTypedName",
														"src": "15638:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15646:6:18",
														"nodeType": "YulTypedName",
														"src": "15646:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15657:4:18",
														"nodeType": "YulTypedName",
														"src": "15657:4:18",
														"type": ""
													}
												],
												"src": "15537:274:18"
											},
											{
												"body": {
													"nativeSrc": "15990:170:18",
													"nodeType": "YulBlock",
													"src": "15990:170:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16007:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "16007:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16018:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16018:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16000:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16000:6:18"
																},
																"nativeSrc": "16000:21:18",
																"nodeType": "YulFunctionCall",
																"src": "16000:21:18"
															},
															"nativeSrc": "16000:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "16000:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16041:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16041:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16052:2:18",
																				"nodeType": "YulLiteral",
																				"src": "16052:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16037:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16037:3:18"
																		},
																		"nativeSrc": "16037:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16037:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16057:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16057:2:18",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16030:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16030:6:18"
																},
																"nativeSrc": "16030:30:18",
																"nodeType": "YulFunctionCall",
																"src": "16030:30:18"
															},
															"nativeSrc": "16030:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "16030:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16080:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16080:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16091:2:18",
																				"nodeType": "YulLiteral",
																				"src": "16091:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16076:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16076:3:18"
																		},
																		"nativeSrc": "16076:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16076:18:18"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "16096:22:18",
																		"nodeType": "YulLiteral",
																		"src": "16096:22:18",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16069:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16069:6:18"
																},
																"nativeSrc": "16069:50:18",
																"nodeType": "YulFunctionCall",
																"src": "16069:50:18"
															},
															"nativeSrc": "16069:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "16069:50:18"
														},
														{
															"nativeSrc": "16128:26:18",
															"nodeType": "YulAssignment",
															"src": "16128:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16140:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "16140:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16151:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16151:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16136:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16136:3:18"
																},
																"nativeSrc": "16136:18:18",
																"nodeType": "YulFunctionCall",
																"src": "16136:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16128:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16128:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15816:344:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15967:9:18",
														"nodeType": "YulTypedName",
														"src": "15967:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15981:4:18",
														"nodeType": "YulTypedName",
														"src": "15981:4:18",
														"type": ""
													}
												],
												"src": "15816:344:18"
											},
											{
												"body": {
													"nativeSrc": "16302:164:18",
													"nodeType": "YulBlock",
													"src": "16302:164:18",
													"statements": [
														{
															"nativeSrc": "16312:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "16312:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16332:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16332:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16326:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "16326:5:18"
																},
																"nativeSrc": "16326:13:18",
																"nodeType": "YulFunctionCall",
																"src": "16326:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16316:6:18",
																	"nodeType": "YulTypedName",
																	"src": "16316:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16354:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16354:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "16363:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16363:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16371:4:18",
																				"nodeType": "YulLiteral",
																				"src": "16371:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16359:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16359:3:18"
																		},
																		"nativeSrc": "16359:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16359:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16378:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16378:6:18"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "16348:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "16348:5:18"
																},
																"nativeSrc": "16348:37:18",
																"nodeType": "YulFunctionCall",
																"src": "16348:37:18"
															},
															"nativeSrc": "16348:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "16348:37:18"
														},
														{
															"nativeSrc": "16394:26:18",
															"nodeType": "YulVariableDeclaration",
															"src": "16394:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16408:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16408:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16413:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16413:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16404:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16404:3:18"
																},
																"nativeSrc": "16404:16:18",
																"nodeType": "YulFunctionCall",
																"src": "16404:16:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "16398:2:18",
																	"nodeType": "YulTypedName",
																	"src": "16398:2:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "16436:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "16436:2:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16440:1:18",
																		"nodeType": "YulLiteral",
																		"src": "16440:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:18"
																},
																"nativeSrc": "16429:13:18",
																"nodeType": "YulFunctionCall",
																"src": "16429:13:18"
															},
															"nativeSrc": "16429:13:18",
															"nodeType": "YulExpressionStatement",
															"src": "16429:13:18"
														},
														{
															"nativeSrc": "16451:9:18",
															"nodeType": "YulAssignment",
															"src": "16451:9:18",
															"value": {
																"name": "_1",
																"nativeSrc": "16458:2:18",
																"nodeType": "YulIdentifier",
																"src": "16458:2:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16451:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16451:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16165:301:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16278:3:18",
														"nodeType": "YulTypedName",
														"src": "16278:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16283:6:18",
														"nodeType": "YulTypedName",
														"src": "16283:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16294:3:18",
														"nodeType": "YulTypedName",
														"src": "16294:3:18",
														"type": ""
													}
												],
												"src": "16165:301:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n        value5 := abi_decode_address(add(headStart, 160))\n        value6 := abi_decode_address(add(headStart, 192))\n        value7 := abi_decode_address(add(headStart, 224))\n        value8 := abi_decode_address(add(headStart, 256))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__to_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_bytes(value2, add(headStart, 160))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not an admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cb323e46bbcca91e157c2b50ad4ce2acbe1153338b838c84372d5723b8995ef0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Transaction does not exist\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_3c3f7cf602281cf7a98efd78d98ba46309975dadee18bcb57e640145699bd800__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Transaction already executed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e3d0a597e455a5df21f74650a7518ab8d226371e3763bb9c00413fb3af8193f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Transaction not confirmed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"No tokens staked\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_c00ff6506fc53457ae4202871882703dada01c533275bb259e2cd12acaf31a69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Transaction already confirmed\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7e54dddc19fe041cd2ab5a676b9022929cd57fae1ef2ef044dff489da7dfdd60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Cannot execute tx\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        switch and(slotValue, 1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let dataPos := keccak256(0, 0x20)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Transaction failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"636": [
									{
										"length": 32,
										"start": 6364
									},
									{
										"length": 32,
										"start": 6405
									},
									{
										"length": 32,
										"start": 6760
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610236575f3560e01c80638456cb5911610129578063c01a8c84116100a8578063d836fc6f1161006d578063d836fc6f146106cc578063e63ab1e9146106eb578063ee22610b1461070b578063f4e0d9ac1461072a578063f72c0d8b14610749575f80fd5b8063c01a8c841461063b578063c63a6ad21461065a578063c64274741461066f578063d547741f1461068e578063d7b4be24146106ad575f80fd5b80639ace38c2116100ee5780639ace38c214610588578063a217fddf146105b8578063a5ce413b146105cb578063ad3cb1cc146105df578063b001f6181461061c575f80fd5b80638456cb59146104f85780638a2ade581461050c57806391d148541461052b578063965afa891461054a5780639a03d9a314610569575f80fd5b80633f4ba83a116101b5578063634474711161017a578063634474711461044c5780637547c7a31461046b57806375b238fc1461048a57806380f59a65146104aa57806382e717f7146104e3575f80fd5b80633f4ba83a146103dc57806341bec0d2146103f05780634f1ef2861461040f57806352d1902d146104225780635c975abb14610436575f80fd5b80632352a864116101fb5780632352a86414610333578063248a9ca314610352578063276184ae1461037f5780632f2ff15d1461039e57806336568abe146103bd575f80fd5b806301ffc9a714610241578063051420021461027557806316934fc4146102ac57806320ea8d86146102f35780632131c68c14610314575f80fd5b3661023d57005b5f80fd5b34801561024c575f80fd5b5061026061025b366004611ded565b61077c565b60405190151581526020015b60405180910390f35b348015610280575f80fd5b50603454610294906001600160a01b031681565b6040516001600160a01b03909116815260200161026c565b3480156102b7575f80fd5b506102de6102c6366004611e2f565b603b6020525f90815260409020805460019091015482565b6040805192835260208301919091520161026c565b3480156102fe575f80fd5b5061031261030d366004611e48565b6107b2565b005b34801561031f575f80fd5b50603554610294906001600160a01b031681565b34801561033e575f80fd5b50603354610294906001600160a01b031681565b34801561035d575f80fd5b5061037161036c366004611e48565b610949565b60405190815260200161026c565b34801561038a575f80fd5b50603254610294906001600160a01b031681565b3480156103a9575f80fd5b506103126103b8366004611e5f565b610969565b3480156103c8575f80fd5b506103126103d7366004611e5f565b61098b565b3480156103e7575f80fd5b506103126109c3565b3480156103fb575f80fd5b5061031261040a366004611e2f565b6109e5565b61031261041d366004611f28565b610a3a565b34801561042d575f80fd5b50610371610a59565b348015610441575f80fd5b505f5460ff16610260565b348015610457575f80fd5b50610312610466366004611f73565b610a74565b348015610476575f80fd5b50610312610485366004611e48565b610c6b565b348015610495575f80fd5b506103715f8051602061244883398151915281565b3480156104b5575f80fd5b506102606104c4366004611e5f565b603860209081525f928352604080842090915290825290205460ff1681565b3480156104ee575f80fd5b50610371603a5481565b348015610503575f80fd5b50610312610d9e565b348015610517575f80fd5b50603754610294906001600160a01b031681565b348015610536575f80fd5b50610260610545366004611e5f565b610dbd565b348015610555575f80fd5b50610312610564366004611e2f565b610df3565b348015610574575f80fd5b50610312610583366004611e2f565b610e48565b348015610593575f80fd5b506105a76105a2366004611e48565b610e9d565b60405161026c959493929190612035565b3480156105c3575f80fd5b506103715f81565b3480156105d6575f80fd5b50610312610f72565b3480156105ea575f80fd5b5061060f604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161026c919061206f565b348015610627575f80fd5b50610312610636366004611e2f565b611154565b348015610646575f80fd5b50610312610655366004611e48565b6111a9565b348015610665575f80fd5b50610371603c5481565b34801561067a575f80fd5b50610312610689366004612081565b61133d565b348015610699575f80fd5b506103126106a8366004611e5f565b6114a1565b3480156106b8575f80fd5b50603654610294906001600160a01b031681565b3480156106d7575f80fd5b506103126106e6366004611e2f565b6114bd565b3480156106f6575f80fd5b506103715f8051602061240883398151915281565b348015610716575f80fd5b50610312610725366004611e48565b611512565b348015610735575f80fd5b50610312610744366004611e2f565b611707565b348015610754575f80fd5b506103717f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b14806107ac57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6107c95f8051602061244883398151915233610dbd565b6107ee5760405162461bcd60e51b81526004016107e5906120d4565b60405180910390fd5b603954819081106108115760405162461bcd60e51b81526004016107e5906120fa565b816039818154811061082557610825612131565b5f91825260209091206003600590920201015460ff16156108585760405162461bcd60e51b81526004016107e590612145565b5f6039848154811061086c5761086c612131565b5f91825260208083208784526038825260408085203386529092529220546005909102909101915060ff166108e35760405162461bcd60e51b815260206004820152601960248201527f5472616e73616374696f6e206e6f7420636f6e6669726d65640000000000000060448201526064016107e5565b6001816004015f8282546108f79190612190565b90915550505f848152603860209081526040808320338085529252808320805460ff191690555186927fe5c8875c5e14471f806f15f740cd9fd54937d151e9dcf8ad3ba988d6a285e67e91a350505050565b5f9081525f80516020612428833981519152602052604090206001015490565b61097282610949565b61097b8161175c565b6109858383611766565b50505050565b6001600160a01b03811633146109b45760405163334bd91960e11b815260040160405180910390fd5b6109be8282611807565b505050565b5f805160206124088339815191526109da8161175c565b6109e2611880565b50565b6109fc5f8051602061244883398151915233610dbd565b610a185760405162461bcd60e51b81526004016107e5906120d4565b603280546001600160a01b0319166001600160a01b0392909216919091179055565b610a426118d1565b610a4b82611977565b610a5582826119a1565b5050565b5f610a62611a5d565b505f805160206123e883398151915290565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f81158015610ab95750825b90505f8267ffffffffffffffff166001148015610ad55750303b155b905081158015610ae3575080155b15610b015760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610b2b57845460ff60401b1916600160401b1785555b610b33611aa6565b610b3b611aae565b610b43611aa6565b610b4d5f8f611766565b50610b655f805160206124088339815191528f611766565b50610b7d5f805160206124488339815191528f611766565b50610ba87f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38f611766565b50603a8d9055603c8c9055603280546001600160a01b03199081166001600160a01b038e8116919091179092556033805482168d84161790556034805482168c84161790556035805482168b84161790556036805482168a8416179055603780549091169188169190911790558315610c5b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050505050565b610c73611abe565b6032546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b039091169081906323b872dd906064016020604051808303815f875af1158015610cc9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ced91906121a3565b610d315760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016107e5565b604080518082018252838152426020808301828152335f818152603b845286902094518555905160019094019390935583518681529081019190915290917fdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc910160405180910390a25050565b5f80516020612408833981519152610db58161175c565b6109e2611b03565b5f9182525f80516020612428833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610e0a5f8051602061244883398151915233610dbd565b610e265760405162461bcd60e51b81526004016107e5906120d4565b603580546001600160a01b0319166001600160a01b0392909216919091179055565b610e5f5f8051602061244883398151915233610dbd565b610e7b5760405162461bcd60e51b81526004016107e5906120d4565b603380546001600160a01b0319166001600160a01b0392909216919091179055565b60398181548110610eac575f80fd5b5f9182526020909120600590910201805460018201546002830180546001600160a01b039093169450909291610ee1906121c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0d906121c2565b8015610f585780601f10610f2f57610100808354040283529160200191610f58565b820191905f5260205f20905b815481529060010190602001808311610f3b57829003601f168201915b505050506003830154600490930154919260ff1691905085565b610f7a611abe565b335f908152603b60209081526040918290208251808401909352805480845260019091015491830191909152610fe55760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81cdd185ad95960821b60448201526064016107e5565b5f816020015142610ff69190612190565b90505f6301e1338082603c54855f015161101091906121fa565b61101a91906121fa565b6110249190612211565b60325484519192506001600160a01b031690819063a9059cbb90339061104b908690612230565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015611093573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110b791906121a3565b6110fb5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016107e5565b335f818152603b6020908152604080832083815560010192909255865182519081529081018590527f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336910160405180910390a250505050565b61116b5f8051602061244883398151915233610dbd565b6111875760405162461bcd60e51b81526004016107e5906120d4565b603780546001600160a01b0319166001600160a01b0392909216919091179055565b6111c05f8051602061244883398151915233610dbd565b6111dc5760405162461bcd60e51b81526004016107e5906120d4565b603954819081106111ff5760405162461bcd60e51b81526004016107e5906120fa565b816039818154811061121357611213612131565b5f91825260209091206003600590920201015460ff16156112465760405162461bcd60e51b81526004016107e590612145565b5f838152603860209081526040808320338452909152902054839060ff16156112b15760405162461bcd60e51b815260206004820152601d60248201527f5472616e73616374696f6e20616c726561647920636f6e6669726d656400000060448201526064016107e5565b5f603985815481106112c5576112c5612131565b905f5260205f20906005020190506001816004015f8282546112e79190612230565b90915550505f858152603860209081526040808320338085529252808320805460ff191660011790555187927ff8a17c9136a3ae33364fac05eb088a3cbafee10c1889c88593e20ee2d8e4eb8891a35050505050565b6113545f8051602061244883398151915233610dbd565b6113705760405162461bcd60e51b81526004016107e5906120d4565b603980546040805160a0810182526001600160a01b038781168252602082018781529282018681525f60608401819052608084018190526001860187559590955281517fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d36005860290810180546001600160a01b0319169290931691909117825592517fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d484015593519293909290917fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d5019061144c908261228e565b50606082015160038201805460ff191691151591909117905560809091015160049091015560405181907fd0b5d9eac097410294ec9f2cee7cd185cf31ab46babf3dfdbeac8b222b03f2d1905f90a250505050565b6114aa82610949565b6114b38161175c565b6109858383611807565b6114d45f8051602061244883398151915233610dbd565b6114f05760405162461bcd60e51b81526004016107e5906120d4565b603480546001600160a01b0319166001600160a01b0392909216919091179055565b6115295f8051602061244883398151915233610dbd565b6115455760405162461bcd60e51b81526004016107e5906120d4565b603954819081106115685760405162461bcd60e51b81526004016107e5906120fa565b816039818154811061157c5761157c612131565b5f91825260209091206003600590920201015460ff16156115af5760405162461bcd60e51b81526004016107e590612145565b5f603984815481106115c3576115c3612131565b905f5260205f2090600502019050603a548160040154101561161b5760405162461bcd60e51b8152602060048201526011602482015270086c2dcdcdee840caf0cac6eae8ca40e8f607b1b60448201526064016107e5565b60038101805460ff191660019081179091558154908201546040515f926001600160a01b03169190611651906002860190612349565b5f6040518083038185875af1925050503d805f811461168b576040519150601f19603f3d011682016040523d82523d5f602084013e611690565b606091505b50509050806116d65760405162461bcd60e51b8152602060048201526012602482015271151c985b9cd858dd1a5bdb8819985a5b195960721b60448201526064016107e5565b60405185907f15ed165a284872ea7017f03df402a0cadfbfab588320ffaf83f160c2f82781c7905f90a25050505050565b61171e5f8051602061244883398151915233610dbd565b61173a5760405162461bcd60e51b81526004016107e5906120d4565b603680546001600160a01b0319166001600160a01b0392909216919091179055565b6109e28133611b3f565b5f5f8051602061242883398151915261177f8484610dbd565b6117fe575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556117b43390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506107ac565b5f9150506107ac565b5f5f805160206124288339815191526118208484610dbd565b156117fe575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506107ac565b611888611b78565b5f805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061195757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661194b5f805160206123e8833981519152546001600160a01b031690565b6001600160a01b031614155b156119755760405163703e46dd60e11b815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3610a558161175c565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156119fb575060408051601f3d908101601f191682019092526119f8918101906123ba565b60015b611a2357604051634c9c8ce360e01b81526001600160a01b03831660048201526024016107e5565b5f805160206123e88339815191528114611a5357604051632a87526960e21b8152600481018290526024016107e5565b6109be8383611bc0565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146119755760405163703e46dd60e11b815260040160405180910390fd5b611975611c15565b611ab6611c15565b611975611c5e565b5f5460ff16156119755760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107e5565b611b0b611abe565b5f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118b43390565b611b498282610dbd565b610a555760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016107e5565b5f5460ff166119755760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107e5565b611bc982611c71565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611c0d576109be8282611cd4565b610a55611d46565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661197557604051631afcd79f60e31b815260040160405180910390fd5b611c66611c15565b5f805460ff19169055565b806001600160a01b03163b5f03611ca657604051634c9c8ce360e01b81526001600160a01b03821660048201526024016107e5565b5f805160206123e883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051611cf091906123d1565b5f60405180830381855af49150503d805f8114611d28576040519150601f19603f3d011682016040523d82523d5f602084013e611d2d565b606091505b5091509150611d3d858383611d65565b95945050505050565b34156119755760405163b398979f60e01b815260040160405180910390fd5b606082611d7a57611d7582611dc4565b611dbd565b8151158015611d9157506001600160a01b0384163b155b15611dba57604051639996b31560e01b81526001600160a01b03851660048201526024016107e5565b50805b9392505050565b805115611dd45780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215611dfd575f80fd5b81356001600160e01b031981168114611dbd575f80fd5b80356001600160a01b0381168114611e2a575f80fd5b919050565b5f60208284031215611e3f575f80fd5b611dbd82611e14565b5f60208284031215611e58575f80fd5b5035919050565b5f8060408385031215611e70575f80fd5b82359150611e8060208401611e14565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611eac575f80fd5b813567ffffffffffffffff811115611ec657611ec6611e89565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611ef557611ef5611e89565b604052818152838201602001851015611f0c575f80fd5b816020850160208301375f918101602001919091529392505050565b5f8060408385031215611f39575f80fd5b611f4283611e14565b9150602083013567ffffffffffffffff811115611f5d575f80fd5b611f6985828601611e9d565b9150509250929050565b5f805f805f805f805f6101208a8c031215611f8c575f80fd5b611f958a611e14565b985060208a0135975060408a01359650611fb160608b01611e14565b9550611fbf60808b01611e14565b9450611fcd60a08b01611e14565b9350611fdb60c08b01611e14565b9250611fe960e08b01611e14565b9150611ff86101008b01611e14565b90509295985092959850929598565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60018060a01b038616815284602082015260a060408201525f61205b60a0830186612007565b931515606083015250608001529392505050565b602081525f611dbd6020830184612007565b5f805f60608486031215612093575f80fd5b61209c84611e14565b925060208401359150604084013567ffffffffffffffff8111156120be575f80fd5b6120ca86828701611e9d565b9150509250925092565b6020808252600c908201526b2737ba1030b71030b236b4b760a11b604082015260600190565b6020808252601a908201527f5472616e73616374696f6e20646f6573206e6f74206578697374000000000000604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b6020808252601c908201527f5472616e73616374696f6e20616c726561647920657865637574656400000000604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b818103818111156107ac576107ac61217c565b5f602082840312156121b3575f80fd5b81518015158114611dbd575f80fd5b600181811c908216806121d657607f821691505b6020821081036121f457634e487b7160e01b5f52602260045260245ffd5b50919050565b80820281158282048414176107ac576107ac61217c565b5f8261222b57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156107ac576107ac61217c565b601f8211156109be57805f5260205f20601f840160051c810160208510156122685750805b601f840160051c820191505b81811015612287575f8155600101612274565b5050505050565b815167ffffffffffffffff8111156122a8576122a8611e89565b6122bc816122b684546121c2565b84612243565b6020601f8211600181146122ee575f83156122d75750848201515b5f19600385901b1c1916600184901b178455612287565b5f84815260208120601f198516915b8281101561231d57878501518255602094850194600190920191016122fd565b508482101561233a57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f808354612356816121c2565b60018216801561236d5760018114612382576123af565b60ff19831686528115158202860193506123af565b865f5260205f205f5b838110156123a75781548882015260019091019060200161238b565b505081860193505b509195945050505050565b5f602082840312156123ca575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a26469706673582212209751a2fb8d2b5b4f84396109cfd73e27b269854c039cf2e77b4c219a045d7b3364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x236 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x129 JUMPI DUP1 PUSH4 0xC01A8C84 GT PUSH2 0xA8 JUMPI DUP1 PUSH4 0xD836FC6F GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xD836FC6F EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xEE22610B EQ PUSH2 0x70B JUMPI DUP1 PUSH4 0xF4E0D9AC EQ PUSH2 0x72A JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x749 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC01A8C84 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0xC63A6AD2 EQ PUSH2 0x65A JUMPI DUP1 PUSH4 0xC6427474 EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xD7B4BE24 EQ PUSH2 0x6AD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9ACE38C2 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x9ACE38C2 EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xB001F618 EQ PUSH2 0x61C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x8A2ADE58 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0x965AFA89 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x9A03D9A3 EQ PUSH2 0x569 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x63447471 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x63447471 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x80F59A65 EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x82E717F7 EQ PUSH2 0x4E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x41BEC0D2 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x436 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2352A864 GT PUSH2 0x1FB JUMPI DUP1 PUSH4 0x2352A864 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x276184AE EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x5142002 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x20EA8D86 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x2131C68C EQ PUSH2 0x314 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x23D JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x34 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x3B PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x32 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x9C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x312 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH2 0xA59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x260 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x457 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x466 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x4C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x38 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH1 0x3A SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0xD9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x517 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x37 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x536 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x545 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0xDBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x564 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0xDF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x583 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0xE48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH2 0x5A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0xF72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x206F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x636 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x1154 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x655 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x11A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x665 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH1 0x3C SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x689 CALLDATASIZE PUSH1 0x4 PUSH2 0x2081 JUMP JUMPDEST PUSH2 0x133D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x699 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x6A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x14A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x36 SLOAD PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x14BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2408 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x716 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x725 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x1512 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x735 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x744 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x1707 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7AC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C9 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x39 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20FA JUMP JUMPDEST DUP2 PUSH1 0x39 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x825 JUMPI PUSH2 0x825 PUSH2 0x2131 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x2145 JUMP JUMPDEST PUSH0 PUSH1 0x39 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x86C JUMPI PUSH2 0x86C PUSH2 0x2131 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x38 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH1 0xFF AND PUSH2 0x8E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206E6F7420636F6E6669726D656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP5 DUP2 MSTORE PUSH1 0x38 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP7 SWAP3 PUSH32 0xE5C8875C5E14471F806F15F740CD9FD54937D151E9DCF8AD3BA988D6A285E67E SWAP2 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2428 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x972 DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x97B DUP2 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x985 DUP4 DUP4 PUSH2 0x1766 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BE DUP3 DUP3 PUSH2 0x1807 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2408 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9DA DUP2 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0x1880 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9FC PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA42 PUSH2 0x18D1 JUMP JUMPDEST PUSH2 0xA4B DUP3 PUSH2 0x1977 JUMP JUMPDEST PUSH2 0xA55 DUP3 DUP3 PUSH2 0x19A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA62 PUSH2 0x1A5D JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xAB9 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xAD5 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAE3 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB01 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xB2B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xB33 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0xB3B PUSH2 0x1AAE JUMP JUMPDEST PUSH2 0xB43 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0xB4D PUSH0 DUP16 PUSH2 0x1766 JUMP JUMPDEST POP PUSH2 0xB65 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2408 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP16 PUSH2 0x1766 JUMP JUMPDEST POP PUSH2 0xB7D PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP16 PUSH2 0x1766 JUMP JUMPDEST POP PUSH2 0xBA8 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP16 PUSH2 0x1766 JUMP JUMPDEST POP PUSH1 0x3A DUP14 SWAP1 SSTORE PUSH1 0x3C DUP13 SWAP1 SSTORE PUSH1 0x32 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x33 DUP1 SLOAD DUP3 AND DUP14 DUP5 AND OR SWAP1 SSTORE PUSH1 0x34 DUP1 SLOAD DUP3 AND DUP13 DUP5 AND OR SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP3 AND DUP12 DUP5 AND OR SWAP1 SSTORE PUSH1 0x36 DUP1 SLOAD DUP3 AND DUP11 DUP5 AND OR SWAP1 SSTORE PUSH1 0x37 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xC5B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC73 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3B DUP5 MSTORE DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 PUSH32 0xDD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2408 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDB5 DUP2 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0x1B03 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2428 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE0A PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0xE26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x35 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE5F PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0xE7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x39 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP2 PUSH2 0xEE1 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF0D SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF58 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF2F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF58 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF3B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0xFF AND SWAP2 SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xF7A PUSH2 0x1ABE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D1BDAD95B9CC81CDD185AD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E13380 DUP3 PUSH1 0x3C SLOAD DUP6 PUSH0 ADD MLOAD PUSH2 0x1010 SWAP2 SWAP1 PUSH2 0x21FA JUMP JUMPDEST PUSH2 0x101A SWAP2 SWAP1 PUSH2 0x21FA JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x32 SLOAD DUP5 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 PUSH2 0x104B SWAP1 DUP7 SWAP1 PUSH2 0x2230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1093 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B7 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP7 MLOAD DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x116B PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x1187 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x37 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x11C0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x39 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x11FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20FA JUMP JUMPDEST DUP2 PUSH1 0x39 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1213 JUMPI PUSH2 0x1213 PUSH2 0x2131 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1246 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x2145 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x38 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x12B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20616C726561647920636F6E6669726D6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH0 PUSH1 0x39 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x12C5 JUMPI PUSH2 0x12C5 PUSH2 0x2131 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12E7 SWAP2 SWAP1 PUSH2 0x2230 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP6 DUP2 MSTORE PUSH1 0x38 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP8 SWAP3 PUSH32 0xF8A17C9136A3AE33364FAC05EB088A3CBAFEE10C1889C88593E20EE2D8E4EB88 SWAP2 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1354 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x1370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x39 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 DUP2 MSTORE SWAP3 DUP3 ADD DUP7 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 DUP7 ADD DUP8 SSTORE SWAP6 SWAP1 SWAP6 MSTORE DUP2 MLOAD PUSH32 0xDC16FEF70F8D5DDBC01EE3D903D1E69C18A3C7BE080EB86A81E0578814EE58D3 PUSH1 0x5 DUP7 MUL SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP3 MLOAD PUSH32 0xDC16FEF70F8D5DDBC01EE3D903D1E69C18A3C7BE080EB86A81E0578814EE58D4 DUP5 ADD SSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH32 0xDC16FEF70F8D5DDBC01EE3D903D1E69C18A3C7BE080EB86A81E0578814EE58D5 ADD SWAP1 PUSH2 0x144C SWAP1 DUP3 PUSH2 0x228E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xD0B5D9EAC097410294EC9F2CEE7CD185CF31AB46BABF3DFDBEAC8B222B03F2D1 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x14AA DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x14B3 DUP2 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x985 DUP4 DUP4 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0x14D4 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x14F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x34 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1529 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x1545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x39 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x1568 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20FA JUMP JUMPDEST DUP2 PUSH1 0x39 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x157C JUMPI PUSH2 0x157C PUSH2 0x2131 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x2145 JUMP JUMPDEST PUSH0 PUSH1 0x39 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x15C3 JUMPI PUSH2 0x15C3 PUSH2 0x2131 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x3A SLOAD DUP2 PUSH1 0x4 ADD SLOAD LT ISZERO PUSH2 0x161B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x86C2DCDCDEE840CAF0CAC6EAE8CA40E8F PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1651 SWAP1 PUSH1 0x2 DUP7 ADD SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x168B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x16D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C985B9CD858DD1A5BDB8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 SWAP1 PUSH32 0x15ED165A284872EA7017F03DF402A0CADFBFAB588320FFAF83F160C2F82781C7 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x171E PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2448 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x173A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x36 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9E2 DUP2 CALLER PUSH2 0x1B3F JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2428 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x177F DUP5 DUP5 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x17FE JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x17B4 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x7AC JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x7AC JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2428 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1820 DUP5 DUP5 PUSH2 0xDBD JUMP JUMPDEST ISZERO PUSH2 0x17FE JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x1888 PUSH2 0x1B78 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1957 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x194B PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0xA55 DUP2 PUSH2 0x175C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19FB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x19F8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x23BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1A53 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x9BE DUP4 DUP4 PUSH2 0x1BC0 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1975 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x1AB6 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x1975 PUSH2 0x1C5E JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x1B0B PUSH2 0x1ABE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18B4 CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1B49 DUP3 DUP3 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x1BC9 DUP3 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1C0D JUMPI PUSH2 0x9BE DUP3 DUP3 PUSH2 0x1CD4 JUMP JUMPDEST PUSH2 0xA55 PUSH2 0x1D46 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C66 PUSH2 0x1C15 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1CA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7E5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CF0 SWAP2 SWAP1 PUSH2 0x23D1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1D28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1D3D DUP6 DUP4 DUP4 PUSH2 0x1D65 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1D7A JUMPI PUSH2 0x1D75 DUP3 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0x1DBD JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1D91 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1DBA JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7E5 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1DD4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DFD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1DBD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E2A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DBD DUP3 PUSH2 0x1E14 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E70 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1E80 PUSH1 0x20 DUP5 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EAC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EC6 JUMPI PUSH2 0x1EC6 PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1EF5 JUMPI PUSH2 0x1EF5 PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x1F0C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F39 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F42 DUP4 PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F5D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F69 DUP6 DUP3 DUP7 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x1F8C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F95 DUP11 PUSH2 0x1E14 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH2 0x1FB1 PUSH1 0x60 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP6 POP PUSH2 0x1FBF PUSH1 0x80 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP5 POP PUSH2 0x1FCD PUSH1 0xA0 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FDB PUSH1 0xC0 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FE9 PUSH1 0xE0 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF8 PUSH2 0x100 DUP12 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x205B PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2007 JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1DBD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2007 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2093 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x209C DUP5 PUSH2 0x1E14 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20CA DUP7 DUP3 DUP8 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x2737BA1030B71030B236B4B7 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20646F6573206E6F74206578697374000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20616C726561647920657865637574656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x217C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DBD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x21D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21F4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x217C JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x222B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x217C JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9BE JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2268 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2287 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2274 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22A8 JUMPI PUSH2 0x22A8 PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0x22BC DUP2 PUSH2 0x22B6 DUP5 SLOAD PUSH2 0x21C2 JUMP JUMPDEST DUP5 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22EE JUMPI PUSH0 DUP4 ISZERO PUSH2 0x22D7 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2287 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x231D JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x22FD JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x233A JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SLOAD PUSH2 0x2356 DUP2 PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0x1 DUP3 AND DUP1 ISZERO PUSH2 0x236D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2382 JUMPI PUSH2 0x23AF JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x23AF JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23A7 JUMPI DUP2 SLOAD DUP9 DUP3 ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x238B JUMP JUMPDEST POP POP DUP2 DUP7 ADD SWAP4 POP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800A4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA26469706673582212209751A2FB8D2B5B4F84396109 0xCF 0xD7 RETURNDATACOPY 0x27 0xB2 PUSH10 0x854C039CF2E77B4C219A DIV TSTORE PUSH28 0x3364736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "908:6927:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;-1:-1:-1;3443:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:18;;463:22;445:41;;433:2;418:18;3443:202:0;;;;;;;;1350:29:17;;;;;;;;;;-1:-1:-1;1350:29:17;;;;-1:-1:-1;;;;;1350:29:17;;;;;;-1:-1:-1;;;;;661:32:18;;;643:51;;631:2;616:18;1350:29:17;497:203:18;1939:39:17;;;;;;;;;;-1:-1:-1;1939:39:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1248:25:18;;;1304:2;1289:18;;1282:34;;;;1221:18;1939:39:17;1074:248:18;6096:410:17;;;;;;;;;;-1:-1:-1;6096:410:17;;;;;:::i;:::-;;:::i;:::-;;1385:25;;;;;;;;;;-1:-1:-1;1385:25:17;;;;-1:-1:-1;;;;;1385:25:17;;;1316:28;;;;;;;;;;-1:-1:-1;1316:28:17;;;;-1:-1:-1;;;;;1316:28:17;;;4759:191:0;;;;;;;;;;-1:-1:-1;4759:191:0;;;;;:::i;:::-;;:::i;:::-;;;1935:25:18;;;1923:2;1908:18;4759:191:0;1789:177:18;1283:27:17;;;;;;;;;;-1:-1:-1;1283:27:17;;;;-1:-1:-1;;;;;1283:27:17;;;5246:136:0;;;;;;;;;;-1:-1:-1;5246:136:0;;;;;:::i;:::-;;:::i;6348:245::-;;;;;;;;;;-1:-1:-1;6348:245:0;;;;;:::i;:::-;;:::i;7619:75:17:-;;;;;;;;;;;;;:::i;4080:112::-;;;;;;;;;;-1:-1:-1;4080:112:17;;;;;:::i;:::-;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;1879:84:3:-;;;;;;;;;;-1:-1:-1;1926:4:3;1949:7;;;1879:84;;2598:930:17;;;;;;;;;;-1:-1:-1;2598:930:17;;;;;:::i;:::-;;:::i;6541:415::-;;;;;;;;;;-1:-1:-1;6541:415:17;;;;;:::i;:::-;;:::i;1108:60::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1108:60:17;;1685:63;;;;;;;;;;-1:-1:-1;1685:63:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1793:36;;;;;;;;;;;;;;;;7542:71;;;;;;;;;;;;;:::i;1451:29::-;;;;;;;;;;-1:-1:-1;1451:29:17;;;;-1:-1:-1;;;;;1451:29:17;;;3732:207:0;;;;;;;;;;-1:-1:-1;3732:207:0;;;;;:::i;:::-;;:::i;4446:104:17:-;;;;;;;;;;-1:-1:-1;4446:104:17;;;;;:::i;:::-;;:::i;4198:116::-;;;;;;;;;;-1:-1:-1;4198:116:17;;;;;:::i;:::-;;:::i;1754:33::-;;;;;;;;;;-1:-1:-1;1754:33:17;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2317:49:0:-;;;;;;;;;;-1:-1:-1;2317:49:0;2362:4;2317:49;;6962:574:17;;;;;;;;;;;;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;4682:120:17:-;;;;;;;;;;-1:-1:-1;4682:120:17;;;;;:::i;:::-;;:::i;5194:395::-;;;;;;;;;;-1:-1:-1;5194:395:17;;;;;:::i;:::-;;:::i;1984:26::-;;;;;;;;;;;;;;;;4808:380;;;;;;;;;;-1:-1:-1;4808:380:17;;;;;:::i;:::-;;:::i;5662:138:0:-;;;;;;;;;;-1:-1:-1;5662:138:0;;;;;:::i;:::-;;:::i;1416:29:17:-;;;;;;;;;;-1:-1:-1;1416:29:17;;;;-1:-1:-1;;;;;1416:29:17;;;4320:120;;;;;;;;;;-1:-1:-1;4320:120:17;;;;;:::i;:::-;;:::i;1040:62::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1040:62:17;;5595:495;;;;;;;;;;-1:-1:-1;5595:495:17;;;;;:::i;:::-;;:::i;4556:120::-;;;;;;;;;;-1:-1:-1;4556:120:17;;;;;:::i;:::-;;:::i;1174:66::-;;;;;;;;;;;;1214:26;1174:66;;3443:202:0;3528:4;-1:-1:-1;;;;;;3551:47:0;;-1:-1:-1;;;3551:47:0;;:87;;-1:-1:-1;;;;;;;;;;1133:40:8;;;3602:36:0;3544:94;3443:202;-1:-1:-1;;3443:202:0:o;6096:410:17:-;3573:31;-1:-1:-1;;;;;;;;;;;3593:10:17;3573:7;:31::i;:::-;3565:56;;;;-1:-1:-1;;;3565:56:17;;;;;;;:::i;:::-;;;;;;;;;3710:12:::1;:19:::0;6168:8;;3699:30;::::1;3691:69;;;;-1:-1:-1::0;;;3691:69:17::1;;;;;;;:::i;:::-;6190:8:::2;3842:12;3855:8;3842:22;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:31:::2;:22;::::0;;::::2;;:31;::::0;::::2;;3841:32;3833:73;;;;-1:-1:-1::0;;;3833:73:17::2;;;;;;;:::i;:::-;6210:31:::3;6244:12;6257:8;6244:22;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;6285:21;;;:11:::3;:21:::0;;;;;;6307:10:::3;6285:33:::0;;;;;;;;6244:22:::3;::::0;;::::3;::::0;;::::3;::::0;-1:-1:-1;6285:33:17::3;;6277:71;;;::::0;-1:-1:-1;;;6277:71:17;;7861:2:18;6277:71:17::3;::::0;::::3;7843:21:18::0;7900:2;7880:18;;;7873:30;7939:27;7919:18;;;7912:55;7984:18;;6277:71:17::3;7659:349:18::0;6277:71:17::3;6391:1;6359:11;:28;;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6438:5:17::3;6402:21:::0;;;:11:::3;:21;::::0;;;;;;;6424:10:::3;6402:33:::0;;;;;;;;:41;;-1:-1:-1;;6402:41:17::3;::::0;;6459:40;6414:8;;6459:40:::3;::::0;::::3;6200:306;3770:1:::2;3631::::1;6096:410:::0;:::o;4759:191:0:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:0;;;;;:24;;;;4759:191::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:0;;966:10:7;6441:34:0;6437:102;;6498:30;;-1:-1:-1;;;6498:30:0;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;7619:75:17:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;7677:10:17::1;:8;:10::i;:::-;7619:75:::0;:::o;4080:112::-;3573:31;-1:-1:-1;;;;;;;;;;;3593:10:17;3573:7;:31::i;:::-;3565:56;;;;-1:-1:-1;;;3565:56:17;;;;;;;:::i;:::-;4157:12:::1;:28:::0;;-1:-1:-1;;;;;;4157:28:17::1;-1:-1:-1::0;;;;;4157:28:17;;;::::1;::::0;;;::::1;::::0;;4080:112::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:2;:::o;2598:930:17:-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;2937:22:17::1;:20;:22::i;:::-;2969:17;:15;:17::i;:::-;2996:24;:22;:24::i;:::-;3031:37;2362:4:0;3062:5:17::0;3031:10:::1;:37::i;:::-;;3078:30;-1:-1:-1::0;;;;;;;;;;;3102:5:17::1;3078:10;:30::i;:::-;;3118:29;-1:-1:-1::0;;;;;;;;;;;3141:5:17::1;3118:10;:29::i;:::-;;3157:32;1214:26;3183:5;3157:10;:32::i;:::-;-1:-1:-1::0;3200:21:17::1;:46:::0;;;3256:11:::1;:26:::0;;;3293:12:::1;:28:::0;;-1:-1:-1;;;;;;3293:28:17;;::::1;-1:-1:-1::0;;;;;3293:28:17;;::::1;::::0;;;::::1;::::0;;;3331:13:::1;:30:::0;;;::::1;::::0;;::::1;;::::0;;3371:14:::1;:32:::0;;;::::1;::::0;;::::1;;::::0;;3413:10:::1;:24:::0;;;::::1;::::0;;::::1;;::::0;;3447:14:::1;:32:::0;;;::::1;::::0;;::::1;;::::0;;3489:14:::1;:32:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;8431:50:18;;5142:14:1;;8419:2:18;8404:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;2598:930:17;;;;;;;;;:::o;6541:415::-;1503:19:3;:17;:19::i;:::-;6654:12:17::1;::::0;6685:54:::1;::::0;-1:-1:-1;;;6685:54:17;;6704:10:::1;6685:54;::::0;::::1;8694:51:18::0;6724:4:17::1;8761:18:18::0;;;8754:60;8830:18;;;8823:34;;;-1:-1:-1;;;;;6654:12:17;;::::1;::::0;;;6685:18:::1;::::0;8667::18;;6685:54:17::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6677:88;;;::::0;-1:-1:-1;;;6677:88:17;;9352:2:18;6677:88:17::1;::::0;::::1;9334:21:18::0;9391:2;9371:18;;;9364:30;-1:-1:-1;;;9410:18:18;;;9403:51;9471:18;;6677:88:17::1;9150:345:18::0;6677:88:17::1;6797:86;::::0;;;;::::1;::::0;;;;;6857:15:::1;6797:86;::::0;;::::1;::::0;;;6783:10:::1;-1:-1:-1::0;6776:18:17;;;:6:::1;:18:::0;;;;;:107;;;;;;::::1;::::0;;::::1;::::0;;;;6899:50;;1248:25:18;;;1289:18;;;1282:34;;;;6783:10:17;;6899:50:::1;::::0;1221:18:18;6899:50:17::1;;;;;;;6600:356;6541:415:::0;:::o;7542:71::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;7598:8:17::1;:6;:8::i;3732:207:0:-:0;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:0;;;;;;;;-1:-1:-1;;;;;3901:31:0;;;;;;;;;;;;;;;3732:207::o;4446:104:17:-;3573:31;-1:-1:-1;;;;;;;;;;;3593:10:17;3573:7;:31::i;:::-;3565:56;;;;-1:-1:-1;;;3565:56:17;;;;;;;:::i;:::-;4519:10:::1;:24:::0;;-1:-1:-1;;;;;;4519:24:17::1;-1:-1:-1::0;;;;;4519:24:17;;;::::1;::::0;;;::::1;::::0;;4446:104::o;4198:116::-;3573:31;-1:-1:-1;;;;;;;;;;;3593:10:17;3573:7;:31::i;:::-;3565:56;;;;-1:-1:-1;;;3565:56:17;;;;;;;:::i;:::-;4277:13:::1;:30:::0;;-1:-1:-1;;;;;;4277:30:17::1;-1:-1:-1::0;;;;;4277:30:17;;;::::1;::::0;;;::::1;::::0;;4198:116::o;1754:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1754:33:17;;;;-1:-1:-1;1754:33:17;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1754:33:17;;;;;;;;;;;;;;;-1:-1:-1;1754:33:17;:::o;6962:574::-;1503:19:3;:17;:19::i;:::-;7046:10:17::1;7018:18;7039::::0;;;:6:::1;:18;::::0;;;;;;;;7018:39;;;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;7067:45:::1;;;::::0;-1:-1:-1;;;7067:45:17;;10087:2:18;7067:45:17::1;::::0;::::1;10069:21:18::0;10126:2;10106:18;;;10099:30;-1:-1:-1;;;10145:18:18;;;10138:46;10201:18;;7067:45:17::1;9885:340:18::0;7067:45:17::1;7123:23;7167:5;:15;;;7149;:33;;;;:::i;:::-;7123:59;;7192:14;7259:8;7239:15;7225:11;;7210:5;:12;;;:26;;;;:::i;:::-;:44;;;;:::i;:::-;7209:59;;;;:::i;:::-;7323:12;::::0;7381;;7192:76;;-1:-1:-1;;;;;;7323:12:17::1;::::0;;;7354:14:::1;::::0;7369:10:::1;::::0;7381:21:::1;::::0;7192:76;;7381:21:::1;:::i;:::-;7354:49;::::0;-1:-1:-1;;;;;;7354:49:17::1;::::0;;;;;;-1:-1:-1;;;;;10947:32:18;;;7354:49:17::1;::::0;::::1;10929:51:18::0;10996:18;;;10989:34;10902:18;;7354:49:17::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7346:83;;;::::0;-1:-1:-1;;;7346:83:17;;9352:2:18;7346:83:17::1;::::0;::::1;9334:21:18::0;9391:2;9371:18;;;9364:30;-1:-1:-1;;;9410:18:18;;;9403:51;9471:18;;7346:83:17::1;9150:345:18::0;7346:83:17::1;7454:10;7447:18;::::0;;;:6:::1;:18;::::0;;;;;;;7440:25;;;::::1;;::::0;;;;7508:12;;7481:48;;1248:25:18;;;1289:18;;;1282:34;;;7481:48:17::1;::::0;1221:18:18;7481:48:17::1;;;;;;;7008:528;;;;6962:574::o:0;4682:120::-;3573:31;-1:-1:-1;;;;;;;;;;;3593:10:17;3573:7;:31::i;:::-;3565:56;;;;-1:-1:-1;;;3565:56:17;;;;;;;:::i;:::-;4763:14:::1;:32:::0;;-1:-1:-1;;;;;;4763:32:17::1;-1:-1:-1::0;;;;;4763:32:17;;;::::1;::::0;;;::::1;::::0;;4682:120::o;5194:395::-;3573:31;-1:-1:-1;;;;;;;;;;;3593:10:17;3573:7;:31::i;:::-;3565:56;;;;-1:-1:-1;;;3565:56:17;;;;;;;:::i;:::-;3710:12:::1;:19:::0;5290:8;;3699:30;::::1;3691:69;;;;-1:-1:-1::0;;;3691:69:17::1;;;;;;;:::i;:::-;5320:8:::2;3842:12;3855:8;3842:22;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:31:::2;:22;::::0;;::::2;;:31;::::0;::::2;;3841:32;3833:73;;;;-1:-1:-1::0;;;3833:73:17::2;;;;;;;:::i;:::-;3989:21:::3;::::0;;;:11:::3;:21;::::0;;;;;;;4011:10:::3;3989:33:::0;;;;;;;;5351:8;;3989:33:::3;;3988:34;3980:76;;;::::0;-1:-1:-1;;;3980:76:17;;11236:2:18;3980:76:17::3;::::0;::::3;11218:21:18::0;11275:2;11255:18;;;11248:30;11314:31;11294:18;;;11287:59;11363:18;;3980:76:17::3;11034:353:18::0;3980:76:17::3;5375:31:::4;5409:12;5422:8;5409:22;;;;;;;;:::i;:::-;;;;;;;;;;;5375:56;;5473:1;5441:11;:28;;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5484:21:17::4;::::0;;;:11:::4;:21;::::0;;;;;;;5506:10:::4;5484:33:::0;;;;;;;;:40;;-1:-1:-1;;5484:40:17::4;5520:4;5484:40;::::0;;5540:42;5496:8;;5540:42:::4;::::0;::::4;5365:224;3916:1:::3;3770::::2;3631::::1;5194:395:::0;:::o;4808:380::-;3573:31;-1:-1:-1;;;;;;;;;;;3593:10:17;3573:7;:31::i;:::-;3565:56;;;;-1:-1:-1;;;3565:56:17;;;;;;;:::i;:::-;4929:12:::1;:19:::0;;4977:158:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4977:158:17;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;4977:158:17;;;;;;;;;;;;;4959:177;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4959:177:17::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;;;;;4929:19;;4977:158;;4959:177;;;;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;4959:177:17::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;4959:177:17::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;5152:29:::1;::::0;5173:7;;5152:29:::1;::::0;-1:-1:-1;;5152:29:17::1;4901:287;4808:380:::0;;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;4320:120:17:-:0;3573:31;-1:-1:-1;;;;;;;;;;;3593:10:17;3573:7;:31::i;:::-;3565:56;;;;-1:-1:-1;;;3565:56:17;;;;;;;:::i;:::-;4401:14:::1;:32:::0;;-1:-1:-1;;;;;;4401:32:17::1;-1:-1:-1::0;;;;;4401:32:17;;;::::1;::::0;;;::::1;::::0;;4320:120::o;5595:495::-;3573:31;-1:-1:-1;;;;;;;;;;;3593:10:17;3573:7;:31::i;:::-;3565:56;;;;-1:-1:-1;;;3565:56:17;;;;;;;:::i;:::-;3710:12:::1;:19:::0;5667:8;;3699:30;::::1;3691:69;;;;-1:-1:-1::0;;;3691:69:17::1;;;;;;;:::i;:::-;5689:8:::2;3842:12;3855:8;3842:22;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:31:::2;:22;::::0;;::::2;;:31;::::0;::::2;;3841:32;3833:73;;;;-1:-1:-1::0;;;3833:73:17::2;;;;;;;:::i;:::-;5709:31:::3;5743:12;5756:8;5743:22;;;;;;;;:::i;:::-;;;;;;;;;;;5709:56;;5816:21;;5784:11;:28;;;:53;;5776:83;;;::::0;-1:-1:-1;;;5776:83:17;;13712:2:18;5776:83:17::3;::::0;::::3;13694:21:18::0;13751:2;13731:18;;;13724:30;-1:-1:-1;;;13770:18:18;;;13763:47;13827:18;;5776:83:17::3;13510:341:18::0;5776:83:17::3;5870:20;::::0;::::3;:27:::0;;-1:-1:-1;;5870:27:17::3;5893:4;5870:27:::0;;::::3;::::0;;;5927:14;;5954:17;;::::3;::::0;5927:63:::3;::::0;5870:20:::3;::::0;-1:-1:-1;;;;;5927:14:17::3;::::0;5954:17;5927:63:::3;::::0;5973:16:::3;::::0;::::3;::::0;5927:63:::3;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5908:82;;;6008:7;6000:38;;;::::0;-1:-1:-1;;;6000:38:17;;14858:2:18;6000:38:17::3;::::0;::::3;14840:21:18::0;14897:2;14877:18;;;14870:30;-1:-1:-1;;;14916:18:18;;;14909:48;14974:18;;6000:38:17::3;14656:342:18::0;6000:38:17::3;6054:29;::::0;6074:8;;6054:29:::3;::::0;;;::::3;5699:391;;3770:1:::2;3631::::1;5595:495:::0;:::o;4556:120::-;3573:31;-1:-1:-1;;;;;;;;;;;3593:10:17;3573:7;:31::i;:::-;3565:56;;;;-1:-1:-1;;;3565:56:17;;;;;;;:::i;:::-;4637:14:::1;:32:::0;;-1:-1:-1;;;;;;4637:32:17::1;-1:-1:-1::0;;;;;4637:32:17;;;::::1;::::0;;;::::1;::::0;;4556:120::o;4148:103:0:-;4214:30;4225:4;966:10:7;4214::0;:30::i;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:0;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:0;;;;;;;;;:38;;-1:-1:-1;;7475:38:0;7509:4;7475:38;;;7559:12;966:10:7;;887:96;7559:12:0;-1:-1:-1;;;;;7532:40:0;7550:7;-1:-1:-1;;;;;7532:40:0;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7892:388;7970:4;-1:-1:-1;;;;;;;;;;;8059:22:0;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:14;;;;;;;;;;;-1:-1:-1;;;;;8097:31:0;;;;;;;;;;:39;;-1:-1:-1;;8097:39:0;;;8155:40;966:10:7;;8097:14:0;;8155:40;;8131:5;8155:40;8216:4;8209:11;;;;;2697:117:3;1750:16;:14;:16::i;:::-;2765:5:::1;2755:15:::0;;-1:-1:-1;;2755:15:3::1;::::0;;2785:22:::1;966:10:7::0;2794:12:3::1;2785:22;::::0;-1:-1:-1;;;;;661:32:18;;;643:51;;631:2;616:18;2785:22:3::1;;;;;;;2697:117::o:0;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;-1:-1:-1;;;;;;;;;;;2035:53:12;-1:-1:-1;;;;;2035:53:12;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:2;;;;;;;;;;;4654:251;4599:312::o;7700:98:17:-;1214:26;3191:16:0;3202:4;3191:10;:16::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;661:32:18;;6513:60:2;;;643:51:18;616:18;;6513:60:2;497:203:18;6147:437:2;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:2;;;;;1935:25:18;;;1908:18;;6312:34:2;1789:177:18;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:2;;;;;;;;;;;3231:65:0;6931:20:1;:18;:20::i;1084:97:3:-;6931:20:1;:18;:20::i;:::-;1147:27:3::1;:25;:27::i;2031:106::-:0;1926:4;1949:7;;;2100:9;2092:38;;;;-1:-1:-1;;;2092:38:3;;15394:2:18;2092:38:3;;;15376:21:18;15433:2;15413:18;;;15406:30;-1:-1:-1;;;15452:18:18;;;15445:46;15508:18;;2092:38:3;15192:340:18;2450:115:3;1503:19;:17;:19::i;:::-;2509:7:::1;:14:::0;;-1:-1:-1;;2509:14:3::1;2519:4;2509:14;::::0;;2538:20:::1;2545:12;966:10:7::0;;887:96;4381:197:0;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:0;;-1:-1:-1;;;;;10947:32:18;;4514:47:0;;;10929:51:18;10996:18;;;10989:34;;;10902:18;;4514:47:0;10755:274:18;2209:106:3;1926:4;1949:7;;;2267:41;;;;-1:-1:-1;;;2267:41:3;;16018:2:18;2267:41:3;;;16000:21:18;16057:2;16037:18;;;16030:30;-1:-1:-1;;;16076:18:18;;;16069:50;16136:18;;2267:41:3;15816:344:18;2779:335:12;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:12;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1187:95:3;6931:20:1;:18;:20::i;:::-;1270:5:3::1;1260:15:::0;;-1:-1:-1;;1260:15:3::1;::::0;;1187:95::o;2186:281:12:-;2263:17;-1:-1:-1;;;;;2263:29:12;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:12;;-1:-1:-1;;;;;661:32:18;;2320:47:12;;;643:51:18;616:18;;2320:47:12;497:203:18;2259:119:12;-1:-1:-1;;;;;;;;;;;2387:73:12;;-1:-1:-1;;;;;;2387:73:12;-1:-1:-1;;;;;2387:73:12;;;;;;;;;;2186:281::o;4106:253:14:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:14;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:14:o;6598:122:12:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:12;;;;;;;;;;;4625:582:14;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:14;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:14;;-1:-1:-1;;;;;661:32:18;;5121:24:14;;;643:51:18;616:18;;5121:24:14;497:203:18;5041:119:14;-1:-1:-1;5180:10:14;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:14;;;;;;;;;;;14:286:18;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:18;;209:43;;199:71;;266:1;263;256:12;705:173;773:20;;-1:-1:-1;;;;;822:31:18;;812:42;;802:70;;868:1;865;858:12;802:70;705:173;;;:::o;883:186::-;942:6;995:2;983:9;974:7;970:23;966:32;963:52;;;1011:1;1008;1001:12;963:52;1034:29;1053:9;1034:29;:::i;1327:226::-;1386:6;1439:2;1427:9;1418:7;1414:23;1410:32;1407:52;;;1455:1;1452;1445:12;1407:52;-1:-1:-1;1500:23:18;;1327:226;-1:-1:-1;1327:226:18:o;1971:300::-;2039:6;2047;2100:2;2088:9;2079:7;2075:23;2071:32;2068:52;;;2116:1;2113;2106:12;2068:52;2161:23;;;-1:-1:-1;2227:38:18;2261:2;2246:18;;2227:38;:::i;:::-;2217:48;;1971:300;;;;;:::o;2276:127::-;2337:10;2332:3;2328:20;2325:1;2318:31;2368:4;2365:1;2358:15;2392:4;2389:1;2382:15;2408:725;2450:5;2503:3;2496:4;2488:6;2484:17;2480:27;2470:55;;2521:1;2518;2511:12;2470:55;2561:6;2548:20;2591:18;2583:6;2580:30;2577:56;;;2613:18;;:::i;:::-;2662:2;2656:9;2754:2;2716:17;;-1:-1:-1;;2712:31:18;;;2745:2;2708:40;2704:54;2692:67;;2789:18;2774:34;;2810:22;;;2771:62;2768:88;;;2836:18;;:::i;:::-;2872:2;2865:22;2896;;;2937:19;;;2958:4;2933:30;2930:39;-1:-1:-1;2927:59:18;;;2982:1;2979;2972:12;2927:59;3046:6;3039:4;3031:6;3027:17;3020:4;3012:6;3008:17;2995:58;3101:1;3073:19;;;3094:4;3069:30;3062:41;;;;3077:6;2408:725;-1:-1:-1;;;2408:725:18:o;3138:394::-;3215:6;3223;3276:2;3264:9;3255:7;3251:23;3247:32;3244:52;;;3292:1;3289;3282:12;3244:52;3315:29;3334:9;3315:29;:::i;:::-;3305:39;;3395:2;3384:9;3380:18;3367:32;3422:18;3414:6;3411:30;3408:50;;;3454:1;3451;3444:12;3408:50;3477:49;3518:7;3509:6;3498:9;3494:22;3477:49;:::i;:::-;3467:59;;;3138:394;;;;;:::o;3537:870::-;3668:6;3676;3684;3692;3700;3708;3716;3724;3732;3785:3;3773:9;3764:7;3760:23;3756:33;3753:53;;;3802:1;3799;3792:12;3753:53;3825:29;3844:9;3825:29;:::i;:::-;3815:39;-1:-1:-1;3923:2:18;3908:18;;3895:32;;-1:-1:-1;4024:2:18;4009:18;;3996:32;;-1:-1:-1;4073:38:18;4107:2;4092:18;;4073:38;:::i;:::-;4063:48;;4130:39;4164:3;4153:9;4149:19;4130:39;:::i;:::-;4120:49;;4188:39;4222:3;4211:9;4207:19;4188:39;:::i;:::-;4178:49;;4246:39;4280:3;4269:9;4265:19;4246:39;:::i;:::-;4236:49;;4304:39;4338:3;4327:9;4323:19;4304:39;:::i;:::-;4294:49;;4362:39;4396:3;4385:9;4381:19;4362:39;:::i;:::-;4352:49;;3537:870;;;;;;;;;;;:::o;4899:288::-;4940:3;4978:5;4972:12;5005:6;5000:3;4993:19;5061:6;5054:4;5047:5;5043:16;5036:4;5031:3;5027:14;5021:47;5113:1;5106:4;5097:6;5092:3;5088:16;5084:27;5077:38;5176:4;5169:2;5165:7;5160:2;5152:6;5148:15;5144:29;5139:3;5135:39;5131:50;5124:57;;;4899:288;;;;:::o;5192:540::-;5474:1;5470;5465:3;5461:11;5457:19;5449:6;5445:32;5434:9;5427:51;5514:6;5509:2;5498:9;5494:18;5487:34;5557:3;5552:2;5541:9;5537:18;5530:31;5408:4;5578:45;5618:3;5607:9;5603:19;5595:6;5578:45;:::i;:::-;5666:14;;5659:22;5654:2;5639:18;;5632:50;-1:-1:-1;5713:3:18;5698:19;5691:35;5570:53;5192:540;-1:-1:-1;;;5192:540:18:o;5737:219::-;5886:2;5875:9;5868:21;5849:4;5906:44;5946:2;5935:9;5931:18;5923:6;5906:44;:::i;5961:508::-;6047:6;6055;6063;6116:2;6104:9;6095:7;6091:23;6087:32;6084:52;;;6132:1;6129;6122:12;6084:52;6155:29;6174:9;6155:29;:::i;:::-;6145:39;-1:-1:-1;6253:2:18;6238:18;;6225:32;;-1:-1:-1;6332:2:18;6317:18;;6304:32;6359:18;6348:30;;6345:50;;;6391:1;6388;6381:12;6345:50;6414:49;6455:7;6446:6;6435:9;6431:22;6414:49;:::i;:::-;6404:59;;;5961:508;;;;;:::o;6474:336::-;6676:2;6658:21;;;6715:2;6695:18;;;6688:30;-1:-1:-1;;;6749:2:18;6734:18;;6727:42;6801:2;6786:18;;6474:336::o;6815:350::-;7017:2;6999:21;;;7056:2;7036:18;;;7029:30;7095:28;7090:2;7075:18;;7068:56;7156:2;7141:18;;6815:350::o;7170:127::-;7231:10;7226:3;7222:20;7219:1;7212:31;7262:4;7259:1;7252:15;7286:4;7283:1;7276:15;7302:352;7504:2;7486:21;;;7543:2;7523:18;;;7516:30;7582;7577:2;7562:18;;7555:58;7645:2;7630:18;;7302:352::o;8013:127::-;8074:10;8069:3;8065:20;8062:1;8055:31;8105:4;8102:1;8095:15;8129:4;8126:1;8119:15;8145:128;8212:9;;;8233:11;;;8230:37;;;8247:18;;:::i;8868:277::-;8935:6;8988:2;8976:9;8967:7;8963:23;8959:32;8956:52;;;9004:1;9001;8994:12;8956:52;9036:9;9030:16;9089:5;9082:13;9075:21;9068:5;9065:32;9055:60;;9111:1;9108;9101:12;9500:380;9579:1;9575:12;;;;9622;;;9643:61;;9697:4;9689:6;9685:17;9675:27;;9643:61;9750:2;9742:6;9739:14;9719:18;9716:38;9713:161;;9796:10;9791:3;9787:20;9784:1;9777:31;9831:4;9828:1;9821:15;9859:4;9856:1;9849:15;9713:161;;9500:380;;;:::o;10230:168::-;10303:9;;;10334;;10351:15;;;10345:22;;10331:37;10321:71;;10372:18;;:::i;10403:217::-;10443:1;10469;10459:132;;10513:10;10508:3;10504:20;10501:1;10494:31;10548:4;10545:1;10538:15;10576:4;10573:1;10566:15;10459:132;-1:-1:-1;10605:9:18;;10403:217::o;10625:125::-;10690:9;;;10711:10;;;10708:36;;;10724:18;;:::i;11517:517::-;11618:2;11613:3;11610:11;11607:421;;;11654:5;11651:1;11644:16;11698:4;11695:1;11685:18;11768:2;11756:10;11752:19;11749:1;11745:27;11739:4;11735:38;11804:4;11792:10;11789:20;11786:47;;;-1:-1:-1;11827:4:18;11786:47;11882:2;11877:3;11873:12;11870:1;11866:20;11860:4;11856:31;11846:41;;11937:81;11955:2;11948:5;11945:13;11937:81;;;12014:1;12000:16;;11981:1;11970:13;11937:81;;;11941:3;;11517:517;;;:::o;12210:1295::-;12334:3;12328:10;12361:18;12353:6;12350:30;12347:56;;;12383:18;;:::i;:::-;12412:96;12501:6;12461:38;12493:4;12487:11;12461:38;:::i;:::-;12455:4;12412:96;:::i;:::-;12557:4;12588:2;12577:14;;12605:1;12600:648;;;;13292:1;13309:6;13306:89;;;-1:-1:-1;13361:19:18;;;13355:26;13306:89;-1:-1:-1;;12167:1:18;12163:11;;;12159:24;12155:29;12145:40;12191:1;12187:11;;;12142:57;13408:81;;12570:929;;12600:648;11464:1;11457:14;;;11501:4;11488:18;;-1:-1:-1;;12636:20:18;;;12753:222;12767:7;12764:1;12761:14;12753:222;;;12849:19;;;12843:26;12828:42;;12956:4;12941:20;;;;12909:1;12897:14;;;;12783:12;12753:222;;;12757:3;13003:6;12994:7;12991:19;12988:201;;;13064:19;;;13058:26;-1:-1:-1;;13147:1:18;13143:14;;;13159:3;13139:24;13135:37;13131:42;13116:58;13101:74;;12988:201;-1:-1:-1;;;;13235:1:18;13219:14;;;13215:22;13202:36;;-1:-1:-1;12210:1295:18:o;13856:795::-;13982:3;14011:1;14044:6;14038:13;14074:36;14100:9;14074:36;:::i;:::-;14141:1;14126:17;;14152:133;;;;14299:1;14294:332;;;;14119:507;;14152:133;-1:-1:-1;;14185:24:18;;14173:37;;14258:14;;14251:22;14239:35;;14230:45;;;-1:-1:-1;14152:133:18;;14294:332;14325:6;14322:1;14315:17;14373:4;14370:1;14360:18;14400:1;14414:166;14428:6;14425:1;14422:13;14414:166;;;14508:14;;14495:11;;;14488:35;14564:1;14551:15;;;;14450:4;14443:12;14414:166;;;14418:3;;14609:6;14604:3;14600:16;14593:23;;14119:507;-1:-1:-1;14642:3:18;;13856:795;-1:-1:-1;;;;;13856:795:18:o;15003:184::-;15073:6;15126:2;15114:9;15105:7;15101:23;15097:32;15094:52;;;15142:1;15139;15132:12;15094:52;-1:-1:-1;15165:16:18;;15003:184;-1:-1:-1;15003:184:18:o;16165:301::-;16294:3;16332:6;16326:13;16378:6;16371:4;16363:6;16359:17;16354:3;16348:37;16440:1;16404:16;;16429:13;;;-1:-1:-1;16404:16:18;16165:301;-1:-1:-1;16165:301:18:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1874600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "infinite",
								"DEFAULT_ADMIN_ROLE()": "260",
								"PAUSER_ROLE()": "infinite",
								"UPGRADER_ROLE()": "326",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"confirmTransaction(uint256)": "infinite",
								"daoAddress()": "2471",
								"erc1155Address()": "2405",
								"erc20Address()": "2426",
								"erc721Address()": "2382",
								"executeTransaction(uint256)": "infinite",
								"farmingAddress()": "2404",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"initialize(address,uint256,uint256,address,address,address,address,address,address)": "infinite",
								"isConfirmed(uint256,address)": "2726",
								"pause()": "infinite",
								"paused()": "2425",
								"proxiableUUID()": "infinite",
								"renounceRole(bytes32,address)": "29227",
								"requiredConfirmations()": "2427",
								"revokeConfirmation(uint256)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setDAOAddress(address)": "infinite",
								"setERC1155Address(address)": "infinite",
								"setERC20Address(address)": "infinite",
								"setERC721Address(address)": "infinite",
								"setFarmingAddress(address)": "infinite",
								"setStakingAddress(address)": "infinite",
								"stakeTokens(uint256)": "infinite",
								"stakes(address)": "4746",
								"stakingAddress()": "2469",
								"stakingRate()": "2361",
								"submitTransaction(address,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "470",
								"transactions(uint256)": "infinite",
								"unpause()": "infinite",
								"unstakeTokens()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 908,
									"end": 7835,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2539,
									"end": 2592,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 2539,
									"end": 2592,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2539,
									"end": 2592,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2539,
									"end": 2592,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2539,
									"end": 2592,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2539,
									"end": 2592,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2539,
									"end": 2592,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2539,
									"end": 2592,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 2539,
									"end": 2592,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2539,
									"end": 2592,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2563,
									"end": 2585,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 2563,
									"end": 2583,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 2563,
									"end": 2585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2563,
									"end": 2585,
									"name": "tag",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 2563,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "15"
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "10000000000000000"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "636"
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 908,
									"end": 7835,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209751a2fb8d2b5b4f84396109cfd73e27b269854c039cf2e77b4c219a045d7b3364736f6c634300081a0033",
									".code": [
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "8456CB59"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "C01A8C84"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "D836FC6F"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "D836FC6F"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "E63AB1E9"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "EE22610B"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "F4E0D9AC"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "F72C0D8B"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "tag",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "C01A8C84"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "C63A6AD2"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "C6427474"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "D547741F"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "D7B4BE24"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "tag",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "9ACE38C2"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "9ACE38C2"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "A217FDDF"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "A5CE413B"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "AD3CB1CC"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "B001F618"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "tag",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "8456CB59"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "8A2ADE58"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "91D14854"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "965AFA89"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "9A03D9A3"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "tag",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "3F4BA83A"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "63447471"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "63447471"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "7547C7A3"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "75B238FC"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "80F59A65"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "82E717F7"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "3F4BA83A"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "41BEC0D2"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "4F1EF286"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "52D1902D"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "5C975ABB"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "2352A864"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "2352A864"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "248A9CA3"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "276184AE"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "2F2FF15D"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "36568ABE"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "1FFC9A7"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "5142002"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "16934FC4"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "20EA8D86"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "2131C68C"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 908,
											"end": 7835,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 661,
											"end": 693,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 643,
											"end": 694,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "tag",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 1939,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "tag",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH",
											"source": 17,
											"value": "3B"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1304,
											"end": 1306,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1307,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1307,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1282,
											"end": 1316,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1282,
											"end": 1316,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1282,
											"end": 1316,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1282,
											"end": 1316,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1221,
											"end": 1239,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1939,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 1074,
											"end": 1322,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "tag",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "71"
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "tag",
											"source": 17,
											"value": "71"
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 6096,
											"end": 6506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 6096,
											"end": 6506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "tag",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "tag",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1410,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "tag",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1344,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1960,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1935,
											"end": 1960,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1935,
											"end": 1960,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1923,
											"end": 1925,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1926,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1789,
											"end": 1966,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "tag",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "tag",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "tag",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "tag",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 7619,
											"end": 7694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "tag",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 4080,
											"end": 4192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "tag",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 4080,
											"end": 4192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "tag",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "tag",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 2598,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "tag",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2598,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "tag",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "tag",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "130"
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 6541,
											"end": 6956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "tag",
											"source": 17,
											"value": "130"
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 6541,
											"end": 6956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "tag",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1168,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "tag",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "138"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 1685,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "tag",
											"source": 17,
											"value": "138"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1685,
											"end": 1748,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "tag",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "PUSH",
											"source": 17,
											"value": "3A"
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "tag",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 7542,
											"end": 7613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "tag",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "PUSH",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1480,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 4446,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 4446,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "tag",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 4198,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "tag",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 4198,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "tag",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 1754,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "tag",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 1754,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "tag",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 1754,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "tag",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "179"
										},
										{
											"begin": 6962,
											"end": 7536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "tag",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 4682,
											"end": 4802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "tag",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 4682,
											"end": 4802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "tag",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 5194,
											"end": 5589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "tag",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 5194,
											"end": 5589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "tag",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "PUSH",
											"source": 17,
											"value": "3C"
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1984,
											"end": 2010,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "tag",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 4808,
											"end": 5188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "tag",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 4808,
											"end": 5188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "tag",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "tag",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 4320,
											"end": 4440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "tag",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 4320,
											"end": 4440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "tag",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "tag",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "tag",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 5595,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "tag",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 5595,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "tag",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "tag",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "224"
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 4556,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "tag",
											"source": 17,
											"value": "224"
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "225"
										},
										{
											"begin": 4556,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "tag",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "tag",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "PUSH",
											"source": 17,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1240,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3573,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "tag",
											"source": 17,
											"value": "235"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3565,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6168,
											"end": 6176,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6168,
											"end": 6176,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3699,
											"end": 3729,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3699,
											"end": 3729,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 3691,
											"end": 3760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6190,
											"end": 6198,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3854,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 3855,
											"end": 3863,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 3842,
											"end": 3864,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3841,
											"end": 3873,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 3833,
											"end": 3906,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6210,
											"end": 6241,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6256,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 6257,
											"end": 6265,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 6244,
											"end": 6266,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6306,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6306,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6306,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6296,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 6285,
											"end": 6306,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6306,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6306,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6285,
											"end": 6306,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6306,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6306,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6307,
											"end": 6317,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6318,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6318,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6318,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6318,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6318,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6318,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6318,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6318,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6285,
											"end": 6318,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 6285,
											"end": 6318,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6277,
											"end": 6348,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 6277,
											"end": 6348,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6277,
											"end": 6348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6277,
											"end": 6348,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6348,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6277,
											"end": 6348,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7861,
											"end": 7863,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6277,
											"end": 6348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6277,
											"end": 6348,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6277,
											"end": 6348,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7843,
											"end": 7864,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7900,
											"end": 7902,
											"name": "PUSH",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 7880,
											"end": 7898,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7880,
											"end": 7898,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7880,
											"end": 7898,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7873,
											"end": 7903,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7939,
											"end": 7966,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73616374696F6E206E6F7420636F6E6669726D656400000000000000"
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7912,
											"end": 7967,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6277,
											"end": 6348,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 7659,
											"end": 8008,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6277,
											"end": 6348,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 6277,
											"end": 6348,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6391,
											"end": 6392,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6359,
											"end": 6370,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6387,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6359,
											"end": 6387,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6387,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6392,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6392,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6392,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6392,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 6359,
											"end": 6392,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6392,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6392,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 6359,
											"end": 6392,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6392,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 6359,
											"end": 6392,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6392,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6392,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6392,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6438,
											"end": 6443,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6413,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 6402,
											"end": 6423,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6424,
											"end": 6434,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6443,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6443,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6402,
											"end": 6443,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6443,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6443,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 6459,
											"end": 6499,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6414,
											"end": 6422,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6414,
											"end": 6422,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6459,
											"end": 6499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "E5C8875C5E14471F806F15F740CD9FD54937D151E9DCF8AD3BA988D6A285E67E"
										},
										{
											"begin": 6459,
											"end": 6499,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6459,
											"end": 6499,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 17
										},
										{
											"begin": 6200,
											"end": 6506,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3770,
											"end": 3771,
											"modifierDepth": 2,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3631,
											"end": 3632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6096,
											"end": 6506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 5361,
											"end": 5365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 6549,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "tag",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 7677,
											"end": 7685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 7677,
											"end": 7687,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7677,
											"end": 7687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 7677,
											"end": 7687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7694,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "tag",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 4080,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3573,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3565,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4157,
											"end": 4169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 4157,
											"end": 4185,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4157,
											"end": 4185,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4157,
											"end": 4185,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4157,
											"end": 4185,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4157,
											"end": 4185,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4157,
											"end": 4185,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4157,
											"end": 4185,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4157,
											"end": 4185,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4157,
											"end": 4185,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4157,
											"end": 4185,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4157,
											"end": 4185,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4157,
											"end": 4185,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4157,
											"end": 4185,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4080,
											"end": 4192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "tag",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 2937,
											"end": 2957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 2937,
											"end": 2959,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2937,
											"end": 2959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 2937,
											"end": 2959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2969,
											"end": 2986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 2969,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 2969,
											"end": 2986,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2969,
											"end": 2986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 2969,
											"end": 2986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 2996,
											"end": 3018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 2996,
											"end": 3020,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 2996,
											"end": 3020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 2362,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3067,
											"name": "DUP16",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 3031,
											"end": 3068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 3031,
											"end": 3068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3068,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3078,
											"end": 3108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3102,
											"end": 3107,
											"modifierDepth": 1,
											"name": "DUP16",
											"source": 17
										},
										{
											"begin": 3078,
											"end": 3088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 3078,
											"end": 3108,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3078,
											"end": 3108,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 3078,
											"end": 3108,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3078,
											"end": 3108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3118,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "316"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3141,
											"end": 3146,
											"modifierDepth": 1,
											"name": "DUP16",
											"source": 17
										},
										{
											"begin": 3118,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 3118,
											"end": 3147,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3118,
											"end": 3147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 3118,
											"end": 3147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3118,
											"end": 3147,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 1214,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3183,
											"end": 3188,
											"modifierDepth": 1,
											"name": "DUP16",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 3157,
											"end": 3189,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3189,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 3157,
											"end": 3189,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3200,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3A"
										},
										{
											"begin": 3200,
											"end": 3246,
											"name": "DUP14",
											"source": 17
										},
										{
											"begin": 3200,
											"end": 3246,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3200,
											"end": 3246,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3256,
											"end": 3267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3C"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "DUP13",
											"source": 17
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "DUP15",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3321,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3331,
											"end": 3344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 3331,
											"end": 3361,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3331,
											"end": 3361,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3331,
											"end": 3361,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3331,
											"end": 3361,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3331,
											"end": 3361,
											"name": "DUP14",
											"source": 17
										},
										{
											"begin": 3331,
											"end": 3361,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3331,
											"end": 3361,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3331,
											"end": 3361,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 3331,
											"end": 3361,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3331,
											"end": 3361,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3371,
											"end": 3385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 3371,
											"end": 3403,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3371,
											"end": 3403,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3371,
											"end": 3403,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3371,
											"end": 3403,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3371,
											"end": 3403,
											"name": "DUP13",
											"source": 17
										},
										{
											"begin": 3371,
											"end": 3403,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3371,
											"end": 3403,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3371,
											"end": 3403,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 3371,
											"end": 3403,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3371,
											"end": 3403,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3413,
											"end": 3437,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 3447,
											"end": 3479,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3479,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3479,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3479,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3479,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3479,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3479,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3479,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 3489,
											"end": 3521,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3489,
											"end": 3521,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8431,
											"end": 8481,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8431,
											"end": 8481,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8421,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8404,
											"end": 8422,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 3528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "tag",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6654,
											"end": 6666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 6654,
											"end": 6666,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6685,
											"end": 6739,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6685,
											"end": 6739,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6704,
											"end": 6714,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6685,
											"end": 6739,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8694,
											"end": 8745,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6724,
											"end": 6728,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8754,
											"end": 8814,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8823,
											"end": 8857,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8823,
											"end": 8857,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8823,
											"end": 8857,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6654,
											"end": 6666,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6654,
											"end": 6666,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6654,
											"end": 6666,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6654,
											"end": 6666,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6654,
											"end": 6666,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6654,
											"end": 6666,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 6685,
											"end": 6703,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8667,
											"end": 8685,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8667,
											"end": 8685,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6685,
											"end": 6739,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 6685,
											"end": 6739,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 6685,
											"end": 6739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6677,
											"end": 6765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 6677,
											"end": 6765,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6677,
											"end": 6765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6677,
											"end": 6765,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6677,
											"end": 6765,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6677,
											"end": 6765,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9352,
											"end": 9354,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6677,
											"end": 6765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6677,
											"end": 6765,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6677,
											"end": 6765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9334,
											"end": 9355,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9391,
											"end": 9393,
											"name": "PUSH",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 9371,
											"end": 9389,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9371,
											"end": 9389,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9371,
											"end": 9389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9364,
											"end": 9394,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9403,
											"end": 9454,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6677,
											"end": 6765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 9150,
											"end": 9495,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6677,
											"end": 6765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 6677,
											"end": 6765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6857,
											"end": 6872,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6797,
											"end": 6883,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6783,
											"end": 6793,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3B"
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6883,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 6899,
											"end": 6949,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6899,
											"end": 6949,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1307,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1307,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1307,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1282,
											"end": 1316,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1282,
											"end": 1316,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1282,
											"end": 1316,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1282,
											"end": 1316,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6783,
											"end": 6793,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6783,
											"end": 6793,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6899,
											"end": 6949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "DD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC"
										},
										{
											"begin": 6899,
											"end": 6949,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1221,
											"end": 1239,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6899,
											"end": 6949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6899,
											"end": 6949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6899,
											"end": 6949,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6899,
											"end": 6949,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6899,
											"end": 6949,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6899,
											"end": 6949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6899,
											"end": 6949,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 6600,
											"end": 6956,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6541,
											"end": 6956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "tag",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 7542,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 7598,
											"end": 7604,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 7598,
											"end": 7606,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "tag",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 4446,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3573,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "tag",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3565,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 4519,
											"end": 4543,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4543,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4519,
											"end": 4543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4519,
											"end": 4543,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4543,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4543,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4543,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4543,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4543,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4543,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4543,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4543,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "tag",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 4198,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3573,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "tag",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3565,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4277,
											"end": 4307,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4307,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4307,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "tag",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "tag",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 1754,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "tag",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 1754,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "tag",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "358"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "tag",
											"source": 17,
											"value": "358"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "tag",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "tag",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "tag",
											"source": 17,
											"value": "179"
										},
										{
											"begin": 6962,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7056,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7039,
											"end": 7045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3B"
										},
										{
											"begin": 7039,
											"end": 7057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7057,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7067,
											"end": 7112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 7067,
											"end": 7112,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7067,
											"end": 7112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7067,
											"end": 7112,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7067,
											"end": 7112,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7067,
											"end": 7112,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10087,
											"end": 10089,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7067,
											"end": 7112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7067,
											"end": 7112,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7067,
											"end": 7112,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10069,
											"end": 10090,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10126,
											"end": 10128,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 10106,
											"end": 10124,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10106,
											"end": 10124,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10106,
											"end": 10124,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10099,
											"end": 10129,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81D1BDAD95B9CC81CDD185AD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10145,
											"end": 10163,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10145,
											"end": 10163,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10145,
											"end": 10163,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10138,
											"end": 10184,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10201,
											"end": 10219,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 10201,
											"end": 10219,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7067,
											"end": 7112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 9885,
											"end": 10225,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7067,
											"end": 7112,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 7067,
											"end": 7112,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7123,
											"end": 7146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7167,
											"end": 7172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7167,
											"end": 7182,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7182,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7149,
											"end": 7164,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 7149,
											"end": 7182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 7149,
											"end": 7182,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7149,
											"end": 7182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7149,
											"end": 7182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 7149,
											"end": 7182,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7149,
											"end": 7182,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 7149,
											"end": 7182,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7123,
											"end": 7182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7123,
											"end": 7182,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7192,
											"end": 7206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7259,
											"end": 7267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1E13380"
										},
										{
											"begin": 7239,
											"end": 7254,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7225,
											"end": 7236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3C"
										},
										{
											"begin": 7225,
											"end": 7236,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7215,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7222,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 7210,
											"end": 7236,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7236,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 7210,
											"end": 7236,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 7210,
											"end": 7236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 7210,
											"end": 7254,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 7210,
											"end": 7254,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 7210,
											"end": 7254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7209,
											"end": 7268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "370"
										},
										{
											"begin": 7209,
											"end": 7268,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7209,
											"end": 7268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7209,
											"end": 7268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 7209,
											"end": 7268,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7209,
											"end": 7268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "370"
										},
										{
											"begin": 7209,
											"end": 7268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7323,
											"end": 7335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 7323,
											"end": 7335,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7381,
											"end": 7393,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7381,
											"end": 7393,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7192,
											"end": 7268,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7192,
											"end": 7268,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7323,
											"end": 7335,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7323,
											"end": 7335,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7323,
											"end": 7335,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7323,
											"end": 7335,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "A9059CBB"
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7369,
											"end": 7379,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 7369,
											"end": 7379,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7381,
											"end": 7402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 7381,
											"end": 7402,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7192,
											"end": 7268,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7192,
											"end": 7268,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7381,
											"end": 7402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "373"
										},
										{
											"begin": 7381,
											"end": 7402,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7381,
											"end": 7402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 7381,
											"end": 7402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7354,
											"end": 7403,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 7354,
											"end": 7403,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10947,
											"end": 10979,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10947,
											"end": 10979,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10947,
											"end": 10979,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7354,
											"end": 7403,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10929,
											"end": 10980,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10989,
											"end": 11023,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10902,
											"end": 10920,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10902,
											"end": 10920,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7403,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 7354,
											"end": 7403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 7354,
											"end": 7403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7346,
											"end": 7429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 7346,
											"end": 7429,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7346,
											"end": 7429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7429,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7429,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7346,
											"end": 7429,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9352,
											"end": 9354,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7346,
											"end": 7429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7346,
											"end": 7429,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7346,
											"end": 7429,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9334,
											"end": 9355,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9391,
											"end": 9393,
											"name": "PUSH",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 9371,
											"end": 9389,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9371,
											"end": 9389,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9371,
											"end": 9389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9364,
											"end": 9394,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9403,
											"end": 9454,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7346,
											"end": 7429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 9150,
											"end": 9495,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7346,
											"end": 7429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 7346,
											"end": 7429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7454,
											"end": 7464,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 7447,
											"end": 7465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7447,
											"end": 7453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3B"
										},
										{
											"begin": 7447,
											"end": 7465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7440,
											"end": 7465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7440,
											"end": 7465,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7481,
											"end": 7529,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7481,
											"end": 7529,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1307,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1307,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1307,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1282,
											"end": 1316,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1282,
											"end": 1316,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1282,
											"end": 1316,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7481,
											"end": 7529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336"
										},
										{
											"begin": 7481,
											"end": 7529,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1221,
											"end": 1239,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7481,
											"end": 7529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7481,
											"end": 7529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7481,
											"end": 7529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7481,
											"end": 7529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7481,
											"end": 7529,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7481,
											"end": 7529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7481,
											"end": 7529,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 7008,
											"end": 7536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7008,
											"end": 7536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7008,
											"end": 7536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7008,
											"end": 7536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 7536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "tag",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 4682,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3573,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "tag",
											"source": 17,
											"value": "383"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3565,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4763,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4763,
											"end": 4795,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4763,
											"end": 4795,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4763,
											"end": 4795,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "tag",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "388"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3573,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "tag",
											"source": 17,
											"value": "388"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3565,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5290,
											"end": 5298,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5290,
											"end": 5298,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3699,
											"end": 3729,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3699,
											"end": 3729,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "392"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 3691,
											"end": 3760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "392"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5320,
											"end": 5328,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3854,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 3855,
											"end": 3863,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 3842,
											"end": 3864,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3841,
											"end": 3873,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "398"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 3833,
											"end": 3906,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "398"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4010,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4010,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4010,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4000,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3989,
											"end": 4010,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4010,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4010,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4010,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3989,
											"end": 4010,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4010,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4010,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4011,
											"end": 4021,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5351,
											"end": 5359,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5351,
											"end": 5359,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4022,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3989,
											"end": 4022,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3988,
											"end": 4022,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3980,
											"end": 4056,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "401"
										},
										{
											"begin": 3980,
											"end": 4056,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3980,
											"end": 4056,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3980,
											"end": 4056,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3980,
											"end": 4056,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3980,
											"end": 4056,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11236,
											"end": 11238,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4056,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3980,
											"end": 4056,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3980,
											"end": 4056,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11218,
											"end": 11239,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11275,
											"end": 11277,
											"name": "PUSH",
											"source": 18,
											"value": "1D"
										},
										{
											"begin": 11255,
											"end": 11273,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 11255,
											"end": 11273,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11255,
											"end": 11273,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11248,
											"end": 11278,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11314,
											"end": 11345,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73616374696F6E20616C726561647920636F6E6669726D6564000000"
										},
										{
											"begin": 11294,
											"end": 11312,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 11294,
											"end": 11312,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11294,
											"end": 11312,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11287,
											"end": 11346,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11363,
											"end": 11381,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 11363,
											"end": 11381,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3980,
											"end": 4056,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 11034,
											"end": 11387,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3980,
											"end": 4056,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "401"
										},
										{
											"begin": 3980,
											"end": 4056,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5375,
											"end": 5406,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5409,
											"end": 5421,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 5422,
											"end": 5430,
											"modifierDepth": 4,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 5409,
											"end": 5431,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "tag",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5431,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5375,
											"end": 5431,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5375,
											"end": 5431,
											"modifierDepth": 4,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5473,
											"end": 5474,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5441,
											"end": 5452,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5469,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5441,
											"end": 5469,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5469,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5474,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5474,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5474,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5474,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 5441,
											"end": 5474,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5474,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5474,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "373"
										},
										{
											"begin": 5441,
											"end": 5474,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5474,
											"modifierDepth": 4,
											"name": "tag",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 5441,
											"end": 5474,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5474,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5474,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5505,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5495,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 5484,
											"end": 5505,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5506,
											"end": 5516,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5524,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5524,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 4,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5520,
											"end": 5524,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 4,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5524,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5524,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5540,
											"end": 5582,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5496,
											"end": 5504,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5496,
											"end": 5504,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5540,
											"end": 5582,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "F8A17C9136A3AE33364FAC05EB088A3CBAFEE10C1889C88593E20EE2D8E4EB88"
										},
										{
											"begin": 5540,
											"end": 5582,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5540,
											"end": 5582,
											"modifierDepth": 4,
											"name": "LOG3",
											"source": 17
										},
										{
											"begin": 5365,
											"end": 5589,
											"modifierDepth": 4,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3916,
											"end": 3917,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3770,
											"end": 3771,
											"modifierDepth": 2,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3631,
											"end": 3632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "tag",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "410"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3573,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "tag",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3565,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4929,
											"end": 4941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 4929,
											"end": 4948,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4929,
											"end": 4948,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "PUSH",
											"source": 17,
											"value": "DC16FEF70F8D5DDBC01EE3D903D1E69C18A3C7BE080EB86A81E0578814EE58D3"
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "PUSH",
											"source": 17,
											"value": "DC16FEF70F8D5DDBC01EE3D903D1E69C18A3C7BE080EB86A81E0578814EE58D4"
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4929,
											"end": 4948,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4929,
											"end": 4948,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5135,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "PUSH",
											"source": 17,
											"value": "DC16FEF70F8D5DDBC01EE3D903D1E69C18A3C7BE080EB86A81E0578814EE58D5"
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 4959,
											"end": 5136,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 5136,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5152,
											"end": 5181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5152,
											"end": 5181,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5173,
											"end": 5180,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5173,
											"end": 5180,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5152,
											"end": 5181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "D0B5D9EAC097410294EC9F2CEE7CD185CF31AB46BABF3DFDBEAC8B222B03F2D1"
										},
										{
											"begin": 5152,
											"end": 5181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5181,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 4901,
											"end": 5188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 5188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 5779,
											"end": 5783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5785,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 5767,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "tag",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 4320,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "423"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3573,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "tag",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3565,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4401,
											"end": 4415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4401,
											"end": 4433,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4401,
											"end": 4433,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4401,
											"end": 4433,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "tag",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3573,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "tag",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3565,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3699,
											"end": 3729,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3699,
											"end": 3729,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 3691,
											"end": 3760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 3691,
											"end": 3760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5689,
											"end": 5697,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3854,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 3855,
											"end": 3863,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 3842,
											"end": 3864,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3842,
											"end": 3873,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3841,
											"end": 3873,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 3833,
											"end": 3906,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 3833,
											"end": 3906,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5709,
											"end": 5740,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5755,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 5756,
											"end": 5764,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 5743,
											"end": 5765,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5765,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5709,
											"end": 5765,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5709,
											"end": 5765,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5816,
											"end": 5837,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "3A"
										},
										{
											"begin": 5816,
											"end": 5837,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5784,
											"end": 5795,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5784,
											"end": 5812,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5784,
											"end": 5812,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5784,
											"end": 5812,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5784,
											"end": 5837,
											"modifierDepth": 3,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5784,
											"end": 5837,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5776,
											"end": 5859,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 5776,
											"end": 5859,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5776,
											"end": 5859,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5776,
											"end": 5859,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5776,
											"end": 5859,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5776,
											"end": 5859,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13712,
											"end": 13714,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5859,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5776,
											"end": 5859,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5776,
											"end": 5859,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13694,
											"end": 13715,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13751,
											"end": 13753,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 13731,
											"end": 13749,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13731,
											"end": 13749,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13731,
											"end": 13749,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13724,
											"end": 13754,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "86C2DCDCDEE840CAF0CAC6EAE8CA40E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13770,
											"end": 13788,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 13770,
											"end": 13788,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13770,
											"end": 13788,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13763,
											"end": 13810,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13827,
											"end": 13845,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 13827,
											"end": 13845,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5776,
											"end": 5859,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 13510,
											"end": 13851,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5776,
											"end": 5859,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 5776,
											"end": 5859,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 5890,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 5870,
											"end": 5890,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 5890,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 5897,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 5897,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5870,
											"end": 5897,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5893,
											"end": 5897,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5870,
											"end": 5897,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 5897,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 5897,
											"modifierDepth": 3,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 5897,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 5897,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 5897,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5941,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5941,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5954,
											"end": 5971,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5954,
											"end": 5971,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5954,
											"end": 5971,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5954,
											"end": 5971,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 5990,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 5890,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5890,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5927,
											"end": 5941,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5941,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5954,
											"end": 5971,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 5927,
											"end": 5990,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5973,
											"end": 5989,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 5973,
											"end": 5989,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5973,
											"end": 5989,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5973,
											"end": 5989,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 5927,
											"end": 5990,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "3F"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5927,
											"end": 5990,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5908,
											"end": 5990,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5908,
											"end": 5990,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5908,
											"end": 5990,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6008,
											"end": 6015,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6000,
											"end": 6038,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 6000,
											"end": 6038,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6000,
											"end": 6038,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6000,
											"end": 6038,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6000,
											"end": 6038,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6000,
											"end": 6038,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14858,
											"end": 14860,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6000,
											"end": 6038,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6000,
											"end": 6038,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6000,
											"end": 6038,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14840,
											"end": 14861,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14897,
											"end": 14899,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 14877,
											"end": 14895,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 14877,
											"end": 14895,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14877,
											"end": 14895,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14870,
											"end": 14900,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD858DD1A5BDB8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14916,
											"end": 14934,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 14916,
											"end": 14934,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14916,
											"end": 14934,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14909,
											"end": 14957,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14974,
											"end": 14992,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 14974,
											"end": 14992,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6000,
											"end": 6038,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 14656,
											"end": 14998,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6000,
											"end": 6038,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 6000,
											"end": 6038,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6054,
											"end": 6083,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6054,
											"end": 6083,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6074,
											"end": 6082,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6074,
											"end": 6082,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6054,
											"end": 6083,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "15ED165A284872EA7017F03DF402A0CADFBFAB588320FFAF83F160C2F82781C7"
										},
										{
											"begin": 6054,
											"end": 6083,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6054,
											"end": 6083,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6083,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6054,
											"end": 6083,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 5699,
											"end": 6090,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5699,
											"end": 6090,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3770,
											"end": 3771,
											"modifierDepth": 2,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3631,
											"end": 3632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 6090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "tag",
											"source": 17,
											"value": "225"
										},
										{
											"begin": 4556,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3573,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "tag",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3565,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4637,
											"end": 4669,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4669,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4669,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 4214,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7437,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7970,
											"end": 7974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8059,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "481"
										},
										{
											"begin": 1750,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "tag",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "483"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 661,
											"end": 693,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 643,
											"end": 694,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "486"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "487"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "487"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 2,
											"value": "486"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "489"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "tag",
											"source": 2,
											"value": "489"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4599,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7700,
											"end": 7798,
											"name": "tag",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 7700,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "PUSH",
											"source": 17,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "494"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "495"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "496"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "495"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "494"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "497"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 693,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 661,
											"end": 693,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 2,
											"value": "497"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "503"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 1960,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1935,
											"end": 1960,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1935,
											"end": 1960,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1908,
											"end": 1926,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1908,
											"end": 1926,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 1789,
											"end": 1966,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 2,
											"value": "503"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "506"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "489"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 1147,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15394,
											"end": 15396,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15376,
											"end": 15397,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15433,
											"end": 15435,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 15413,
											"end": 15431,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 15413,
											"end": 15431,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15413,
											"end": 15431,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15406,
											"end": 15436,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15452,
											"end": 15470,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 15452,
											"end": 15470,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15452,
											"end": 15470,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15445,
											"end": 15491,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15508,
											"end": 15526,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 15508,
											"end": 15526,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 15192,
											"end": 15532,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "528"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "528"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "483"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4469,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10947,
											"end": 10979,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10947,
											"end": 10979,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10929,
											"end": 10980,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10989,
											"end": 11023,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10989,
											"end": 11023,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10989,
											"end": 11023,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10902,
											"end": 10920,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10902,
											"end": 10920,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 10755,
											"end": 11029,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "tag",
											"source": 3,
											"value": "481"
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16018,
											"end": 16020,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16000,
											"end": 16021,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16057,
											"end": 16059,
											"name": "PUSH",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 16037,
											"end": 16055,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 16037,
											"end": 16055,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16037,
											"end": 16055,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16030,
											"end": 16060,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16076,
											"end": 16094,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 16076,
											"end": 16094,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16076,
											"end": 16094,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16069,
											"end": 16119,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 15816,
											"end": 16160,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 693,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 661,
											"end": 693,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 693,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 661,
											"end": 693,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 705,
											"end": 878,
											"name": "tag",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 705,
											"end": 878,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 773,
											"end": 793,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 773,
											"end": 793,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 822,
											"end": 853,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 822,
											"end": 853,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 812,
											"end": 854,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 812,
											"end": 854,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 802,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 802,
											"end": 872,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 868,
											"end": 869,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 866,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 858,
											"end": 870,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 802,
											"end": 872,
											"name": "tag",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 802,
											"end": 872,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 705,
											"end": 878,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 705,
											"end": 878,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 705,
											"end": 878,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 705,
											"end": 878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 883,
											"end": 1069,
											"name": "tag",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 883,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 942,
											"end": 948,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 997,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 992,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 974,
											"end": 981,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 970,
											"end": 993,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 966,
											"end": 998,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 963,
											"end": 1015,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 963,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 963,
											"end": 1015,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1009,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1001,
											"end": 1013,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 963,
											"end": 1015,
											"name": "tag",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 963,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 1053,
											"end": 1062,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 1034,
											"end": 1063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1327,
											"end": 1553,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 1327,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1392,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1418,
											"end": 1425,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1414,
											"end": 1437,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1410,
											"end": 1442,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1407,
											"end": 1459,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1407,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 1407,
											"end": 1459,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1453,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1445,
											"end": 1457,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1407,
											"end": 1459,
											"name": "tag",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 1407,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1327,
											"end": 1553,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1327,
											"end": 1553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2271,
											"name": "tag",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 1971,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2039,
											"end": 2045,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2100,
											"end": 2102,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2097,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2079,
											"end": 2086,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2071,
											"end": 2103,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2068,
											"end": 2120,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2068,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 2068,
											"end": 2120,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2068,
											"end": 2120,
											"name": "tag",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 2068,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2161,
											"end": 2184,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2161,
											"end": 2184,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2161,
											"end": 2184,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 2261,
											"end": 2263,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2227,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 2227,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2227,
											"end": 2265,
											"name": "tag",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 2227,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2217,
											"end": 2265,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2217,
											"end": 2265,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2271,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2271,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2271,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2276,
											"end": 2403,
											"name": "tag",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 2276,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2337,
											"end": 2347,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 2332,
											"end": 2335,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2325,
											"end": 2326,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2349,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2368,
											"end": 2372,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2358,
											"end": 2373,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2392,
											"end": 2396,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2389,
											"end": 2390,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2397,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2408,
											"end": 3133,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 2408,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2450,
											"end": 2455,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2506,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2496,
											"end": 2500,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2488,
											"end": 2494,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2484,
											"end": 2501,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2480,
											"end": 2507,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2470,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 2470,
											"end": 2525,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2519,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2470,
											"end": 2525,
											"name": "tag",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 2470,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2567,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2548,
											"end": 2568,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2583,
											"end": 2589,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2580,
											"end": 2610,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2613,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 2613,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 2613,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2613,
											"end": 2631,
											"name": "tag",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 2613,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2754,
											"end": 2756,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2716,
											"end": 2733,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2716,
											"end": 2733,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2712,
											"end": 2743,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2712,
											"end": 2743,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2712,
											"end": 2743,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2745,
											"end": 2747,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 2708,
											"end": 2748,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2704,
											"end": 2758,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2692,
											"end": 2759,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2692,
											"end": 2759,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2789,
											"end": 2807,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2808,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2774,
											"end": 2808,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2771,
											"end": 2833,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2768,
											"end": 2856,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2768,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 2768,
											"end": 2856,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 2836,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "tag",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2872,
											"end": 2874,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2887,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2896,
											"end": 2918,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2896,
											"end": 2918,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2896,
											"end": 2918,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2937,
											"end": 2956,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2937,
											"end": 2956,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2937,
											"end": 2956,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2958,
											"end": 2962,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2933,
											"end": 2963,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2986,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2927,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 2927,
											"end": 2986,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2927,
											"end": 2986,
											"name": "tag",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 2927,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3039,
											"end": 3043,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3027,
											"end": 3044,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 3024,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3012,
											"end": 3018,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2995,
											"end": 3053,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 3101,
											"end": 3102,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3098,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3069,
											"end": 3099,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3062,
											"end": 3103,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3062,
											"end": 3103,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3062,
											"end": 3103,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3062,
											"end": 3103,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3077,
											"end": 3083,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2408,
											"end": 3133,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 3133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3138,
											"end": 3532,
											"name": "tag",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 3138,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3229,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3273,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3255,
											"end": 3262,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3251,
											"end": 3274,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3247,
											"end": 3279,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3244,
											"end": 3296,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3244,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 3244,
											"end": 3296,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3293,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3290,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3244,
											"end": 3296,
											"name": "tag",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 3244,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3315,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3315,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 3315,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3315,
											"end": 3344,
											"name": "tag",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 3315,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3305,
											"end": 3344,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3305,
											"end": 3344,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3395,
											"end": 3397,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3384,
											"end": 3393,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3367,
											"end": 3399,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3422,
											"end": 3440,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3414,
											"end": 3420,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3411,
											"end": 3441,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3408,
											"end": 3458,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3408,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 3408,
											"end": 3458,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3454,
											"end": 3455,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3452,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3444,
											"end": 3456,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3408,
											"end": 3458,
											"name": "tag",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 3408,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3477,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 3518,
											"end": 3525,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3509,
											"end": 3515,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3498,
											"end": 3507,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3494,
											"end": 3516,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3477,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 3477,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3477,
											"end": 3526,
											"name": "tag",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 3477,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3467,
											"end": 3526,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3467,
											"end": 3526,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3467,
											"end": 3526,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3138,
											"end": 3532,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3138,
											"end": 3532,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3138,
											"end": 3532,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3138,
											"end": 3532,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3138,
											"end": 3532,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3138,
											"end": 3532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "tag",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3682,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3700,
											"end": 3706,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3714,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3716,
											"end": 3722,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3730,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3732,
											"end": 3738,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3788,
											"name": "PUSH",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3771,
											"name": "DUP13",
											"source": 18
										},
										{
											"begin": 3760,
											"end": 3783,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3753,
											"end": 3806,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3753,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 3753,
											"end": 3806,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3800,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3753,
											"end": 3806,
											"name": "tag",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 3753,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3825,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 3844,
											"end": 3853,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 3825,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 3825,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3825,
											"end": 3854,
											"name": "tag",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 3825,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3815,
											"end": 3854,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3923,
											"end": 3925,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3895,
											"end": 3927,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3895,
											"end": 3927,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4024,
											"end": 4026,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4009,
											"end": 4027,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 4009,
											"end": 4027,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3996,
											"end": 4028,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3996,
											"end": 4028,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4073,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 4107,
											"end": 4109,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4092,
											"end": 4110,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 4092,
											"end": 4110,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4073,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 4073,
											"end": 4111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4073,
											"end": 4111,
											"name": "tag",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 4073,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4063,
											"end": 4111,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 4063,
											"end": 4111,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4130,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 4164,
											"end": 4167,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 4153,
											"end": 4162,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4130,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 4130,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4130,
											"end": 4169,
											"name": "tag",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 4130,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4120,
											"end": 4169,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4120,
											"end": 4169,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4188,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 4222,
											"end": 4225,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 4211,
											"end": 4220,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 4207,
											"end": 4226,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4188,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 4188,
											"end": 4227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4188,
											"end": 4227,
											"name": "tag",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 4188,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4178,
											"end": 4227,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4178,
											"end": 4227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 4280,
											"end": 4283,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 4269,
											"end": 4278,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 4246,
											"end": 4285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "tag",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 4246,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4236,
											"end": 4285,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4236,
											"end": 4285,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 4338,
											"end": 4341,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 4327,
											"end": 4336,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4342,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 4304,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "tag",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4294,
											"end": 4343,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4294,
											"end": 4343,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4362,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 4396,
											"end": 4399,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 4381,
											"end": 4400,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4362,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 4362,
											"end": 4401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4362,
											"end": 4401,
											"name": "tag",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 4362,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4352,
											"end": 4401,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4352,
											"end": 4401,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": 3537,
											"end": 4407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4899,
											"end": 5187,
											"name": "tag",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 4899,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 4943,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 4983,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4972,
											"end": 4984,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 5005,
											"end": 5011,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5003,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4993,
											"end": 5012,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5054,
											"end": 5058,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5052,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5036,
											"end": 5040,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5031,
											"end": 5034,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5021,
											"end": 5068,
											"name": "MCOPY",
											"source": 18
										},
										{
											"begin": 5113,
											"end": 5114,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5103,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5092,
											"end": 5095,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5088,
											"end": 5104,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5084,
											"end": 5111,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5077,
											"end": 5115,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5176,
											"end": 5180,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5169,
											"end": 5171,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 5165,
											"end": 5172,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 5160,
											"end": 5162,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 5152,
											"end": 5158,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5144,
											"end": 5173,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5139,
											"end": 5142,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5135,
											"end": 5174,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5131,
											"end": 5181,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5124,
											"end": 5181,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5124,
											"end": 5181,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5124,
											"end": 5181,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4899,
											"end": 5187,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4899,
											"end": 5187,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4899,
											"end": 5187,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4899,
											"end": 5187,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4899,
											"end": 5187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5192,
											"end": 5732,
											"name": "tag",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 5192,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5474,
											"end": 5475,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5470,
											"end": 5471,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 5461,
											"end": 5472,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 5457,
											"end": 5476,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5449,
											"end": 5455,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5445,
											"end": 5477,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5427,
											"end": 5478,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5514,
											"end": 5520,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5498,
											"end": 5507,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5494,
											"end": 5512,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5487,
											"end": 5521,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5557,
											"end": 5560,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5541,
											"end": 5550,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5530,
											"end": 5561,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5408,
											"end": 5412,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 5618,
											"end": 5621,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 5607,
											"end": 5616,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5603,
											"end": 5622,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5578,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 5578,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5578,
											"end": 5623,
											"name": "tag",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 5578,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5666,
											"end": 5680,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5666,
											"end": 5680,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5659,
											"end": 5681,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5654,
											"end": 5656,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5639,
											"end": 5657,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5639,
											"end": 5657,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5632,
											"end": 5682,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5713,
											"end": 5716,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 5698,
											"end": 5717,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5691,
											"end": 5726,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5570,
											"end": 5623,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5192,
											"end": 5732,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5737,
											"end": 5956,
											"name": "tag",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 5737,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5886,
											"end": 5888,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5875,
											"end": 5884,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5868,
											"end": 5889,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5849,
											"end": 5853,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 5946,
											"end": 5948,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5935,
											"end": 5944,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5931,
											"end": 5949,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5923,
											"end": 5929,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5906,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 5906,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5961,
											"end": 6469,
											"name": "tag",
											"source": 18,
											"value": "200"
										},
										{
											"begin": 5961,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6069,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 6104,
											"end": 6113,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6095,
											"end": 6102,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6091,
											"end": 6114,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6087,
											"end": 6119,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6084,
											"end": 6136,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6084,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 6084,
											"end": 6136,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6132,
											"end": 6133,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6129,
											"end": 6130,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6084,
											"end": 6136,
											"name": "tag",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 6084,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 6174,
											"end": 6183,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 6155,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "tag",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6145,
											"end": 6184,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6225,
											"end": 6257,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6225,
											"end": 6257,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6335,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6317,
											"end": 6335,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6304,
											"end": 6336,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6348,
											"end": 6378,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6348,
											"end": 6378,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 6345,
											"end": 6395,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6345,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 6345,
											"end": 6395,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6391,
											"end": 6392,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6388,
											"end": 6389,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6381,
											"end": 6393,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6345,
											"end": 6395,
											"name": "tag",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 6345,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6414,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 6455,
											"end": 6462,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6446,
											"end": 6452,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6435,
											"end": 6444,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6431,
											"end": 6453,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6414,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 6414,
											"end": 6463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6414,
											"end": 6463,
											"name": "tag",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 6414,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6404,
											"end": 6463,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6404,
											"end": 6463,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6404,
											"end": 6463,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5961,
											"end": 6469,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5961,
											"end": 6469,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5961,
											"end": 6469,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5961,
											"end": 6469,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5961,
											"end": 6469,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5961,
											"end": 6469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6474,
											"end": 6810,
											"name": "tag",
											"source": 18,
											"value": "238"
										},
										{
											"begin": 6474,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6676,
											"end": 6678,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6658,
											"end": 6679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6658,
											"end": 6679,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6658,
											"end": 6679,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6715,
											"end": 6717,
											"name": "PUSH",
											"source": 18,
											"value": "C"
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6688,
											"end": 6718,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030B71030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6749,
											"end": 6751,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6727,
											"end": 6769,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6801,
											"end": 6803,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6474,
											"end": 6810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6815,
											"end": 7165,
											"name": "tag",
											"source": 18,
											"value": "242"
										},
										{
											"begin": 6815,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7017,
											"end": 7019,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6999,
											"end": 7020,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6999,
											"end": 7020,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6999,
											"end": 7020,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7056,
											"end": 7058,
											"name": "PUSH",
											"source": 18,
											"value": "1A"
										},
										{
											"begin": 7036,
											"end": 7054,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7036,
											"end": 7054,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7036,
											"end": 7054,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7029,
											"end": 7059,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7095,
											"end": 7123,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73616374696F6E20646F6573206E6F74206578697374000000000000"
										},
										{
											"begin": 7090,
											"end": 7092,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7075,
											"end": 7093,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7075,
											"end": 7093,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7156,
											"end": 7158,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 7141,
											"end": 7159,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7141,
											"end": 7159,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6815,
											"end": 7165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7170,
											"end": 7297,
											"name": "tag",
											"source": 18,
											"value": "246"
										},
										{
											"begin": 7170,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7231,
											"end": 7241,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 7226,
											"end": 7229,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 7222,
											"end": 7242,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 7219,
											"end": 7220,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7212,
											"end": 7243,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7262,
											"end": 7266,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 7259,
											"end": 7260,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7252,
											"end": 7267,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7286,
											"end": 7290,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7283,
											"end": 7284,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7291,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7302,
											"end": 7654,
											"name": "tag",
											"source": 18,
											"value": "250"
										},
										{
											"begin": 7302,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7506,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7486,
											"end": 7507,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7486,
											"end": 7507,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7486,
											"end": 7507,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7543,
											"end": 7545,
											"name": "PUSH",
											"source": 18,
											"value": "1C"
										},
										{
											"begin": 7523,
											"end": 7541,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7523,
											"end": 7541,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7523,
											"end": 7541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7516,
											"end": 7546,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7582,
											"end": 7612,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73616374696F6E20616C726561647920657865637574656400000000"
										},
										{
											"begin": 7577,
											"end": 7579,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7555,
											"end": 7613,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7645,
											"end": 7647,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7302,
											"end": 7654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8013,
											"end": 8140,
											"name": "tag",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 8013,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8074,
											"end": 8084,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 8069,
											"end": 8072,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 8065,
											"end": 8085,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 8062,
											"end": 8063,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8055,
											"end": 8086,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 8102,
											"end": 8103,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8095,
											"end": 8110,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8129,
											"end": 8133,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8134,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8145,
											"end": 8273,
											"name": "tag",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 8145,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8233,
											"end": 8244,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8233,
											"end": 8244,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8233,
											"end": 8244,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8230,
											"end": 8267,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8230,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "232"
										},
										{
											"begin": 8230,
											"end": 8267,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "232"
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 8247,
											"end": 8265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8868,
											"end": 9145,
											"name": "tag",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 8868,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8935,
											"end": 8941,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8988,
											"end": 8990,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8976,
											"end": 8985,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8963,
											"end": 8986,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8959,
											"end": 8991,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8956,
											"end": 9008,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8956,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 8956,
											"end": 9008,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9004,
											"end": 9005,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9001,
											"end": 9002,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8994,
											"end": 9006,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8956,
											"end": 9008,
											"name": "tag",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 8956,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9036,
											"end": 9045,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9030,
											"end": 9046,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 9089,
											"end": 9094,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9082,
											"end": 9095,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9075,
											"end": 9096,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9068,
											"end": 9073,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9065,
											"end": 9097,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 9055,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 9055,
											"end": 9115,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9111,
											"end": 9112,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9108,
											"end": 9109,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9101,
											"end": 9113,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9500,
											"end": 9880,
											"name": "tag",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 9500,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9579,
											"end": 9580,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 9575,
											"end": 9587,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9575,
											"end": 9587,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9575,
											"end": 9587,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 9575,
											"end": 9587,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9622,
											"end": 9634,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9622,
											"end": 9634,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 9622,
											"end": 9634,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9643,
											"end": 9704,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 9643,
											"end": 9704,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9697,
											"end": 9701,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 9689,
											"end": 9695,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9685,
											"end": 9702,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 9675,
											"end": 9702,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9675,
											"end": 9702,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9643,
											"end": 9704,
											"name": "tag",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 9643,
											"end": 9704,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9750,
											"end": 9752,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9742,
											"end": 9748,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9739,
											"end": 9753,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 9719,
											"end": 9737,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9716,
											"end": 9754,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 9713,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 9713,
											"end": 9874,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9796,
											"end": 9806,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 9791,
											"end": 9794,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 9787,
											"end": 9807,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 9784,
											"end": 9785,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9808,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9831,
											"end": 9835,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 9828,
											"end": 9829,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9821,
											"end": 9836,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9859,
											"end": 9863,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9856,
											"end": 9857,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9849,
											"end": 9864,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9713,
											"end": 9874,
											"name": "tag",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 9713,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9713,
											"end": 9874,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9500,
											"end": 9880,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9500,
											"end": 9880,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9500,
											"end": 9880,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9500,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10230,
											"end": 10398,
											"name": "tag",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 10230,
											"end": 10398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 10334,
											"end": 10343,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10334,
											"end": 10343,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10351,
											"end": 10366,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10351,
											"end": 10366,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10351,
											"end": 10366,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 10345,
											"end": 10367,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10345,
											"end": 10367,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 10331,
											"end": 10368,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 10321,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "232"
										},
										{
											"begin": 10321,
											"end": 10392,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "232"
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 10372,
											"end": 10390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10403,
											"end": 10620,
											"name": "tag",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 10403,
											"end": 10620,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10443,
											"end": 10444,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10469,
											"end": 10470,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "676"
										},
										{
											"begin": 10459,
											"end": 10591,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10523,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 10508,
											"end": 10511,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 10504,
											"end": 10524,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 10501,
											"end": 10502,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10494,
											"end": 10525,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10548,
											"end": 10552,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 10545,
											"end": 10546,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 10538,
											"end": 10553,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10576,
											"end": 10580,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10573,
											"end": 10574,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10566,
											"end": 10581,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10591,
											"name": "tag",
											"source": 18,
											"value": "676"
										},
										{
											"begin": 10459,
											"end": 10591,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10605,
											"end": 10614,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 10605,
											"end": 10614,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10403,
											"end": 10620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10625,
											"end": 10750,
											"name": "tag",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 10625,
											"end": 10750,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10690,
											"end": 10699,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10690,
											"end": 10699,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10690,
											"end": 10699,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10711,
											"end": 10721,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10711,
											"end": 10721,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10711,
											"end": 10721,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10708,
											"end": 10744,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10708,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "232"
										},
										{
											"begin": 10708,
											"end": 10744,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10724,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "232"
										},
										{
											"begin": 10724,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 10724,
											"end": 10742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11517,
											"end": 12034,
											"name": "tag",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 11517,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11618,
											"end": 11620,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 11613,
											"end": 11616,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11610,
											"end": 11621,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11607,
											"end": 12028,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11607,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "274"
										},
										{
											"begin": 11607,
											"end": 12028,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11654,
											"end": 11659,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 11651,
											"end": 11652,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11698,
											"end": 11702,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11695,
											"end": 11696,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11685,
											"end": 11703,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 11768,
											"end": 11770,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 11756,
											"end": 11766,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11752,
											"end": 11771,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 11745,
											"end": 11772,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 11739,
											"end": 11743,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11735,
											"end": 11773,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11804,
											"end": 11808,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11792,
											"end": 11802,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11789,
											"end": 11809,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 11786,
											"end": 11833,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11786,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 11786,
											"end": 11833,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11827,
											"end": 11831,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 11786,
											"end": 11833,
											"name": "tag",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 11786,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11882,
											"end": 11884,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 11877,
											"end": 11880,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11873,
											"end": 11885,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11870,
											"end": 11871,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 11866,
											"end": 11886,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 11860,
											"end": 11864,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11856,
											"end": 11887,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11846,
											"end": 11887,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11846,
											"end": 11887,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11937,
											"end": 12018,
											"name": "tag",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 11937,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11955,
											"end": 11957,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11948,
											"end": 11953,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11945,
											"end": 11958,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 11937,
											"end": 12018,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11937,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 11937,
											"end": 12018,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12014,
											"end": 12015,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12000,
											"end": 12016,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12000,
											"end": 12016,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 11981,
											"end": 11982,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 11970,
											"end": 11983,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11937,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 11937,
											"end": 12018,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11937,
											"end": 12018,
											"name": "tag",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 11937,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11941,
											"end": 11944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11941,
											"end": 11944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11517,
											"end": 12034,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11517,
											"end": 12034,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11517,
											"end": 12034,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11517,
											"end": 12034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12210,
											"end": 13505,
											"name": "tag",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 12210,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12334,
											"end": 12337,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12328,
											"end": 12338,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 12361,
											"end": 12379,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12353,
											"end": 12359,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12350,
											"end": 12380,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12347,
											"end": 12403,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12347,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "692"
										},
										{
											"begin": 12347,
											"end": 12403,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12383,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "692"
										},
										{
											"begin": 12383,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 12383,
											"end": 12401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12383,
											"end": 12401,
											"name": "tag",
											"source": 18,
											"value": "692"
										},
										{
											"begin": 12383,
											"end": 12401,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12412,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 12501,
											"end": 12507,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12461,
											"end": 12499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "694"
										},
										{
											"begin": 12493,
											"end": 12497,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12487,
											"end": 12498,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 12461,
											"end": 12499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 12461,
											"end": 12499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12461,
											"end": 12499,
											"name": "tag",
											"source": 18,
											"value": "694"
										},
										{
											"begin": 12461,
											"end": 12499,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12455,
											"end": 12459,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12412,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 12412,
											"end": 12508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12412,
											"end": 12508,
											"name": "tag",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 12412,
											"end": 12508,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12557,
											"end": 12561,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12588,
											"end": 12590,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 12577,
											"end": 12591,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12577,
											"end": 12591,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12605,
											"end": 12606,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 12600,
											"end": 13248,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12600,
											"end": 13248,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 12600,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 12600,
											"end": 13248,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13292,
											"end": 13293,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13309,
											"end": 13315,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13306,
											"end": 13395,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13306,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "697"
										},
										{
											"begin": 13306,
											"end": 13395,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13361,
											"end": 13380,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13361,
											"end": 13380,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13361,
											"end": 13380,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13355,
											"end": 13381,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 13306,
											"end": 13395,
											"name": "tag",
											"source": 18,
											"value": "697"
										},
										{
											"begin": 13306,
											"end": 13395,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12167,
											"end": 12168,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 12163,
											"end": 12174,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12163,
											"end": 12174,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12163,
											"end": 12174,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12183,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 12155,
											"end": 12184,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 12145,
											"end": 12185,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 12191,
											"end": 12192,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 12187,
											"end": 12198,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12187,
											"end": 12198,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12187,
											"end": 12198,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 12142,
											"end": 12199,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 13408,
											"end": 13489,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13408,
											"end": 13489,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 12570,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 12570,
											"end": 13499,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12600,
											"end": 13248,
											"name": "tag",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 12600,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11464,
											"end": 11465,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11457,
											"end": 11471,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11457,
											"end": 11471,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11457,
											"end": 11471,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11501,
											"end": 11505,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11488,
											"end": 11506,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11488,
											"end": 11506,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12636,
											"end": 12656,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12636,
											"end": 12656,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 12636,
											"end": 12656,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12753,
											"end": 12975,
											"name": "tag",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 12753,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12767,
											"end": 12774,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12764,
											"end": 12765,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12761,
											"end": 12775,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 12753,
											"end": 12975,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12753,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "702"
										},
										{
											"begin": 12753,
											"end": 12975,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12849,
											"end": 12868,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 12849,
											"end": 12868,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12849,
											"end": 12868,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12843,
											"end": 12869,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 12828,
											"end": 12870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12828,
											"end": 12870,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 12956,
											"end": 12960,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12941,
											"end": 12961,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 12941,
											"end": 12961,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12941,
											"end": 12961,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12941,
											"end": 12961,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 12909,
											"end": 12910,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 12897,
											"end": 12911,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12897,
											"end": 12911,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12897,
											"end": 12911,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12897,
											"end": 12911,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12783,
											"end": 12795,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12753,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 12753,
											"end": 12975,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12753,
											"end": 12975,
											"name": "tag",
											"source": 18,
											"value": "702"
										},
										{
											"begin": 12753,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12757,
											"end": 12760,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13003,
											"end": 13009,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12994,
											"end": 13001,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12991,
											"end": 13010,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 12988,
											"end": 13189,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12988,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 12988,
											"end": 13189,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13064,
											"end": 13083,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13064,
											"end": 13083,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13064,
											"end": 13083,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13058,
											"end": 13084,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13147,
											"end": 13148,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 13143,
											"end": 13157,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13143,
											"end": 13157,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13143,
											"end": 13157,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 13159,
											"end": 13162,
											"name": "PUSH",
											"source": 18,
											"value": "F8"
										},
										{
											"begin": 13139,
											"end": 13163,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 13135,
											"end": 13172,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 13131,
											"end": 13173,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 13116,
											"end": 13174,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 13101,
											"end": 13175,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13101,
											"end": 13175,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 12988,
											"end": 13189,
											"name": "tag",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 12988,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13235,
											"end": 13236,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 13219,
											"end": 13233,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13219,
											"end": 13233,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13219,
											"end": 13233,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 13215,
											"end": 13237,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13202,
											"end": 13238,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13202,
											"end": 13238,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12210,
											"end": 13505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13856,
											"end": 14651,
											"name": "tag",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 13856,
											"end": 14651,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13982,
											"end": 13985,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14012,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 14044,
											"end": 14050,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14038,
											"end": 14051,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 14074,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 14100,
											"end": 14109,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14074,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 14074,
											"end": 14110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14074,
											"end": 14110,
											"name": "tag",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 14074,
											"end": 14110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14141,
											"end": 14142,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 14126,
											"end": 14143,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14126,
											"end": 14143,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 14152,
											"end": 14285,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 14152,
											"end": 14285,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14152,
											"end": 14285,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "708"
										},
										{
											"begin": 14152,
											"end": 14285,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14299,
											"end": 14300,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 14294,
											"end": 14626,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14294,
											"end": 14626,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 14294,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 14294,
											"end": 14626,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14119,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 14119,
											"end": 14626,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14152,
											"end": 14285,
											"name": "tag",
											"source": 18,
											"value": "708"
										},
										{
											"begin": 14152,
											"end": 14285,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14185,
											"end": 14209,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14185,
											"end": 14209,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 14173,
											"end": 14210,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14173,
											"end": 14210,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14258,
											"end": 14272,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14258,
											"end": 14272,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14251,
											"end": 14273,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14239,
											"end": 14274,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14239,
											"end": 14274,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 14230,
											"end": 14275,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14230,
											"end": 14275,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14230,
											"end": 14275,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14152,
											"end": 14285,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 14152,
											"end": 14285,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14294,
											"end": 14626,
											"name": "tag",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 14294,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14325,
											"end": 14331,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14322,
											"end": 14323,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14315,
											"end": 14332,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14373,
											"end": 14377,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14370,
											"end": 14371,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 14400,
											"end": 14401,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14414,
											"end": 14580,
											"name": "tag",
											"source": 18,
											"value": "710"
										},
										{
											"begin": 14414,
											"end": 14580,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14428,
											"end": 14434,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14425,
											"end": 14426,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14422,
											"end": 14435,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 14414,
											"end": 14580,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14414,
											"end": 14580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "712"
										},
										{
											"begin": 14414,
											"end": 14580,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14508,
											"end": 14522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14508,
											"end": 14522,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 14495,
											"end": 14506,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 14495,
											"end": 14506,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14495,
											"end": 14506,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14488,
											"end": 14523,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14564,
											"end": 14565,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 14551,
											"end": 14566,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14551,
											"end": 14566,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14551,
											"end": 14566,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14551,
											"end": 14566,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14450,
											"end": 14454,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14443,
											"end": 14455,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14414,
											"end": 14580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "710"
										},
										{
											"begin": 14414,
											"end": 14580,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14414,
											"end": 14580,
											"name": "tag",
											"source": 18,
											"value": "712"
										},
										{
											"begin": 14414,
											"end": 14580,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14418,
											"end": 14421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14418,
											"end": 14421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14609,
											"end": 14615,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14604,
											"end": 14607,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14600,
											"end": 14616,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14593,
											"end": 14616,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 14593,
											"end": 14616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14119,
											"end": 14626,
											"name": "tag",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 14119,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14642,
											"end": 14645,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14642,
											"end": 14645,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 13856,
											"end": 14651,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13856,
											"end": 14651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15003,
											"end": 15187,
											"name": "tag",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 15003,
											"end": 15187,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15073,
											"end": 15079,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15126,
											"end": 15128,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15114,
											"end": 15123,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15105,
											"end": 15112,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15101,
											"end": 15124,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 15097,
											"end": 15129,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 15094,
											"end": 15146,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 15094,
											"end": 15146,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "715"
										},
										{
											"begin": 15094,
											"end": 15146,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15142,
											"end": 15143,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15139,
											"end": 15140,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 15132,
											"end": 15144,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 15094,
											"end": 15146,
											"name": "tag",
											"source": 18,
											"value": "715"
										},
										{
											"begin": 15094,
											"end": 15146,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15165,
											"end": 15181,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 15165,
											"end": 15181,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15003,
											"end": 15187,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15003,
											"end": 15187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16165,
											"end": 16466,
											"name": "tag",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 16165,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16294,
											"end": 16297,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16332,
											"end": 16338,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16326,
											"end": 16339,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 16378,
											"end": 16384,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 16371,
											"end": 16375,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16363,
											"end": 16369,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16359,
											"end": 16376,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16354,
											"end": 16357,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16348,
											"end": 16385,
											"name": "MCOPY",
											"source": 18
										},
										{
											"begin": 16440,
											"end": 16441,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16404,
											"end": 16420,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 16404,
											"end": 16420,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16429,
											"end": 16442,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16429,
											"end": 16442,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16429,
											"end": 16442,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16404,
											"end": 16420,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16165,
											"end": 16466,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16165,
											"end": 16466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C": "65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
										"B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F": "02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800",
										"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"PAUSER_ROLE()": "e63ab1e9",
							"UPGRADER_ROLE()": "f72c0d8b",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"confirmTransaction(uint256)": "c01a8c84",
							"daoAddress()": "2131c68c",
							"erc1155Address()": "05142002",
							"erc20Address()": "276184ae",
							"erc721Address()": "2352a864",
							"executeTransaction(uint256)": "ee22610b",
							"farmingAddress()": "8a2ade58",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,uint256,uint256,address,address,address,address,address,address)": "63447471",
							"isConfirmed(uint256,address)": "80f59a65",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceRole(bytes32,address)": "36568abe",
							"requiredConfirmations()": "82e717f7",
							"revokeConfirmation(uint256)": "20ea8d86",
							"revokeRole(bytes32,address)": "d547741f",
							"setDAOAddress(address)": "965afa89",
							"setERC1155Address(address)": "d836fc6f",
							"setERC20Address(address)": "41bec0d2",
							"setERC721Address(address)": "9a03d9a3",
							"setFarmingAddress(address)": "b001f618",
							"setStakingAddress(address)": "f4e0d9ac",
							"stakeTokens(uint256)": "7547c7a3",
							"stakes(address)": "16934fc4",
							"stakingAddress()": "d7b4be24",
							"stakingRate()": "c63a6ad2",
							"submitTransaction(address,uint256,bytes)": "c6427474",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transactions(uint256)": "9ace38c2",
							"unpause()": "3f4ba83a",
							"unstakeTokens()": "a5ce413b",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"TransactionConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"TransactionRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"TransactionSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc1155Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requiredConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc721Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc1155Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_daoAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_farmingAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"revokeConfirmation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_daoAddress\",\"type\":\"address\"}],\"name\":\"setDAOAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc1155Address\",\"type\":\"address\"}],\"name\":\"setERC1155Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20Address\",\"type\":\"address\"}],\"name\":\"setERC20Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc721Address\",\"type\":\"address\"}],\"name\":\"setERC721Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_farmingAddress\",\"type\":\"address\"}],\"name\":\"setFarmingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"}],\"name\":\"setStakingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"submitTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:security-contact\":\"jacquedegraff@creodamo.com\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":\"CryptoQuestTheShardsOfGenesisWallet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":{\"keccak256\":\"0x89741a93afd2e89728cfe6c41880a05978c3dff04a24ca79aaa57bd066970efb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e29f5980051ab33847232d4c29d270a557646cb759580a22802495f1006bdb8\",\"dweb:/ipfs/QmRuv5mBqpSYG2qTe8iSVJtnsR3uF6gzxuFWeSqibiDe9i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 925,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2159,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "erc20Address",
								"offset": 0,
								"slot": "50",
								"type": "t_address"
							},
							{
								"astId": 2161,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "erc721Address",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 2163,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "erc1155Address",
								"offset": 0,
								"slot": "52",
								"type": "t_address"
							},
							{
								"astId": 2165,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "daoAddress",
								"offset": 0,
								"slot": "53",
								"type": "t_address"
							},
							{
								"astId": 2167,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "stakingAddress",
								"offset": 0,
								"slot": "54",
								"type": "t_address"
							},
							{
								"astId": 2169,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "farmingAddress",
								"offset": 0,
								"slot": "55",
								"type": "t_address"
							},
							{
								"astId": 2186,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "isConfirmed",
								"offset": 0,
								"slot": "56",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2190,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "transactions",
								"offset": 0,
								"slot": "57",
								"type": "t_array(t_struct(Transaction)2180_storage)dyn_storage"
							},
							{
								"astId": 2192,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "requiredConfirmations",
								"offset": 0,
								"slot": "58",
								"type": "t_uint256"
							},
							{
								"astId": 2202,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "stakes",
								"offset": 0,
								"slot": "59",
								"type": "t_mapping(t_address,t_struct(Stake)2197_storage)"
							},
							{
								"astId": 2204,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "stakingRate",
								"offset": 0,
								"slot": "60",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Transaction)2180_storage)dyn_storage": {
								"base": "t_struct(Transaction)2180_storage",
								"encoding": "dynamic_array",
								"label": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(Stake)2197_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)2197_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_struct(Stake)2197_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisWallet.Stake",
								"members": [
									{
										"astId": 2194,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2196,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "startTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Transaction)2180_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction",
								"members": [
									{
										"astId": 2171,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "to",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2173,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "value",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2175,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "data",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes_storage"
									},
									{
										"astId": 2177,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "executed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 2179,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "numConfirmations",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDAO": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":\"IDAO\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":{\"keccak256\":\"0x89741a93afd2e89728cfe6c41880a05978c3dff04a24ca79aaa57bd066970efb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e29f5980051ab33847232d4c29d270a557646cb759580a22802495f1006bdb8\",\"dweb:/ipfs/QmRuv5mBqpSYG2qTe8iSVJtnsR3uF6gzxuFWeSqibiDe9i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IFarming": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":\"IFarming\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":{\"keccak256\":\"0x89741a93afd2e89728cfe6c41880a05978c3dff04a24ca79aaa57bd066970efb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e29f5980051ab33847232d4c29d270a557646cb759580a22802495f1006bdb8\",\"dweb:/ipfs/QmRuv5mBqpSYG2qTe8iSVJtnsR3uF6gzxuFWeSqibiDe9i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStaking": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":\"IStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol\":{\"keccak256\":\"0x89741a93afd2e89728cfe6c41880a05978c3dff04a24ca79aaa57bd066970efb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e29f5980051ab33847232d4c29d270a557646cb759580a22802495f1006bdb8\",\"dweb:/ipfs/QmRuv5mBqpSYG2qTe8iSVJtnsR3uF6gzxuFWeSqibiDe9i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1288
						],
						"ERC165Upgradeable": [
							1328
						],
						"IAccessControl": [
							1423
						],
						"Initializable": [
							616
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1424,
							"src": "134:81:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1423,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1289,
							"src": "216:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1288,
										"src": "224:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1329,
							"src": "284:79:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1328,
										"src": "292:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 617,
							"src": "364:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "372:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Initializable",
										"nameLocations": [
											"2136:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "2136:13:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2136:13:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2151:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1288,
										"src": "2151:18:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2151:18:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IAccessControl",
										"nameLocations": [
											"2171:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1423,
										"src": "2171:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2171:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2187:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1328,
										"src": "2187:17:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "2187:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "429:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362,
								1328,
								2121,
								1423,
								1288,
								616
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2108:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2270:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2237:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 21,
												"keyName": "account",
												"keyNameLocation": "2253:7:0",
												"keyType": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2237:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2295:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2287:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 23,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2218:8:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2211:100:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 28,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2341:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2317:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 26,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AccessControlUpgradeable.AccessControlStorage",
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2374:71:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.AccessControl"
									},
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "_roles",
											"nameLocation": "2522:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "2488:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
												"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
											},
											"typeName": {
												"id": 33,
												"keyName": "role",
												"keyNameLocation": "2504:4:0",
												"keyType": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2488:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
													"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "RoleData",
														"nameLocations": [
															"2512:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2512:8:0"
													},
													"referencedDeclaration": 25,
													"src": "2512:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoleData_$25_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.RoleData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessControlStorage",
									"nameLocation": "2457:20:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2450:85:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "AccessControlStorageLocation",
									"nameLocation": "2683:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2658:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1",
											"typeString": "int_const 1295...(68 digits omitted)...1824"
										},
										"value": "0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "2877:87:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2896:62:0",
													"nodeType": "YulBlock",
													"src": "2896:62:0",
													"statements": [
														{
															"nativeSrc": "2910:38:0",
															"nodeType": "YulAssignment",
															"src": "2910:38:0",
															"value": {
																"name": "AccessControlStorageLocation",
																"nativeSrc": "2920:28:0",
																"nodeType": "YulIdentifier",
																"src": "2920:28:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2910:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": true,
														"src": "2910:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:28:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "2887:71:0"
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccessControlStorage",
									"nameLocation": "2796:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2874:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2845:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
													"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "AccessControlStorage",
														"nameLocations": [
															"2845:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "2845:20:0"
													},
													"referencedDeclaration": 35,
													"src": "2845:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:32:0"
									},
									"scope": 362,
									"src": "2787:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "3181:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "3202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 51,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 129,
														"src": "3191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3191:16:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "3217:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2970:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 57,
									"name": "onlyRole",
									"nameLocation": "3158:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:14:0"
									},
									"src": "3149:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3289:7:0",
										"statements": []
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyInitializing",
												"nameLocations": [
													"3272:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3272:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3272:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "3240:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:0"
									},
									"scope": 362,
									"src": "3231:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3370:7:0",
										"statements": []
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"3353:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3353:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "3311:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 362,
									"src": "3302:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3534:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 78,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3551:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "3571:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1423_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1423_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 79,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3566:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1423",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3587:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3566:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3551:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 86,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3626:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 84,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$362_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3608:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1327,
															"src": "3602:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3551:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 77,
												"id": 89,
												"nodeType": "Return",
												"src": "3544:94:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3382:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3452:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3510:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 71,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:20:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3528:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:6:0"
									},
									"scope": 362,
									"src": "3443:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1390
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3815:124:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3854:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "3825:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 101,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"3825:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "3825:20:0"
															},
															"referencedDeclaration": 35,
															"src": "3825:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3858:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:59:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 107,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "3901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3903:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3901:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 110,
															"indexExpression": {
																"id": 109,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "3910:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3916:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3901:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "3924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 114,
												"nodeType": "Return",
												"src": "3894:38:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3651:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3741:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3757:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3749:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:6:0"
									},
									"scope": 362,
									"src": "3732:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4204:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4225:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 124,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "4231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 150,
														"src": "4214:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "4214:30:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3945:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4157:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4168:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:0"
									},
									"scope": 362,
									"src": "4148:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4454:124:0",
										"statements": [
											{
												"condition": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4468:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 138,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "4477:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 139,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 137,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "4464:108:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "4493:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 143,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "4547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 144,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "4556:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 142,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "4514:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4514:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "4507:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4257:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4390:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:31:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:0"
									},
									"scope": 362,
									"src": "4381:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1398
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4833:117:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4872:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4843:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"4843:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "4843:20:0"
															},
															"referencedDeclaration": 35,
															"src": "4843:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 161,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "4876:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:59:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 164,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "4919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																	"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4921:6:0",
															"memberName": "_roles",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "4919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 167,
														"indexExpression": {
															"id": 166,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4919:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$25_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4934:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "4919:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 157,
												"id": 169,
												"nodeType": "Return",
												"src": "4912:31:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4584:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4768:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:0"
									},
									"scope": 362,
									"src": "4759:191:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1406
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5340:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5350:25:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4956:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nameLocations": [
													"5311:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5311:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5311:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5255:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:0:0"
									},
									"scope": 362,
									"src": "5246:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1414
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5757:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "5767:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5388:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 199,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 198,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyRole",
												"nameLocations": [
													"5728:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5728:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:31:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:0"
									},
									"scope": 362,
									"src": "5662:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1422
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6427:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6441:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 218,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "6463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6463:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6441:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "6437:102:0",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "6477:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 221,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "6498:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 223,
															"nodeType": "RevertStatement",
															"src": "6491:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6567:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6549:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "6549:37:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "5806:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6357:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "6392:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6384:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:42:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:0"
									},
									"scope": 362,
									"src": "6348:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6791:245:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6830:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6801:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"6801:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "6801:20:0"
															},
															"referencedDeclaration": 35,
															"src": "6801:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 243,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "6834:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:59:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6878:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6870:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6911:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "6898:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6870:46:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 252,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "6926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6928:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "6926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 256,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "6935:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6941:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "6926:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6953:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6926:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6926:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7000:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "6977:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "6972:57:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6599:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6727:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6763:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6755:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:33:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:0"
									},
									"scope": 362,
									"src": "6718:318:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "7353:304:0",
										"statements": [
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7392:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "7363:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 278,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7363:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7363:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7363:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7396:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:59:0"
											},
											{
												"condition": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7436:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 285,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 286,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "7451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 284,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "7437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7614:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 277,
															"id": 311,
															"nodeType": "Return",
															"src": "7628:12:0"
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "7432:219:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "7461:147:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 289,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 280,
																					"src": "7475:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7477:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7475:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 293,
																			"indexExpression": {
																				"id": 291,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "7484:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7475:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7490:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "7475:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7498:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7475:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7475:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "7475:38:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "7544:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 302,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1270,
																			"src": "7559:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7559:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "7532:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 306,
															"nodeType": "EmitStatement",
															"src": "7527:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7593:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 277,
															"id": 308,
															"nodeType": "Return",
															"src": "7586:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7042:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7279:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7298:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7289:31:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7347:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:6:0"
									},
									"scope": 362,
									"src": "7270:387:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7976:304:0",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "8015:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "7986:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 326,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 325,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7986:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7986:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7986:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 328,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "8019:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7986:59:0"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 332,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "8067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "8073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "8059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8059:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "8237:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 324,
															"id": 357,
															"nodeType": "Return",
															"src": "8251:12:0"
														}
													]
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "8055:219:0",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "8083:148:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 335,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "8097:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8099:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "8097:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"id": 337,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "8106:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8097:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8112:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "8097:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 342,
																	"indexExpression": {
																		"id": 341,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8120:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8097:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8097:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "8097:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "8167:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 348,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8173:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 349,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1270,
																			"src": "8182:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8182:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 346,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "8155:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8155:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "EmitStatement",
															"src": "8150:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8216:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 324,
															"id": 354,
															"nodeType": "Return",
															"src": "8209:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "7663:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7901:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7913:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7935:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:31:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7970:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7970:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:6:0"
									},
									"scope": 362,
									"src": "7892:388:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "2090:6192:0",
							"usedErrors": [
								379,
								382,
								1350,
								1353
							],
							"usedEvents": [
								387,
								1362,
								1371,
								1380
							]
						}
					],
					"src": "108:8175:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							616
						]
					},
					"id": 617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 373,
									"members": [
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 368,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 371,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 616,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 376,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 616,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 374,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 379,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 382,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 387,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 391,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 390,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 373,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 393,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 398,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 402,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"expression": {
														"id": 404,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 409,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 412,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 417,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 422,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 420,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 430,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 432,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 440,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 446,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 447,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 455,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 456,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 463,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 470,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 475,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 373,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 481,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 483,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 485,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 488,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 493,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 499,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 506,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 512,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 517,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 472,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 523,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 525,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 529,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 532,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 616,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 542,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 373,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 548,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 550,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 552,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 555,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 563,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 369,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 566,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 575,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 574,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 573,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 616,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 590,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 587,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 616,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 601,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 600,
												"id": 604,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 616,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 611,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 376,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 613,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 609,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 373,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 373,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 616,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 617,
							"src": "2349:6560:1",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1736
						],
						"IERC1822Proxiable": [
							1433
						],
						"Initializable": [
							616
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1434,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 619,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1433,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1737,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 621,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1736,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 624,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 617,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 623,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 626,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "1023:13:2"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 628,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1433,
										"src": "1038:17:2"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 798,
							"linearizedBaseContracts": [
								798,
								1433,
								616
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 636,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 631,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 634,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 633,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 632,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 640,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 638,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 643,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 648,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2643:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 651,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2653:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:2"
											},
											{
												"id": 654,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:2"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 656,
									"name": "onlyProxy",
									"nameLocation": "2631:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:2"
									},
									"src": "2622:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2914:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 659,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2924:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:2"
											},
											{
												"id": 662,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 664,
									"name": "notDelegated",
									"nameLocation": "2899:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:2"
									},
									"src": "2890:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3028:7:2",
										"statements": []
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 666,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3011:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:2"
									},
									"scope": 798,
									"src": "2968:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "3111:7:2",
										"statements": []
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 673,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 672,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3094:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:2"
									},
									"scope": 798,
									"src": "3041:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1432
									],
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "3783:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 684,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "3800:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1463,
													"src": "3800:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 683,
												"id": 686,
												"nodeType": "Return",
												"src": "3793:39:2"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:2",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 664,
												"src": "3752:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:2"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3774:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:2"
									},
									"scope": 798,
									"src": "3705:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "4263:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4291:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 698,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4273:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4341:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4360:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 702,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4319:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:2"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 695,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "4253:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4184:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:2"
									},
									"scope": 798,
									"src": "4158:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "4644:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 714,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 716,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 718,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "4749:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1494,
																"src": "4749:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 721,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "4654:251:2",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "4844:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 724,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "4865:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 726,
															"nodeType": "RevertStatement",
															"src": "4858:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:2"
									},
									"scope": 798,
									"src": "4599:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "5080:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 736,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 734,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 738,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5111:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "IfStatement",
												"src": "5090:145:2",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "5119:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 740,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "5195:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 742,
															"nodeType": "RevertStatement",
															"src": "5188:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:2"
									},
									"scope": 798,
									"src": "5028:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5651:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:2"
									},
									"scope": 798,
									"src": "5624:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "6137:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 785,
															"nodeType": "Block",
															"src": "6227:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "6245:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 769,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "6253:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1463,
																			"src": "6253:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 777,
																	"nodeType": "IfStatement",
																	"src": "6241:120:2",
																	"trueBody": {
																		"id": 776,
																		"nodeType": "Block",
																		"src": "6287:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 773,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 766,
																							"src": "6341:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 772,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 648,
																						"src": "6312:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 775,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 781,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6404:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 782,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "6423:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 778,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "6374:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1555,
																			"src": "6374:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 784,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:2"
																}
															]
														},
														"errorName": "",
														"id": 786,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 767,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "6213:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:2"
														},
														"src": "6204:235:2"
													},
													{
														"block": {
															"id": 793,
															"nodeType": "Block",
															"src": "6446:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 790,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6555:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 787,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "6513:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1468,
																			"src": "6513:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 792,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:2"
																}
															]
														},
														"errorName": "",
														"id": 794,
														"nodeType": "TryCatchClause",
														"src": "6440:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6169:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 760,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "6151:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1433_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1433",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1432,
														"src": "6151:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 795,
												"nodeType": "TryStatement",
												"src": "6147:437:2"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6083:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:2"
									},
									"scope": 798,
									"src": "6052:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 799,
							"src": "986:5606:2",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1468,
								1481,
								1759,
								1762
							],
							"usedEvents": [
								387,
								1447
							]
						}
					],
					"src": "115:6478:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1288
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							926
						]
					},
					"id": 927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 800,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 801,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1289,
							"src": "130:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 803,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 617,
							"src": "172:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 802,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "180:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 805,
										"name": "Initializable",
										"nameLocations": [
											"718:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "718:13:3"
									},
									"id": 806,
									"nodeType": "InheritanceSpecifier",
									"src": "718:13:3"
								},
								{
									"baseName": {
										"id": 807,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"733:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1288,
										"src": "733:18:3"
									},
									"id": 808,
									"nodeType": "InheritanceSpecifier",
									"src": "733:18:3"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 804,
								"nodeType": "StructuredDocumentation",
								"src": "237:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 926,
							"linearizedBaseContracts": [
								926,
								1288,
								616
							],
							"name": "PausableUpgradeable",
							"nameLocation": "695:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "758:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 813,
									"name": "Paused",
									"nameLocation": "842:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "857:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "849:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:17:3"
									},
									"src": "836:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "872:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 818,
									"name": "Unpaused",
									"nameLocation": "953:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"src": "947:32:3"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "998:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "985:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 819,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "985:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "1137:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 826,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1147:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:3"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "1012:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 824,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 823,
												"name": "onlyInitializing",
												"nameLocations": [
													"1120:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1120:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:16:3"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1093:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:3"
									},
									"scope": 926,
									"src": "1084:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "1250:32:3",
										"statements": [
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1260:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "1260:15:3"
											}
										]
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 833,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 832,
												"name": "onlyInitializing",
												"nameLocations": [
													"1233:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1233:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1233:16:3"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1196:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:3"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:3"
									},
									"scope": 926,
									"src": "1187:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1493:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 843,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "1503:19:3"
											},
											{
												"id": 846,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:3"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "1288:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 848,
									"name": "whenNotPaused",
									"nameLocation": "1477:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:3"
									},
									"src": "1468:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "1740:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 851,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "1750:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "1750:16:3"
											},
											{
												"id": 854,
												"nodeType": "PlaceholderStatement",
												"src": "1776:1:3"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1546:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 856,
									"name": "whenPaused",
									"nameLocation": "1727:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:3"
									},
									"src": "1718:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "1932:31:3",
										"statements": [
											{
												"expression": {
													"id": 862,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "1949:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 861,
												"id": 863,
												"nodeType": "Return",
												"src": "1942:14:3"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "1790:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1888:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1926:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 859,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:6:3"
									},
									"scope": 926,
									"src": "1879:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "2082:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2100:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 870,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "2101:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2101:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "2092:38:3"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "1969:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2040:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:3"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:3"
									},
									"scope": 926,
									"src": "2031:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "2257:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 882,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "2275:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2275:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2267:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "2267:41:3"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "2143:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2218:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:3"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:3"
									},
									"scope": 926,
									"src": "2209:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "2499:66:3",
										"statements": [
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 894,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2509:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2509:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 899,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "2545:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 898,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "2538:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "EmitStatement",
												"src": "2533:25:3"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "2321:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 892,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 891,
												"name": "whenNotPaused",
												"nameLocations": [
													"2485:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "2485:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2459:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:3"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:3"
									},
									"scope": 926,
									"src": "2450:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "2745:69:3",
										"statements": [
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 910,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2755:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2765:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2755:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "2755:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 915,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "2794:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 914,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2785:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "EmitStatement",
												"src": "2780:27:3"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "2571:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 908,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 907,
												"name": "whenPaused",
												"nameLocations": [
													"2734:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 856,
												"src": "2734:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2706:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:3"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:3"
									},
									"scope": 926,
									"src": "2697:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "2820:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 925,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3099:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "3079:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 922,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3079:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 924,
										"length": {
											"hexValue": "3439",
											"id": 923,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3087:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3079:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 927,
							"src": "677:2430:3",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387,
								813,
								818
							]
						}
					],
					"src": "105:3003:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
					"exportedSymbols": {
						"IERC1155Upgradeable": [
							1048
						],
						"IERC165Upgradeable": [
							1340
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 1341,
							"src": "135:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 931,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"394:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "394:18:4"
									},
									"id": 932,
									"nodeType": "InheritanceSpecifier",
									"src": "394:18:4"
								}
							],
							"canonicalName": "IERC1155Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 930,
								"nodeType": "StructuredDocumentation",
								"src": "195:165:4",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1048,
							"linearizedBaseContracts": [
								1048,
								1340
							],
							"name": "IERC1155Upgradeable",
							"nameLocation": "371:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "419:121:4",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 945,
									"name": "TransferSingle",
									"nameLocation": "551:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "582:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "566:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "608:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "592:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "630:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "614:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "642:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "634:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "654:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "646:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:95:4"
									},
									"src": "545:116:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "667:144:4",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 960,
									"name": "TransferBatch",
									"nameLocation": "822:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "861:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "845:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "895:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "879:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "925:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "909:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "947:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "937:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 953,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "937:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 954,
													"nodeType": "ArrayTypeName",
													"src": "937:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "970:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "960:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 956,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "960:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 957,
													"nodeType": "ArrayTypeName",
													"src": "960:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:147:4"
									},
									"src": "816:167:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "989:147:4",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 969,
									"name": "ApprovalForAll",
									"nameLocation": "1147:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1178:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1162:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1162:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1203:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1187:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1218:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1213:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1213:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:66:4"
									},
									"src": "1141:87:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "1234:343:4",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 976,
									"name": "URI",
									"nameLocation": "1588:3:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1599:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1592:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 971,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1592:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1622:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1606:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:34:4"
									},
									"src": "1582:44:4"
								},
								{
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "1632:173:4",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 986,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1819:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1837:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1829:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1854:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1846:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1828:29:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1881:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1881:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:9:4"
									},
									"scope": 1048,
									"src": "1810:80:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "1896:188:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2098:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2141:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2122:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 988,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2122:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 989,
													"nodeType": "ArrayTypeName",
													"src": "2122:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2178:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2159:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 991,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 992,
													"nodeType": "ArrayTypeName",
													"src": "2159:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:75:4"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2211:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 995,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2211:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 996,
													"nodeType": "ArrayTypeName",
													"src": "2211:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:18:4"
									},
									"scope": 1048,
									"src": "2089:140:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "2235:248:4",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2497:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2523:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2515:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2515:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2538:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2533:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2533:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2514:33:4"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2556:0:4"
									},
									"scope": 1048,
									"src": "2488:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "2563:135:4",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2712:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2737:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2729:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2754:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2746:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:35:4"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2787:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2787:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2786:6:4"
									},
									"scope": 1048,
									"src": "2703:90:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "2799:556:4",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3369:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3394:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3386:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3408:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3400:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3420:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3412:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3432:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3424:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3424:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3455:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3440:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3440:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:75:4"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3469:0:4"
									},
									"scope": 1048,
									"src": "3360:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "3476:390:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3880:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3919:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3911:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3911:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3941:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3933:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3933:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3972:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3953:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1037,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3953:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1038,
													"nodeType": "ArrayTypeName",
													"src": "3953:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4004:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3985:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1040,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1041,
													"nodeType": "ArrayTypeName",
													"src": "3985:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4036:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "4021:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4021:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:145:4"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4055:0:4"
									},
									"scope": 1048,
									"src": "3871:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1049,
							"src": "361:3697:4",
							"usedErrors": [],
							"usedEvents": [
								945,
								960,
								969,
								976
							]
						}
					],
					"src": "110:3949:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1126
						]
					},
					"id": 1127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1051,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1126,
							"linearizedBaseContracts": [
								1126
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1060,
									"name": "Transfer",
									"nameLocation": "405:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "414:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "436:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "456:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:5"
									},
									"src": "399:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1069,
									"name": "Approval",
									"nameLocation": "636:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "645:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "668:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "693:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:5"
									},
									"src": "630:78:5"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:5"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "831:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:5"
									},
									"scope": 1126,
									"src": "785:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "942:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:5"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "982:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:5"
									},
									"scope": 1126,
									"src": "923:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1093,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "1234:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:5"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 1126,
									"src": "1204:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 1126,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2302:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2319:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:5"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2353:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:5"
									},
									"scope": 1126,
									"src": "2285:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2679:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2693:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2705:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:5"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2739:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:5"
									},
									"scope": 1126,
									"src": "2657:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1127,
							"src": "202:2545:5",
							"usedErrors": [],
							"usedEvents": [
								1060,
								1069
							]
						}
					],
					"src": "106:2642:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1340
						],
						"IERC721Upgradeable": [
							1242
						]
					},
					"id": 1243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 1129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1243,
							"sourceUnit": 1341,
							"src": "133:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1131,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"293:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "293:18:6"
									},
									"id": 1132,
									"nodeType": "InheritanceSpecifier",
									"src": "293:18:6"
								}
							],
							"canonicalName": "IERC721Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1130,
								"nodeType": "StructuredDocumentation",
								"src": "193:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1242,
							"linearizedBaseContracts": [
								1242,
								1340
							],
							"name": "IERC721Upgradeable",
							"nameLocation": "271:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "318:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1141,
									"name": "Transfer",
									"nameLocation": "417:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "442:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "426:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "464:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "448:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "484:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "468:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:67:6"
									},
									"src": "411:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "499:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1150,
									"name": "Approval",
									"nameLocation": "604:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "629:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "613:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "652:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "636:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "678:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "662:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:74:6"
									},
									"src": "598:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "693:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1159,
									"name": "ApprovalForAll",
									"nameLocation": "821:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "852:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "836:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "859:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "890:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "885:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:64:6"
									},
									"src": "815:85:6"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "906:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "996:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1014:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1006:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:15:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1052:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1044:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:17:6"
									},
									"scope": 1242,
									"src": "987:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "1067:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1212:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1228:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1220:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:17:6"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1268:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1260:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:15:6"
									},
									"scope": 1242,
									"src": "1203:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "1281:556:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1851:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1876:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1868:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1890:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1882:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1902:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1894:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1911:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:64:6"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1940:0:6"
									},
									"scope": 1242,
									"src": "1842:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1947:687:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2648:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2673:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2665:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2687:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2679:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2691:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:43:6"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2716:0:6"
									},
									"scope": 1242,
									"src": "2639:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "2723:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3469:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3490:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "3482:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3504:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "3496:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3496:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3516:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "3508:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:43:6"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3533:0:6"
									},
									"scope": 1242,
									"src": "3460:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "3540:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4006:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4022:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4014:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4014:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4034:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4026:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4013:29:6"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4051:0:6"
									},
									"scope": 1242,
									"src": "3997:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "4058:309:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4381:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4407:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4399:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4422:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4417:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4417:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:33:6"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4440:0:6"
									},
									"scope": 1242,
									"src": "4372:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "4447:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4600:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4620:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4612:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4611:17:6"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4660:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4652:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:18:6"
									},
									"scope": 1242,
									"src": "4591:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "4676:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4828:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4853:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4845:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4845:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4868:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4860:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4844:33:6"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4901:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4901:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4900:6:6"
									},
									"scope": 1242,
									"src": "4819:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1243,
							"src": "261:4648:6",
							"usedErrors": [],
							"usedEvents": [
								1141,
								1150,
								1159
							]
						}
					],
					"src": "108:4802:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1288
						],
						"Initializable": [
							616
						]
					},
					"id": 1289,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1289,
							"sourceUnit": 617,
							"src": "126:63:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1245,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "134:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1248,
										"name": "Initializable",
										"nameLocations": [
											"728:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "728:13:7"
									},
									"id": 1249,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:7"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1247,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1288,
							"linearizedBaseContracts": [
								1288,
								616
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "800:7:7",
										"statements": []
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1252,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1251,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "783:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:7"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:7"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:7"
									},
									"scope": 1288,
									"src": "748:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "875:7:7",
										"statements": []
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1257,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "858:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:7"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:7"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:7"
									},
									"scope": 1288,
									"src": "813:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "949:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1266,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1268,
												"nodeType": "Return",
												"src": "959:17:7"
											}
										]
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:7"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "940:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:7"
									},
									"scope": 1288,
									"src": "887:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "1056:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1275,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1277,
												"nodeType": "Return",
												"src": "1066:15:7"
											}
										]
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:7"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1040:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:7"
									},
									"scope": 1288,
									"src": "989:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "1166:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1283,
												"id": 1285,
												"nodeType": "Return",
												"src": "1176:8:7"
											}
										]
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:7"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "1157:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:7"
									},
									"scope": 1288,
									"src": "1094:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1289,
							"src": "688:505:7",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "101:1093:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1328
						],
						"IERC165": [
							2121
						],
						"Initializable": [
							616
						]
					},
					"id": 1329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1290,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 2122,
							"src": "140:80:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1291,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2121,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 617,
							"src": "221:66:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1293,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "229:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1296,
										"name": "Initializable",
										"nameLocations": [
											"807:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "807:13:8"
									},
									"id": 1297,
									"nodeType": "InheritanceSpecifier",
									"src": "807:13:8"
								},
								{
									"baseName": {
										"id": 1298,
										"name": "IERC165",
										"nameLocations": [
											"822:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2121,
										"src": "822:7:8"
									},
									"id": 1299,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:8"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1295,
								"nodeType": "StructuredDocumentation",
								"src": "289:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1328,
							"linearizedBaseContracts": [
								1328,
								2121,
								616
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "786:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "887:7:8",
										"statements": []
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1302,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1301,
												"name": "onlyInitializing",
												"nameLocations": [
													"870:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "870:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "870:16:8"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "845:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:8"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:8"
									},
									"scope": 1328,
									"src": "836:58:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "961:7:8",
										"statements": []
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1308,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1307,
												"name": "onlyInitializing",
												"nameLocations": [
													"944:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "944:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "944:16:8"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "909:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:8"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:0:8"
									},
									"scope": 1328,
									"src": "900:68:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2120
									],
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "1116:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1319,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "1133:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1321,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "1153:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2121_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2121_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1320,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1148:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1148:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2121",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1162:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1148:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1133:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1325,
												"nodeType": "Return",
												"src": "1126:47:8"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "973:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1043:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1068:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1061:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:20:8"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1110:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:6:8"
									},
									"scope": 1328,
									"src": "1034:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1329,
							"src": "768:414:8",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "114:1069:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1340
						]
					},
					"id": 1341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1331,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1340,
							"linearizedBaseContracts": [
								1340
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "812:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:9"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "855:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:9"
									},
									"scope": 1340,
									"src": "785:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1341,
							"src": "405:458:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1423
						]
					},
					"id": 1424,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1342,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1343,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:10",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1423,
							"linearizedBaseContracts": [
								1423
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:10",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 1350,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "356:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "373:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:10"
									},
									"src": "317:76:10"
								},
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:10",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 1353,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:10"
									},
									"src": "552:37:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:10",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1362,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "877:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "899:33:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "934:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:10"
									},
									"src": "854:110:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:10",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1371,
									"name": "RoleGranted",
									"nameLocation": "1193:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1205:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1227:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1252:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:10"
									},
									"src": "1187:89:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:10",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1380,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "1580:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "1602:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "1627:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:10"
									},
									"src": "1562:89:10"
								},
								{
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:10",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1755:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1769:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:10"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1809:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:10"
									},
									"scope": 1423,
									"src": "1738:77:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:10",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "2032:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:10"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "2069:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1395,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:10"
									},
									"scope": 1423,
									"src": "2010:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:10",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2347:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1400,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2361:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:10"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:10"
									},
									"scope": 1423,
									"src": "2328:59:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:10",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "2641:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1408,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "2655:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:10"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:10"
									},
									"scope": 1423,
									"src": "2621:60:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:10",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "3205:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "3219:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:10"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:10"
									},
									"scope": 1423,
									"src": "3183:73:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1424,
							"src": "225:3033:10",
							"usedErrors": [
								1350,
								1353
							],
							"usedEvents": [
								1362,
								1371,
								1380
							]
						}
					],
					"src": "109:3150:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1433
						]
					},
					"id": 1434,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1425,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1426,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:11",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1433,
							"linearizedBaseContracts": [
								1433
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:11",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:11"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "868:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1429,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:11"
									},
									"scope": 1433,
									"src": "820:57:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1434,
							"src": "343:536:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1999
						],
						"ERC1967Utils": [
							1736
						],
						"IBeacon": [
							1746
						],
						"StorageSlot": [
							2109
						]
					},
					"id": 1737,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1435,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1737,
							"sourceUnit": 1747,
							"src": "140:46:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1436,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1746,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1737,
							"sourceUnit": 2000,
							"src": "187:48:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1438,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1999,
										"src": "195:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1737,
							"sourceUnit": 2110,
							"src": "236:56:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1440,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2109,
										"src": "244:11:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1442,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:12",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1736,
							"linearizedBaseContracts": [
								1736
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:12",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1447,
									"name": "Upgraded",
									"nameLocation": "739:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "748:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:12"
									},
									"src": "733:47:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:12",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1454,
									"name": "AdminChanged",
									"nameLocation": "864:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "877:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "900:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:12"
									},
									"src": "858:60:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:12",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1459,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1009:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:12"
									},
									"src": "988:45:12"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:12",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1463,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 1736,
									"src": "1279:114:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1461,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:12",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1468,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "1509:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:12"
									},
									"src": "1474:59:12"
								},
								{
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:12",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1473,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "1630:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:12"
									},
									"src": "1604:41:12"
								},
								{
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:12",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1478,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "1744:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:12"
									},
									"src": "1717:43:12"
								},
								{
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:12",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1481,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:12"
									},
									"src": "1853:26:12"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "2018:77:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1489,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "2062:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1487,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "2035:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2031,
															"src": "2035:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2004,
													"src": "2035:53:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1486,
												"id": 1492,
												"nodeType": "Return",
												"src": "2028:60:12"
											}
										]
									},
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:12",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:12"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2009:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:12"
									},
									"scope": 1736,
									"src": "1957:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "2249:218:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1500,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "2263:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1510,
												"nodeType": "IfStatement",
												"src": "2259:119:12",
												"trueBody": {
													"id": 1509,
													"nodeType": "Block",
													"src": "2299:79:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1506,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "2349:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1505,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "2320:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1508,
															"nodeType": "RevertStatement",
															"src": "2313:54:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1514,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "2414:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1511,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "2387:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2031,
																"src": "2387:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "2387:53:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1517,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "2443:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:12"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:12",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2214:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:12"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:12"
									},
									"scope": 1736,
									"src": "2186:281:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "2860:254:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1530,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "2889:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1529,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "2870:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1534,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "2931:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1533,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "2922:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "EmitStatement",
												"src": "2917:32:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1537,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "2964:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1552,
													"nodeType": "Block",
													"src": "3065:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1549,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "3079:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1551,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:12"
														}
													]
												},
												"id": 1553,
												"nodeType": "IfStatement",
												"src": "2960:148:12",
												"trueBody": {
													"id": 1548,
													"nodeType": "Block",
													"src": "2981:78:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1544,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "3024:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1545,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "3043:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1541,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "2995:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1999_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:12",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1918,
																	"src": "2995:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1547,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:12",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2805:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2832:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:12"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:12"
									},
									"scope": 1736,
									"src": "2779:335:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:12",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1559,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1736,
									"src": "3335:105:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1557,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1558,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "3844:68:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1567,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "3888:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1565,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "3861:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2031,
															"src": "3861:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2004,
													"src": "3861:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1570,
												"nodeType": "Return",
												"src": "3854:51:12"
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:12",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:12"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3835:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:12"
									},
									"scope": 1736,
									"src": "3792:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "4039:172:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1578,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "4053:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1592,
												"nodeType": "IfStatement",
												"src": "4049:91:12",
												"trueBody": {
													"id": 1591,
													"nodeType": "Block",
													"src": "4077:63:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1585,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1584,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "4098:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1590,
															"nodeType": "RevertStatement",
															"src": "4091:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1596,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "4176:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1593,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "4149:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2031,
																"src": "4149:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "4149:44:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1599,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "4196:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:12"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:12",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "4013:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:12"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:12"
									},
									"scope": 1736,
									"src": "3994:217:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "4379:85:12",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1610,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "4407:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1612,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "4419:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1609,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "4394:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "EmitStatement",
												"src": "4389:39:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1616,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "4448:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1615,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "4438:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:12"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:12",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "4352:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:12"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:12"
									},
									"scope": 1736,
									"src": "4331:133:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:12",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1624,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 1736,
									"src": "4741:106:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1622,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1623,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "4963:69:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1632,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "5007:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1630,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "4980:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2031,
															"src": "4980:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2004,
													"src": "4980:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1635,
												"nodeType": "Return",
												"src": "4973:52:12"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:12",
										"text": " @dev Returns the current beacon."
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:12"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "4954:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:12"
									},
									"scope": 1736,
									"src": "4910:122:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "5161:390:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1643,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "5175:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1653,
												"nodeType": "IfStatement",
												"src": "5171:95:12",
												"trueBody": {
													"id": 1652,
													"nodeType": "Block",
													"src": "5203:63:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1649,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "5245:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1648,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1478,
																	"src": "5224:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1651,
															"nodeType": "RevertStatement",
															"src": "5217:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1657,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "5303:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1654,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "5276:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2031,
																"src": "5276:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "5276:45:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1660,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "5324:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:12"
											},
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:12",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "5344:28:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1663,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1670,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1666,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1640,
																	"src": "5383:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1665,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1746,
																"src": "5375:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1746_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1746",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:12",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1745,
														"src": "5375:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1671,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "5424:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1681,
												"nodeType": "IfStatement",
												"src": "5420:125:12",
												"trueBody": {
													"id": 1680,
													"nodeType": "Block",
													"src": "5463:82:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1677,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1664,
																		"src": "5513:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1676,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5484:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1679,
															"nodeType": "RevertStatement",
															"src": "5477:57:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:12",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5134:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:12"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:12"
									},
									"scope": 1736,
									"src": "5114:437:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "6155:254:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1692,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "6176:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1691,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "6165:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1696,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "6216:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1695,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "6201:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "EmitStatement",
												"src": "6196:30:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1699,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "6241:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1718,
													"nodeType": "Block",
													"src": "6360:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1715,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "6374:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1717,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:12"
														}
													]
												},
												"id": 1719,
												"nodeType": "IfStatement",
												"src": "6237:166:12",
												"trueBody": {
													"id": 1714,
													"nodeType": "Block",
													"src": "6258:96:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1707,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1686,
																						"src": "6309:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1706,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1746,
																					"src": "6301:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1746_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1746",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:12",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1745,
																			"src": "6301:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1711,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "6338:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1703,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "6272:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1999_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:12",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1918,
																	"src": "6272:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1713,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:12",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6108:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6127:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:12"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:12"
									},
									"scope": 1736,
									"src": "6076:333:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "6634:86:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1725,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1733,
												"nodeType": "IfStatement",
												"src": "6644:70:12",
												"trueBody": {
													"id": 1732,
													"nodeType": "Block",
													"src": "6663:51:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1729,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "6684:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1731,
															"nodeType": "RevertStatement",
															"src": "6677:26:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:12",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:12"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:12"
									},
									"scope": 1736,
									"src": "6598:122:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1737,
							"src": "449:6273:12",
							"usedErrors": [
								1468,
								1473,
								1478,
								1481
							],
							"usedEvents": [
								1447,
								1454,
								1459
							]
						}
					],
					"src": "114:6609:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1746
						]
					},
					"id": 1747,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1738,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1739,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:13",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1746,
							"linearizedBaseContracts": [
								1746
							],
							"name": "IBeacon",
							"nameLocation": "224:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:13",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:13"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "460:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:13"
									},
									"scope": 1746,
									"src": "411:58:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1747,
							"src": "214:257:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1999
						]
					},
					"id": 2000,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1748,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1749,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:14",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1999,
							"linearizedBaseContracts": [
								1999
							],
							"name": "Address",
							"nameLocation": "203:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:14",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1754,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "349:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:14"
									},
									"src": "316:50:14"
								},
								{
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:14",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1759,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "475:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:14"
									},
									"src": "452:39:14"
								},
								{
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:14",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1762,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:14"
									},
									"src": "591:24:14"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "1602:260:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1772,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																],
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1770,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1775,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "1640:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1785,
												"nodeType": "IfStatement",
												"src": "1612:109:14",
												"trueBody": {
													"id": 1784,
													"nodeType": "Block",
													"src": "1648:73:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1780,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1778,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1777,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "1669:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1783,
															"nodeType": "RevertStatement",
															"src": "1662:48:14"
														}
													]
												}
											},
											{
												"assignments": [
													1787,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "1732:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1786,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1794,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1788,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1765,
																"src": "1750:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1790,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "1772:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:14"
											},
											{
												"condition": {
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:14",
													"subExpression": {
														"id": 1795,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "1798:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1801,
												"nodeType": "IfStatement",
												"src": "1793:63:14",
												"trueBody": {
													"id": 1800,
													"nodeType": "Block",
													"src": "1807:49:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1797,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "1828:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1799,
															"nodeType": "RevertStatement",
															"src": "1821:24:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:14",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1550:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1577:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:14"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:14"
									},
									"scope": 1999,
									"src": "1531:331:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "2794:62:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1814,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "2833:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1815,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "2841:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1813,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "2811:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1812,
												"id": 1818,
												"nodeType": "Return",
												"src": "2804:45:14"
											}
										]
									},
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:14",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2727:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2743:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:14"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2780:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:14"
									},
									"scope": 1999,
									"src": "2705:151:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "3293:279:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1834,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																],
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1832,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1837,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "3331:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1847,
												"nodeType": "IfStatement",
												"src": "3303:108:14",
												"trueBody": {
													"id": 1846,
													"nodeType": "Block",
													"src": "3338:73:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1842,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1840,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1839,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "3359:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1845,
															"nodeType": "RevertStatement",
															"src": "3352:48:14"
														}
													]
												}
											},
											{
												"assignments": [
													1849,
													1851
												],
												"declarations": [
													{
														"constant": false,
														"id": 1849,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "3421:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1848,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1851,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "3435:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1850,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1858,
												"initialValue": {
													"arguments": [
														{
															"id": 1856,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "3488:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1852,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "3462:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1854,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "3481:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1860,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "3537:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1861,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "3545:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1862,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "3554:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1859,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "3510:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1831,
												"id": 1864,
												"nodeType": "Return",
												"src": "3503:62:14"
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3211:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3227:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1824,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3246:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:14"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3279:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:14"
									},
									"scope": 1999,
									"src": "3180:392:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "3811:154:14",
										"statements": [
											{
												"assignments": [
													1877,
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1877,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1891,
														"src": "3822:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1876,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1891,
														"src": "3836:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1878,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1884,
												"initialValue": {
													"arguments": [
														{
															"id": 1882,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "3881:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1880,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "3863:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:14",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1886,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "3930:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1887,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "3938:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1888,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "3947:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1885,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "3903:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1875,
												"id": 1890,
												"nodeType": "Return",
												"src": "3896:62:14"
											}
										]
									},
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3739:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3755:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1870,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:14"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3797:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1873,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:14"
									},
									"scope": 1999,
									"src": "3711:254:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "4203:156:14",
										"statements": [
											{
												"assignments": [
													1903,
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1903,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1917,
														"src": "4214:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1902,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1917,
														"src": "4228:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1904,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1910,
												"initialValue": {
													"arguments": [
														{
															"id": 1908,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "4275:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1906,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "4255:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:14",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1912,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "4324:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1913,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "4332:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1914,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "4341:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1911,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "4297:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1916,
												"nodeType": "Return",
												"src": "4290:62:14"
											}
										]
									},
									"documentation": {
										"id": 1893,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4136:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4152:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:14"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4189:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:14"
									},
									"scope": 1999,
									"src": "4106:253:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1957,
										"nodeType": "Block",
										"src": "4783:424:14",
										"statements": [
											{
												"condition": {
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:14",
													"subExpression": {
														"id": 1930,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "4798:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1955,
													"nodeType": "Block",
													"src": "4857:344:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1937,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "5045:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1941,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1921,
																				"src": "5071:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:14",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1952,
															"nodeType": "IfStatement",
															"src": "5041:119:14",
															"trueBody": {
																"id": 1951,
																"nodeType": "Block",
																"src": "5096:64:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1948,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1921,
																					"src": "5138:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1947,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1759,
																				"src": "5121:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1950,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:14"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1953,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "5180:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1929,
															"id": 1954,
															"nodeType": "Return",
															"src": "5173:17:14"
														}
													]
												},
												"id": 1956,
												"nodeType": "IfStatement",
												"src": "4793:408:14",
												"trueBody": {
													"id": 1936,
													"nodeType": "Block",
													"src": "4807:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1933,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "4829:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1932,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1998,
																	"src": "4821:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1935,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:14",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4670:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4694:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4716:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:14"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4769:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1927,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:14"
									},
									"scope": 1999,
									"src": "4625:582:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "5509:122:14",
										"statements": [
											{
												"condition": {
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:14",
													"subExpression": {
														"id": 1968,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "5524:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1977,
													"nodeType": "Block",
													"src": "5583:42:14",
													"statements": [
														{
															"expression": {
																"id": 1975,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "5604:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1967,
															"id": 1976,
															"nodeType": "Return",
															"src": "5597:17:14"
														}
													]
												},
												"id": 1978,
												"nodeType": "IfStatement",
												"src": "5519:106:14",
												"trueBody": {
													"id": 1974,
													"nodeType": "Block",
													"src": "5533:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1971,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1963,
																		"src": "5555:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1970,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1998,
																	"src": "5547:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1973,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:14",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "5433:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1960,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "5447:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:14"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "5495:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1965,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:14"
									},
									"scope": 1999,
									"src": "5407:224:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "5798:461:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1986,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "5874:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1995,
													"nodeType": "Block",
													"src": "6204:49:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1992,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "6225:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1994,
															"nodeType": "RevertStatement",
															"src": "6218:24:14"
														}
													]
												},
												"id": 1996,
												"nodeType": "IfStatement",
												"src": "5870:383:14",
												"trueBody": {
													"id": 1991,
													"nodeType": "Block",
													"src": "5897:301:14",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:14",
																"nodeType": "YulBlock",
																"src": "6055:133:14",
																"statements": [
																	{
																		"nativeSrc": "6073:40:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:14"
																			},
																			"nativeSrc": "6096:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:14"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:14",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:14",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:14",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:14"
																					},
																					"nativeSrc": "6137:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:14"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:14"
																			},
																			"nativeSrc": "6130:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:14"
																		},
																		"nativeSrc": "6130:44:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:14"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:14",
																	"valueSize": 1
																}
															],
															"id": 1990,
															"nodeType": "InlineAssembly",
															"src": "6046:142:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:14",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "5760:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:14"
									},
									"returnParameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:14"
									},
									"scope": 1999,
									"src": "5743:516:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2000,
							"src": "195:6066:14",
							"usedErrors": [
								1754,
								1759,
								1762
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2109
						]
					},
					"id": 2110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2001,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2002,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:15",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2109,
							"linearizedBaseContracts": [
								2109
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2005,
									"members": [
										{
											"constant": false,
											"id": 2004,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2005,
											"src": "1300:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2003,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1271:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2008,
									"members": [
										{
											"constant": false,
											"id": 2007,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2008,
											"src": "1355:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2006,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1326:46:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2011,
									"members": [
										{
											"constant": false,
											"id": 2010,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2011,
											"src": "1407:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2009,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1378:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2014,
									"members": [
										{
											"constant": false,
											"id": 2013,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "1462:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2012,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1433:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2017,
									"members": [
										{
											"constant": false,
											"id": 2016,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "1516:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2015,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1488:47:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2020,
									"members": [
										{
											"constant": false,
											"id": 2019,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2020,
											"src": "1568:11:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2018,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1541:45:15",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "1768:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:15",
													"nodeType": "YulBlock",
													"src": "1830:38:15",
													"statements": [
														{
															"nativeSrc": "1844:14:15",
															"nodeType": "YulAssignment",
															"src": "1844:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:15",
																"nodeType": "YulIdentifier",
																"src": "1854:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2027,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2023,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:15",
														"valueSize": 1
													}
												],
												"id": 2029,
												"nodeType": "InlineAssembly",
												"src": "1821:47:15"
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:15",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1708:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2022,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:15"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1745:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2026,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2025,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2005,
														"src": "1745:11:15"
													},
													"referencedDeclaration": 2005,
													"src": "1745:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:15"
									},
									"scope": 2109,
									"src": "1684:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "2056:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:15",
													"nodeType": "YulBlock",
													"src": "2118:38:15",
													"statements": [
														{
															"nativeSrc": "2132:14:15",
															"nodeType": "YulAssignment",
															"src": "2132:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:15",
																"nodeType": "YulIdentifier",
																"src": "2142:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2038,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2034,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:15",
														"valueSize": 1
													}
												],
												"id": 2040,
												"nodeType": "InlineAssembly",
												"src": "2109:47:15"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:15",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "1996:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:15"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "2033:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2008_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2037,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2036,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2008,
														"src": "2033:11:15"
													},
													"referencedDeclaration": 2008,
													"src": "2033:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2008_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:15"
									},
									"scope": 2109,
									"src": "1972:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "2344:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:15",
													"nodeType": "YulBlock",
													"src": "2406:38:15",
													"statements": [
														{
															"nativeSrc": "2420:14:15",
															"nodeType": "YulAssignment",
															"src": "2420:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:15",
																"nodeType": "YulIdentifier",
																"src": "2430:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2049,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2045,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:15",
														"valueSize": 1
													}
												],
												"id": 2051,
												"nodeType": "InlineAssembly",
												"src": "2397:47:15"
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:15",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2284:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2044,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:15"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2321:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2011_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2048,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2047,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2011,
														"src": "2321:11:15"
													},
													"referencedDeclaration": 2011,
													"src": "2321:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2011_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:15"
									},
									"scope": 2109,
									"src": "2260:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "2632:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:15",
													"nodeType": "YulBlock",
													"src": "2694:38:15",
													"statements": [
														{
															"nativeSrc": "2708:14:15",
															"nodeType": "YulAssignment",
															"src": "2708:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:15",
																"nodeType": "YulIdentifier",
																"src": "2718:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2060,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2056,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:15",
														"valueSize": 1
													}
												],
												"id": 2062,
												"nodeType": "InlineAssembly",
												"src": "2685:47:15"
											}
										]
									},
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:15",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2572:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2055,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:15"
									},
									"returnParameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2609:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2014_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2058,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2014,
														"src": "2609:11:15"
													},
													"referencedDeclaration": 2014,
													"src": "2609:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2014_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:15"
									},
									"scope": 2109,
									"src": "2548:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "2917:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:15",
													"nodeType": "YulBlock",
													"src": "2979:38:15",
													"statements": [
														{
															"nativeSrc": "2993:14:15",
															"nodeType": "YulAssignment",
															"src": "2993:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:15",
																"nodeType": "YulIdentifier",
																"src": "3003:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2071,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2067,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:15",
														"valueSize": 1
													}
												],
												"id": 2073,
												"nodeType": "InlineAssembly",
												"src": "2970:47:15"
											}
										]
									},
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:15",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2858:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2066,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:15"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2895:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2069,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2017,
														"src": "2895:10:15"
													},
													"referencedDeclaration": 2017,
													"src": "2895:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:15"
									},
									"scope": 2109,
									"src": "2835:188:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2085,
										"nodeType": "Block",
										"src": "3225:112:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:15",
													"nodeType": "YulBlock",
													"src": "3287:44:15",
													"statements": [
														{
															"nativeSrc": "3301:20:15",
															"nodeType": "YulAssignment",
															"src": "3301:20:15",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:15",
																"nodeType": "YulIdentifier",
																"src": "3311:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2082,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2078,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2084,
												"nodeType": "InlineAssembly",
												"src": "3278:53:15"
											}
										]
									},
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:15",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "3158:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2077,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:15"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "3203:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2081,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2080,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2017,
														"src": "3203:10:15"
													},
													"referencedDeclaration": 2017,
													"src": "3203:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:15"
									},
									"scope": 2109,
									"src": "3135:202:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2096,
										"nodeType": "Block",
										"src": "3513:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:15",
													"nodeType": "YulBlock",
													"src": "3575:38:15",
													"statements": [
														{
															"nativeSrc": "3589:14:15",
															"nodeType": "YulAssignment",
															"src": "3589:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:15",
																"nodeType": "YulIdentifier",
																"src": "3599:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2093,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2089,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:15",
														"valueSize": 1
													}
												],
												"id": 2095,
												"nodeType": "InlineAssembly",
												"src": "3566:47:15"
											}
										]
									},
									"documentation": {
										"id": 2087,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:15",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "3455:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2088,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:15"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "3492:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2092,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2091,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "3492:9:15"
													},
													"referencedDeclaration": 2020,
													"src": "3492:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:15"
									},
									"scope": 2109,
									"src": "3433:186:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "3816:112:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:15",
													"nodeType": "YulBlock",
													"src": "3878:44:15",
													"statements": [
														{
															"nativeSrc": "3892:20:15",
															"nodeType": "YulAssignment",
															"src": "3892:20:15",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:15",
																"nodeType": "YulIdentifier",
																"src": "3902:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2104,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2100,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2106,
												"nodeType": "InlineAssembly",
												"src": "3869:53:15"
											}
										]
									},
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:15",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3751:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2099,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:15"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3795:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2102,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "3795:9:15"
													},
													"referencedDeclaration": 2020,
													"src": "3795:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:15"
									},
									"scope": 2109,
									"src": "3729:199:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2110,
							"src": "1245:2685:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2121
						]
					},
					"id": 2122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2111,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2112,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:16",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2121,
							"linearizedBaseContracts": [
								2121
							],
							"name": "IERC165",
							"nameLocation": "431:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:16",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "817:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2114,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:16"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "860:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:16"
									},
									"scope": 2121,
									"src": "790:76:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2122,
							"src": "421:447:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:16"
				},
				"id": 16
			},
			"src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol": {
				"ast": {
					"absolutePath": "src/smartcontracts/CryptoQuestTheShardsOfGenesisWallet.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1288
						],
						"CryptoQuestTheShardsOfGenesisWallet": [
							2810
						],
						"ERC165Upgradeable": [
							1328
						],
						"ERC1967Utils": [
							1736
						],
						"IAccessControl": [
							1423
						],
						"IDAO": [
							2131
						],
						"IERC1155Upgradeable": [
							1048
						],
						"IERC165Upgradeable": [
							1340
						],
						"IERC1822Proxiable": [
							1433
						],
						"IERC20Upgradeable": [
							1126
						],
						"IERC721Upgradeable": [
							1242
						],
						"IFarming": [
							2133
						],
						"IStaking": [
							2132
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							926
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 2811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 2124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2811,
							"sourceUnit": 363,
							"src": "58:81:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 2125,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2811,
							"sourceUnit": 927,
							"src": "140:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 2126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2811,
							"sourceUnit": 1127,
							"src": "219:79:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"id": 2127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2811,
							"sourceUnit": 1243,
							"src": "299:81:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
							"id": 2128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2811,
							"sourceUnit": 1049,
							"src": "381:83:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 2129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2811,
							"sourceUnit": 617,
							"src": "465:75:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2811,
							"sourceUnit": 799,
							"src": "541:77:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDAO",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 2131,
							"linearizedBaseContracts": [
								2131
							],
							"name": "IDAO",
							"nameLocation": "675:4:17",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2811,
							"src": "665:55:17",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStaking",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 2132,
							"linearizedBaseContracts": [
								2132
							],
							"name": "IStaking",
							"nameLocation": "732:8:17",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2811,
							"src": "722:63:17",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFarming",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 2133,
							"linearizedBaseContracts": [
								2133
							],
							"name": "IFarming",
							"nameLocation": "797:8:17",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2811,
							"src": "787:63:17",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2135,
										"name": "Initializable",
										"nameLocations": [
											"956:13:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "956:13:17"
									},
									"id": 2136,
									"nodeType": "InheritanceSpecifier",
									"src": "956:13:17"
								},
								{
									"baseName": {
										"id": 2137,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"971:24:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "971:24:17"
									},
									"id": 2138,
									"nodeType": "InheritanceSpecifier",
									"src": "971:24:17"
								},
								{
									"baseName": {
										"id": 2139,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"997:19:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 926,
										"src": "997:19:17"
									},
									"id": 2140,
									"nodeType": "InheritanceSpecifier",
									"src": "997:19:17"
								},
								{
									"baseName": {
										"id": 2141,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"1018:15:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 798,
										"src": "1018:15:17"
									},
									"id": 2142,
									"nodeType": "InheritanceSpecifier",
									"src": "1018:15:17"
								}
							],
							"canonicalName": "CryptoQuestTheShardsOfGenesisWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2134,
								"nodeType": "StructuredDocumentation",
								"src": "852:56:17",
								"text": "@custom:security-contact jacquedegraff@creodamo.com"
							},
							"fullyImplemented": true,
							"id": 2810,
							"linearizedBaseContracts": [
								2810,
								798,
								1433,
								926,
								362,
								1328,
								2121,
								1423,
								1288,
								616
							],
							"name": "CryptoQuestTheShardsOfGenesisWallet",
							"nameLocation": "917:35:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 2147,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "1064:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1040:62:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2143,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1040:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 2145,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1088:13:17",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 2144,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1078:9:17",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2146,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1078:24:17",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 2152,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "1132:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1108:60:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2148,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1108:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 2150,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1155:12:17",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 2149,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1145:9:17",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1145:23:17",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f72c0d8b",
									"id": 2157,
									"mutability": "constant",
									"name": "UPGRADER_ROLE",
									"nameLocation": "1198:13:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1174:66:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2153,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1174:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "55504752414445525f524f4c45",
												"id": 2155,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1224:15:17",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												},
												"value": "UPGRADER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												}
											],
											"id": 2154,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1214:9:17",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2156,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1214:26:17",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "276184ae",
									"id": 2159,
									"mutability": "mutable",
									"name": "erc20Address",
									"nameLocation": "1298:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1283:27:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2158,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1283:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2352a864",
									"id": 2161,
									"mutability": "mutable",
									"name": "erc721Address",
									"nameLocation": "1331:13:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1316:28:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1316:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05142002",
									"id": 2163,
									"mutability": "mutable",
									"name": "erc1155Address",
									"nameLocation": "1365:14:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1350:29:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2162,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1350:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2131c68c",
									"id": 2165,
									"mutability": "mutable",
									"name": "daoAddress",
									"nameLocation": "1400:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1385:25:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2164,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1385:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7b4be24",
									"id": 2167,
									"mutability": "mutable",
									"name": "stakingAddress",
									"nameLocation": "1431:14:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1416:29:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2166,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1416:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a2ade58",
									"id": 2169,
									"mutability": "mutable",
									"name": "farmingAddress",
									"nameLocation": "1466:14:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1451:29:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2168,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1451:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisWallet.Transaction",
									"id": 2180,
									"members": [
										{
											"constant": false,
											"id": 2171,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "1570:2:17",
											"nodeType": "VariableDeclaration",
											"scope": 2180,
											"src": "1562:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2170,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2173,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1590:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2180,
											"src": "1582:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1582:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2175,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1611:4:17",
											"nodeType": "VariableDeclaration",
											"scope": 2180,
											"src": "1605:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2174,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1605:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2177,
											"mutability": "mutable",
											"name": "executed",
											"nameLocation": "1630:8:17",
											"nodeType": "VariableDeclaration",
											"scope": 2180,
											"src": "1625:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2176,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1625:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2179,
											"mutability": "mutable",
											"name": "numConfirmations",
											"nameLocation": "1656:16:17",
											"nodeType": "VariableDeclaration",
											"scope": 2180,
											"src": "1648:24:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2178,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1648:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Transaction",
									"nameLocation": "1540:11:17",
									"nodeType": "StructDefinition",
									"scope": 2810,
									"src": "1533:146:17",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "80f59a65",
									"id": 2186,
									"mutability": "mutable",
									"name": "isConfirmed",
									"nameLocation": "1737:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1685:63:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 2185,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2181,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1693:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1685:44:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2184,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2182,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1712:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1704:24:17",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2183,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1723:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ace38c2",
									"id": 2190,
									"mutability": "mutable",
									"name": "transactions",
									"nameLocation": "1775:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1754:33:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Transaction_$2180_storage_$dyn_storage",
										"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction[]"
									},
									"typeName": {
										"baseType": {
											"id": 2188,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2187,
												"name": "Transaction",
												"nameLocations": [
													"1754:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2180,
												"src": "1754:11:17"
											},
											"referencedDeclaration": 2180,
											"src": "1754:11:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
											}
										},
										"id": 2189,
										"nodeType": "ArrayTypeName",
										"src": "1754:13:17",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Transaction_$2180_storage_$dyn_storage_ptr",
											"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "82e717f7",
									"id": 2192,
									"mutability": "mutable",
									"name": "requiredConfirmations",
									"nameLocation": "1808:21:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1793:36:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1793:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisWallet.Stake",
									"id": 2197,
									"members": [
										{
											"constant": false,
											"id": 2194,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1893:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2197,
											"src": "1885:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2193,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1885:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2196,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1917:9:17",
											"nodeType": "VariableDeclaration",
											"scope": 2197,
											"src": "1909:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2195,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1909:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "1869:5:17",
									"nodeType": "StructDefinition",
									"scope": 2810,
									"src": "1862:71:17",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 2202,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1972:6:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1939:39:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2197_storage_$",
										"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake)"
									},
									"typeName": {
										"id": 2201,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2198,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1947:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1939:25:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2197_storage_$",
											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2200,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2199,
												"name": "Stake",
												"nameLocations": [
													"1958:5:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2197,
												"src": "1958:5:17"
											},
											"referencedDeclaration": 2197,
											"src": "1958:5:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$2197_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c63a6ad2",
									"id": 2204,
									"mutability": "mutable",
									"name": "stakingRate",
									"nameLocation": "1999:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 2810,
									"src": "1984:26:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1984:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d0b5d9eac097410294ec9f2cee7cd185cf31ab46babf3dfdbeac8b222b03f2d1",
									"id": 2208,
									"name": "TransactionSubmitted",
									"nameLocation": "2059:20:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"indexed": true,
												"mutability": "mutable",
												"name": "txIndex",
												"nameLocation": "2096:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "2080:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:25:17"
									},
									"src": "2053:52:17"
								},
								{
									"anonymous": false,
									"eventSelector": "f8a17c9136a3ae33364fac05eb088a3cbafee10c1889c88593e20ee2d8e4eb88",
									"id": 2214,
									"name": "TransactionConfirmed",
									"nameLocation": "2116:20:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2153:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2137:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"indexed": true,
												"mutability": "mutable",
												"name": "txIndex",
												"nameLocation": "2176:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2160:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:48:17"
									},
									"src": "2110:75:17"
								},
								{
									"anonymous": false,
									"eventSelector": "15ed165a284872ea7017f03df402a0cadfbfab588320ffaf83f160c2f82781c7",
									"id": 2218,
									"name": "TransactionExecuted",
									"nameLocation": "2196:19:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"indexed": true,
												"mutability": "mutable",
												"name": "txIndex",
												"nameLocation": "2232:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "2216:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:25:17"
									},
									"src": "2190:51:17"
								},
								{
									"anonymous": false,
									"eventSelector": "e5c8875c5e14471f806f15f740cd9fd54937d151e9dcf8ad3ba988d6a285e67e",
									"id": 2224,
									"name": "TransactionRevoked",
									"nameLocation": "2252:18:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2287:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "2271:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"indexed": true,
												"mutability": "mutable",
												"name": "txIndex",
												"nameLocation": "2310:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "2294:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2294:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:48:17"
									},
									"src": "2246:73:17"
								},
								{
									"anonymous": false,
									"eventSelector": "dd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc",
									"id": 2232,
									"name": "TokensStaked",
									"nameLocation": "2330:12:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2359:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "2343:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2373:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "2365:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2365:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "2389:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "2381:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:57:17"
									},
									"src": "2324:76:17"
								},
								{
									"anonymous": false,
									"eventSelector": "6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336",
									"id": 2240,
									"name": "TokensUnstaked",
									"nameLocation": "2411:14:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2442:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "2426:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2456:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "2448:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "2472:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "2464:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2425:54:17"
									},
									"src": "2405:75:17"
								},
								{
									"body": {
										"id": 2247,
										"nodeType": "Block",
										"src": "2553:39:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2244,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "2563:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2246,
												"nodeType": "ExpressionStatement",
												"src": "2563:22:17"
											}
										]
									},
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "2486:48:17",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2248,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:17"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:17"
									},
									"scope": 2810,
									"src": "2539:53:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2332,
										"nodeType": "Block",
										"src": "2927:601:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2271,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2937:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2937:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2273,
												"nodeType": "ExpressionStatement",
												"src": "2937:22:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2274,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2969:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2969:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2276,
												"nodeType": "ExpressionStatement",
												"src": "2969:17:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2277,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "2996:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2996:24:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2279,
												"nodeType": "ExpressionStatement",
												"src": "2996:24:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2281,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "3042:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2282,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3062:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2280,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3031:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3031:37:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "3031:37:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2286,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2147,
															"src": "3089:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2287,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3102:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2285,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3078:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3078:30:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "3078:30:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2291,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "3129:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2292,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3141:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2290,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3118:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3118:29:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2294,
												"nodeType": "ExpressionStatement",
												"src": "3118:29:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2296,
															"name": "UPGRADER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "3168:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2297,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3183:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2295,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3157:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:32:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2299,
												"nodeType": "ExpressionStatement",
												"src": "3157:32:17"
											},
											{
												"expression": {
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2300,
														"name": "requiredConfirmations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2192,
														"src": "3200:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2301,
														"name": "_requiredConfirmations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2252,
														"src": "3224:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3200:46:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2303,
												"nodeType": "ExpressionStatement",
												"src": "3200:46:17"
											},
											{
												"expression": {
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2304,
														"name": "stakingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2204,
														"src": "3256:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2305,
														"name": "_stakingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2254,
														"src": "3270:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3256:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2307,
												"nodeType": "ExpressionStatement",
												"src": "3256:26:17"
											},
											{
												"expression": {
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2308,
														"name": "erc20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "3293:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2309,
														"name": "_erc20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2256,
														"src": "3308:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3293:28:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2311,
												"nodeType": "ExpressionStatement",
												"src": "3293:28:17"
											},
											{
												"expression": {
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2312,
														"name": "erc721Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "3331:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2313,
														"name": "_erc721Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "3347:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3331:30:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2315,
												"nodeType": "ExpressionStatement",
												"src": "3331:30:17"
											},
											{
												"expression": {
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2316,
														"name": "erc1155Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "3371:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2317,
														"name": "_erc1155Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2260,
														"src": "3388:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3371:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2319,
												"nodeType": "ExpressionStatement",
												"src": "3371:32:17"
											},
											{
												"expression": {
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2320,
														"name": "daoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "3413:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2321,
														"name": "_daoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "3426:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3413:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2323,
												"nodeType": "ExpressionStatement",
												"src": "3413:24:17"
											},
											{
												"expression": {
													"id": 2326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2324,
														"name": "stakingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "3447:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2325,
														"name": "_stakingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2264,
														"src": "3464:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3447:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2327,
												"nodeType": "ExpressionStatement",
												"src": "3447:32:17"
											},
											{
												"expression": {
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2328,
														"name": "farmingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "3489:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2329,
														"name": "_farmingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "3506:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2331,
												"nodeType": "ExpressionStatement",
												"src": "3489:32:17"
											}
										]
									},
									"functionSelector": "63447471",
									"id": 2333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2269,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2268,
												"name": "initializer",
												"nameLocations": [
													"2908:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 470,
												"src": "2908:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2908:11:17"
										}
									],
									"name": "initialize",
									"nameLocation": "2607:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "2635:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "2627:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "_requiredConfirmations",
												"nameLocation": "2658:22:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "2650:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "_stakingRate",
												"nameLocation": "2698:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "2690:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "_erc20Address",
												"nameLocation": "2728:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "2720:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "_erc721Address",
												"nameLocation": "2759:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "2751:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2751:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "_erc1155Address",
												"nameLocation": "2791:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "2783:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "_daoAddress",
												"nameLocation": "2824:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "2816:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2816:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "_stakingAddress",
												"nameLocation": "2853:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "2845:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2845:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "_farmingAddress",
												"nameLocation": "2886:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "2878:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2878:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2617:290:17"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2927:0:17"
									},
									"scope": 2810,
									"src": "2598:930:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "3555:84:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2337,
																	"name": "ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "3581:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2338,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3593:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3597:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3593:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2336,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3573:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3573:31:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e2061646d696e",
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3606:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															},
															"value": "Not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															}
														],
														"id": 2335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3565:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3565:56:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2343,
												"nodeType": "ExpressionStatement",
												"src": "3565:56:17"
											},
											{
												"id": 2344,
												"nodeType": "PlaceholderStatement",
												"src": "3631:1:17"
											}
										]
									},
									"id": 2346,
									"name": "onlyAdmin",
									"nameLocation": "3543:9:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3552:2:17"
									},
									"src": "3534:105:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2359,
										"nodeType": "Block",
										"src": "3681:97:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2351,
																"name": "_txIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2348,
																"src": "3699:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 2352,
																	"name": "transactions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "3710:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Transaction_$2180_storage_$dyn_storage",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
																	}
																},
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3723:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3710:19:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3699:30:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e20646f6573206e6f74206578697374",
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3731:28:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb323e46bbcca91e157c2b50ad4ce2acbe1153338b838c84372d5723b8995ef0",
																"typeString": "literal_string \"Transaction does not exist\""
															},
															"value": "Transaction does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb323e46bbcca91e157c2b50ad4ce2acbe1153338b838c84372d5723b8995ef0",
																"typeString": "literal_string \"Transaction does not exist\""
															}
														],
														"id": 2350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3691:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3691:69:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2357,
												"nodeType": "ExpressionStatement",
												"src": "3691:69:17"
											},
											{
												"id": 2358,
												"nodeType": "PlaceholderStatement",
												"src": "3770:1:17"
											}
										]
									},
									"id": 2360,
									"name": "txExists",
									"nameLocation": "3654:8:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "3671:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "3663:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3663:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3662:18:17"
									},
									"src": "3645:133:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2374,
										"nodeType": "Block",
										"src": "3823:101:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3841:32:17",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2365,
																		"name": "transactions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2190,
																		"src": "3842:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Transaction_$2180_storage_$dyn_storage",
																			"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
																		}
																	},
																	"id": 2367,
																	"indexExpression": {
																		"id": 2366,
																		"name": "_txIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2362,
																		"src": "3855:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3842:22:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Transaction_$2180_storage",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref"
																	}
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3865:8:17",
																"memberName": "executed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2177,
																"src": "3842:31:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e20616c7265616479206578656375746564",
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3875:30:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c3f7cf602281cf7a98efd78d98ba46309975dadee18bcb57e640145699bd800",
																"typeString": "literal_string \"Transaction already executed\""
															},
															"value": "Transaction already executed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c3f7cf602281cf7a98efd78d98ba46309975dadee18bcb57e640145699bd800",
																"typeString": "literal_string \"Transaction already executed\""
															}
														],
														"id": 2364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3833:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3833:73:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2372,
												"nodeType": "ExpressionStatement",
												"src": "3833:73:17"
											},
											{
												"id": 2373,
												"nodeType": "PlaceholderStatement",
												"src": "3916:1:17"
											}
										]
									},
									"id": 2375,
									"name": "notExecuted",
									"nameLocation": "3793:11:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "3813:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2375,
												"src": "3805:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:18:17"
									},
									"src": "3784:140:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2391,
										"nodeType": "Block",
										"src": "3970:104:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3988:34:17",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2380,
																		"name": "isConfirmed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2186,
																		"src": "3989:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 2382,
																	"indexExpression": {
																		"id": 2381,
																		"name": "_txIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2377,
																		"src": "4001:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3989:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2385,
																"indexExpression": {
																	"expression": {
																		"id": 2383,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4011:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4015:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4011:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3989:33:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e20616c726561647920636f6e6669726d6564",
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4024:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c00ff6506fc53457ae4202871882703dada01c533275bb259e2cd12acaf31a69",
																"typeString": "literal_string \"Transaction already confirmed\""
															},
															"value": "Transaction already confirmed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c00ff6506fc53457ae4202871882703dada01c533275bb259e2cd12acaf31a69",
																"typeString": "literal_string \"Transaction already confirmed\""
															}
														],
														"id": 2379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3980:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3980:76:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2389,
												"nodeType": "ExpressionStatement",
												"src": "3980:76:17"
											},
											{
												"id": 2390,
												"nodeType": "PlaceholderStatement",
												"src": "4066:1:17"
											}
										]
									},
									"id": 2392,
									"name": "notConfirmed",
									"nameLocation": "3939:12:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "3960:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "3952:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3951:18:17"
									},
									"src": "3930:144:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2403,
										"nodeType": "Block",
										"src": "4147:45:17",
										"statements": [
											{
												"expression": {
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2399,
														"name": "erc20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "4157:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2400,
														"name": "_erc20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2394,
														"src": "4172:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4157:28:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2402,
												"nodeType": "ExpressionStatement",
												"src": "4157:28:17"
											}
										]
									},
									"functionSelector": "41bec0d2",
									"id": 2404,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2397,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2396,
												"name": "onlyAdmin",
												"nameLocations": [
													"4137:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2346,
												"src": "4137:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4137:9:17"
										}
									],
									"name": "setERC20Address",
									"nameLocation": "4089:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "_erc20Address",
												"nameLocation": "4113:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "4105:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4105:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4104:23:17"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4147:0:17"
									},
									"scope": 2810,
									"src": "4080:112:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2415,
										"nodeType": "Block",
										"src": "4267:47:17",
										"statements": [
											{
												"expression": {
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2411,
														"name": "erc721Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "4277:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2412,
														"name": "_erc721Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2406,
														"src": "4293:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4277:30:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2414,
												"nodeType": "ExpressionStatement",
												"src": "4277:30:17"
											}
										]
									},
									"functionSelector": "9a03d9a3",
									"id": 2416,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2409,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2408,
												"name": "onlyAdmin",
												"nameLocations": [
													"4257:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2346,
												"src": "4257:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4257:9:17"
										}
									],
									"name": "setERC721Address",
									"nameLocation": "4207:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "_erc721Address",
												"nameLocation": "4232:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2416,
												"src": "4224:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4224:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4223:24:17"
									},
									"returnParameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4267:0:17"
									},
									"scope": 2810,
									"src": "4198:116:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2427,
										"nodeType": "Block",
										"src": "4391:49:17",
										"statements": [
											{
												"expression": {
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2423,
														"name": "erc1155Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "4401:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2424,
														"name": "_erc1155Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "4418:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4401:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2426,
												"nodeType": "ExpressionStatement",
												"src": "4401:32:17"
											}
										]
									},
									"functionSelector": "d836fc6f",
									"id": 2428,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2420,
												"name": "onlyAdmin",
												"nameLocations": [
													"4381:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2346,
												"src": "4381:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4381:9:17"
										}
									],
									"name": "setERC1155Address",
									"nameLocation": "4329:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "_erc1155Address",
												"nameLocation": "4355:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2428,
												"src": "4347:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4347:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4346:25:17"
									},
									"returnParameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4391:0:17"
									},
									"scope": 2810,
									"src": "4320:120:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "4509:41:17",
										"statements": [
											{
												"expression": {
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2435,
														"name": "daoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "4519:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2436,
														"name": "_daoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2430,
														"src": "4532:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4519:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2438,
												"nodeType": "ExpressionStatement",
												"src": "4519:24:17"
											}
										]
									},
									"functionSelector": "965afa89",
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2433,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2432,
												"name": "onlyAdmin",
												"nameLocations": [
													"4499:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2346,
												"src": "4499:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4499:9:17"
										}
									],
									"name": "setDAOAddress",
									"nameLocation": "4455:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "_daoAddress",
												"nameLocation": "4477:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "4469:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4468:21:17"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4509:0:17"
									},
									"scope": 2810,
									"src": "4446:104:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2451,
										"nodeType": "Block",
										"src": "4627:49:17",
										"statements": [
											{
												"expression": {
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2447,
														"name": "stakingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "4637:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2448,
														"name": "_stakingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2442,
														"src": "4654:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4637:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2450,
												"nodeType": "ExpressionStatement",
												"src": "4637:32:17"
											}
										]
									},
									"functionSelector": "f4e0d9ac",
									"id": 2452,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2445,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2444,
												"name": "onlyAdmin",
												"nameLocations": [
													"4617:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2346,
												"src": "4617:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4617:9:17"
										}
									],
									"name": "setStakingAddress",
									"nameLocation": "4565:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "_stakingAddress",
												"nameLocation": "4591:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "4583:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4583:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4582:25:17"
									},
									"returnParameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4627:0:17"
									},
									"scope": 2810,
									"src": "4556:120:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "4753:49:17",
										"statements": [
											{
												"expression": {
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2459,
														"name": "farmingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "4763:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2460,
														"name": "_farmingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "4780:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4763:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2462,
												"nodeType": "ExpressionStatement",
												"src": "4763:32:17"
											}
										]
									},
									"functionSelector": "b001f618",
									"id": 2464,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2457,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2456,
												"name": "onlyAdmin",
												"nameLocations": [
													"4743:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2346,
												"src": "4743:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4743:9:17"
										}
									],
									"name": "setFarmingAddress",
									"nameLocation": "4691:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "_farmingAddress",
												"nameLocation": "4717:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "4709:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4709:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4708:25:17"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4753:0:17"
									},
									"scope": 2810,
									"src": "4682:120:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2496,
										"nodeType": "Block",
										"src": "4901:287:17",
										"statements": [
											{
												"assignments": [
													2476
												],
												"declarations": [
													{
														"constant": false,
														"id": 2476,
														"mutability": "mutable",
														"name": "txIndex",
														"nameLocation": "4919:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 2496,
														"src": "4911:15:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4911:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2479,
												"initialValue": {
													"expression": {
														"id": 2477,
														"name": "transactions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "4929:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Transaction_$2180_storage_$dyn_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
														}
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4942:6:17",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4929:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4911:37:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2484,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2466,
																	"src": "5007:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2485,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "5031:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2486,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "5057:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5086:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																{
																	"hexValue": "30",
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5123:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2483,
																"name": "Transaction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2180,
																"src": "4977:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Transaction_$2180_storage_ptr_$",
																	"typeString": "type(struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer)"
																}
															},
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"5003:2:17",
																"5024:5:17",
																"5051:4:17",
																"5076:8:17",
																"5105:16:17"
															],
															"names": [
																"to",
																"value",
																"data",
																"executed",
																"numConfirmations"
															],
															"nodeType": "FunctionCall",
															"src": "4977:158:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2180_memory_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Transaction_$2180_memory_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction memory"
															}
														],
														"expression": {
															"id": 2480,
															"name": "transactions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "4959:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Transaction_$2180_storage_$dyn_storage",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
															}
														},
														"id": 2482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4972:4:17",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4959:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Transaction_$2180_storage_$dyn_storage_ptr_$_t_struct$_Transaction_$2180_storage_$returns$__$attached_to$_t_array$_t_struct$_Transaction_$2180_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage pointer,struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref)"
														}
													},
													"id": 2490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4959:177:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2491,
												"nodeType": "ExpressionStatement",
												"src": "4959:177:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2493,
															"name": "txIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2476,
															"src": "5173:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2492,
														"name": "TransactionSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "5152:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5152:29:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2495,
												"nodeType": "EmitStatement",
												"src": "5147:34:17"
											}
										]
									},
									"functionSelector": "c6427474",
									"id": 2497,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2473,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2472,
												"name": "onlyAdmin",
												"nameLocations": [
													"4891:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2346,
												"src": "4891:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4891:9:17"
										}
									],
									"name": "submitTransaction",
									"nameLocation": "4817:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4843:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "4835:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "4856:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "4848:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4848:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "4877:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "4864:18:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4864:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4834:49:17"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4901:0:17"
									},
									"scope": 2810,
									"src": "4808:380:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2541,
										"nodeType": "Block",
										"src": "5365:224:17",
										"statements": [
											{
												"assignments": [
													2515
												],
												"declarations": [
													{
														"constant": false,
														"id": 2515,
														"mutability": "mutable",
														"name": "transaction",
														"nameLocation": "5395:11:17",
														"nodeType": "VariableDeclaration",
														"scope": 2541,
														"src": "5375:31:17",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
														},
														"typeName": {
															"id": 2514,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2513,
																"name": "Transaction",
																"nameLocations": [
																	"5375:11:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2180,
																"src": "5375:11:17"
															},
															"referencedDeclaration": 2180,
															"src": "5375:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2519,
												"initialValue": {
													"baseExpression": {
														"id": 2516,
														"name": "transactions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "5409:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Transaction_$2180_storage_$dyn_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
														}
													},
													"id": 2518,
													"indexExpression": {
														"id": 2517,
														"name": "_txIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2499,
														"src": "5422:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5409:22:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transaction_$2180_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5375:56:17"
											},
											{
												"expression": {
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2520,
															"name": "transaction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "5441:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
															}
														},
														"id": 2522,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5453:16:17",
														"memberName": "numConfirmations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2179,
														"src": "5441:28:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5473:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5441:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2525,
												"nodeType": "ExpressionStatement",
												"src": "5441:33:17"
											},
											{
												"expression": {
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2526,
																"name": "isConfirmed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2186,
																"src": "5484:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 2530,
															"indexExpression": {
																"id": 2527,
																"name": "_txIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2499,
																"src": "5496:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5484:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2531,
														"indexExpression": {
															"expression": {
																"id": 2528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5506:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5510:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5506:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5484:33:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5520:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5484:40:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2534,
												"nodeType": "ExpressionStatement",
												"src": "5484:40:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2536,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5561:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5565:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5561:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2538,
															"name": "_txIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "5573:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2535,
														"name": "TransactionConfirmed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "5540:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5540:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2540,
												"nodeType": "EmitStatement",
												"src": "5535:47:17"
											}
										]
									},
									"functionSelector": "c01a8c84",
									"id": 2542,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2502,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2501,
												"name": "onlyAdmin",
												"nameLocations": [
													"5263:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2346,
												"src": "5263:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5263:9:17"
										},
										{
											"arguments": [
												{
													"id": 2504,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2499,
													"src": "5290:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2503,
												"name": "txExists",
												"nameLocations": [
													"5281:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2360,
												"src": "5281:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5281:18:17"
										},
										{
											"arguments": [
												{
													"id": 2507,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2499,
													"src": "5320:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2508,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2506,
												"name": "notExecuted",
												"nameLocations": [
													"5308:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2375,
												"src": "5308:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5308:21:17"
										},
										{
											"arguments": [
												{
													"id": 2510,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2499,
													"src": "5351:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2511,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2509,
												"name": "notConfirmed",
												"nameLocations": [
													"5338:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2392,
												"src": "5338:12:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5338:22:17"
										}
									],
									"name": "confirmTransaction",
									"nameLocation": "5203:18:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "5230:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "5222:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5222:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:18:17"
									},
									"returnParameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5365:0:17"
									},
									"scope": 2810,
									"src": "5194:395:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2597,
										"nodeType": "Block",
										"src": "5699:391:17",
										"statements": [
											{
												"assignments": [
													2557
												],
												"declarations": [
													{
														"constant": false,
														"id": 2557,
														"mutability": "mutable",
														"name": "transaction",
														"nameLocation": "5729:11:17",
														"nodeType": "VariableDeclaration",
														"scope": 2597,
														"src": "5709:31:17",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
														},
														"typeName": {
															"id": 2556,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2555,
																"name": "Transaction",
																"nameLocations": [
																	"5709:11:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2180,
																"src": "5709:11:17"
															},
															"referencedDeclaration": 2180,
															"src": "5709:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2561,
												"initialValue": {
													"baseExpression": {
														"id": 2558,
														"name": "transactions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "5743:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Transaction_$2180_storage_$dyn_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
														}
													},
													"id": 2560,
													"indexExpression": {
														"id": 2559,
														"name": "_txIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2544,
														"src": "5756:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5743:22:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transaction_$2180_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5709:56:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2563,
																	"name": "transaction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "5784:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
																	}
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5796:16:17",
																"memberName": "numConfirmations",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2179,
																"src": "5784:28:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2565,
																"name": "requiredConfirmations",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2192,
																"src": "5816:21:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5784:53:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742065786563757465207478",
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5839:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e54dddc19fe041cd2ab5a676b9022929cd57fae1ef2ef044dff489da7dfdd60",
																"typeString": "literal_string \"Cannot execute tx\""
															},
															"value": "Cannot execute tx"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e54dddc19fe041cd2ab5a676b9022929cd57fae1ef2ef044dff489da7dfdd60",
																"typeString": "literal_string \"Cannot execute tx\""
															}
														],
														"id": 2562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5776:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5776:83:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2569,
												"nodeType": "ExpressionStatement",
												"src": "5776:83:17"
											},
											{
												"expression": {
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2570,
															"name": "transaction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2557,
															"src": "5870:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
															}
														},
														"id": 2572,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5882:8:17",
														"memberName": "executed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2177,
														"src": "5870:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5893:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5870:27:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2575,
												"nodeType": "ExpressionStatement",
												"src": "5870:27:17"
											},
											{
												"assignments": [
													2577,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2577,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5914:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 2597,
														"src": "5909:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2576,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5909:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2587,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2584,
																"name": "transaction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "5973:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
																}
															},
															"id": 2585,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5985:4:17",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2175,
															"src": "5973:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															],
															"expression": {
																"expression": {
																	"id": 2578,
																	"name": "transaction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "5927:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
																	}
																},
																"id": 2579,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5939:2:17",
																"memberName": "to",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2171,
																"src": "5927:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5942:4:17",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5927:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 2581,
																	"name": "transaction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "5954:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
																	}
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5966:5:17",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2173,
																"src": "5954:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5927:45:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5927:63:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5908:82:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2589,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2577,
															"src": "6008:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e206661696c6564",
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6017:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588",
																"typeString": "literal_string \"Transaction failed\""
															},
															"value": "Transaction failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588",
																"typeString": "literal_string \"Transaction failed\""
															}
														],
														"id": 2588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6000:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6000:38:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2592,
												"nodeType": "ExpressionStatement",
												"src": "6000:38:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2594,
															"name": "_txIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "6074:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2593,
														"name": "TransactionExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "6054:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6054:29:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2596,
												"nodeType": "EmitStatement",
												"src": "6049:34:17"
											}
										]
									},
									"functionSelector": "ee22610b",
									"id": 2598,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2547,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2546,
												"name": "onlyAdmin",
												"nameLocations": [
													"5648:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2346,
												"src": "5648:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5648:9:17"
										},
										{
											"arguments": [
												{
													"id": 2549,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2544,
													"src": "5667:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2550,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2548,
												"name": "txExists",
												"nameLocations": [
													"5658:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2360,
												"src": "5658:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5658:18:17"
										},
										{
											"arguments": [
												{
													"id": 2552,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2544,
													"src": "5689:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2551,
												"name": "notExecuted",
												"nameLocations": [
													"5677:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2375,
												"src": "5677:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5677:21:17"
										}
									],
									"name": "executeTransaction",
									"nameLocation": "5604:18:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "5631:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2598,
												"src": "5623:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5623:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5622:18:17"
									},
									"returnParameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5699:0:17"
									},
									"scope": 2810,
									"src": "5595:495:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2649,
										"nodeType": "Block",
										"src": "6200:306:17",
										"statements": [
											{
												"assignments": [
													2613
												],
												"declarations": [
													{
														"constant": false,
														"id": 2613,
														"mutability": "mutable",
														"name": "transaction",
														"nameLocation": "6230:11:17",
														"nodeType": "VariableDeclaration",
														"scope": 2649,
														"src": "6210:31:17",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
														},
														"typeName": {
															"id": 2612,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2611,
																"name": "Transaction",
																"nameLocations": [
																	"6210:11:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2180,
																"src": "6210:11:17"
															},
															"referencedDeclaration": 2180,
															"src": "6210:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2617,
												"initialValue": {
													"baseExpression": {
														"id": 2614,
														"name": "transactions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "6244:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Transaction_$2180_storage_$dyn_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
														}
													},
													"id": 2616,
													"indexExpression": {
														"id": 2615,
														"name": "_txIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2600,
														"src": "6257:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6244:22:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transaction_$2180_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6210:56:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2619,
																	"name": "isConfirmed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2186,
																	"src": "6285:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																		"typeString": "mapping(uint256 => mapping(address => bool))"
																	}
																},
																"id": 2621,
																"indexExpression": {
																	"id": 2620,
																	"name": "_txIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "6297:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6285:21:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2624,
															"indexExpression": {
																"expression": {
																	"id": 2622,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6307:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6311:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6307:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6285:33:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e206e6f7420636f6e6669726d6564",
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6320:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3d0a597e455a5df21f74650a7518ab8d226371e3763bb9c00413fb3af8193f2",
																"typeString": "literal_string \"Transaction not confirmed\""
															},
															"value": "Transaction not confirmed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3d0a597e455a5df21f74650a7518ab8d226371e3763bb9c00413fb3af8193f2",
																"typeString": "literal_string \"Transaction not confirmed\""
															}
														],
														"id": 2618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6277:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6277:71:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2627,
												"nodeType": "ExpressionStatement",
												"src": "6277:71:17"
											},
											{
												"expression": {
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2628,
															"name": "transaction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "6359:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2180_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
															}
														},
														"id": 2630,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6371:16:17",
														"memberName": "numConfirmations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2179,
														"src": "6359:28:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6391:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6359:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2633,
												"nodeType": "ExpressionStatement",
												"src": "6359:33:17"
											},
											{
												"expression": {
													"id": 2641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2634,
																"name": "isConfirmed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2186,
																"src": "6402:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 2638,
															"indexExpression": {
																"id": 2635,
																"name": "_txIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2600,
																"src": "6414:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6402:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2639,
														"indexExpression": {
															"expression": {
																"id": 2636,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6424:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6428:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6424:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6402:33:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6438:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6402:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2642,
												"nodeType": "ExpressionStatement",
												"src": "6402:41:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2644,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6478:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6482:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6478:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2646,
															"name": "_txIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2600,
															"src": "6490:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2643,
														"name": "TransactionRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2224,
														"src": "6459:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6459:40:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2648,
												"nodeType": "EmitStatement",
												"src": "6454:45:17"
											}
										]
									},
									"functionSelector": "20ea8d86",
									"id": 2650,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2603,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2602,
												"name": "onlyAdmin",
												"nameLocations": [
													"6149:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2346,
												"src": "6149:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6149:9:17"
										},
										{
											"arguments": [
												{
													"id": 2605,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2600,
													"src": "6168:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2606,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2604,
												"name": "txExists",
												"nameLocations": [
													"6159:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2360,
												"src": "6159:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6159:18:17"
										},
										{
											"arguments": [
												{
													"id": 2608,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2600,
													"src": "6190:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2609,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2607,
												"name": "notExecuted",
												"nameLocations": [
													"6178:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2375,
												"src": "6178:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6178:21:17"
										}
									],
									"name": "revokeConfirmation",
									"nameLocation": "6105:18:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "6132:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "6124:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6124:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6123:18:17"
									},
									"returnParameters": {
										"id": 2610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6200:0:17"
									},
									"scope": 2810,
									"src": "6096:410:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2697,
										"nodeType": "Block",
										"src": "6600:356:17",
										"statements": [
											{
												"assignments": [
													2659
												],
												"declarations": [
													{
														"constant": false,
														"id": 2659,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "6628:5:17",
														"nodeType": "VariableDeclaration",
														"scope": 2697,
														"src": "6610:23:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
															"typeString": "contract IERC20Upgradeable"
														},
														"typeName": {
															"id": 2658,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2657,
																"name": "IERC20Upgradeable",
																"nameLocations": [
																	"6610:17:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "6610:17:17"
															},
															"referencedDeclaration": 1126,
															"src": "6610:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2663,
												"initialValue": {
													"arguments": [
														{
															"id": 2661,
															"name": "erc20Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "6654:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2660,
														"name": "IERC20Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "6636:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1126_$",
															"typeString": "type(contract IERC20Upgradeable)"
														}
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6636:31:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6610:57:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2667,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6704:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6708:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6704:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2671,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6724:4:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisWallet_$2810",
																				"typeString": "contract CryptoQuestTheShardsOfGenesisWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisWallet_$2810",
																				"typeString": "contract CryptoQuestTheShardsOfGenesisWallet"
																			}
																		],
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6716:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2669,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6716:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6716:13:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2673,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2652,
																	"src": "6731:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2665,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2659,
																	"src": "6685:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6691:12:17",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1125,
																"src": "6685:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 2674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6685:54:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6741:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 2664,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6677:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6677:88:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2677,
												"nodeType": "ExpressionStatement",
												"src": "6677:88:17"
											},
											{
												"expression": {
													"id": 2687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2678,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "6776:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2197_storage_$",
																"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref)"
															}
														},
														"id": 2681,
														"indexExpression": {
															"expression": {
																"id": 2679,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6783:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6787:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6783:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6776:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$2197_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2683,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2652,
																"src": "6825:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2684,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6857:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6863:9:17",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6857:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2682,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "6797:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$2197_storage_ptr_$",
																"typeString": "type(struct CryptoQuestTheShardsOfGenesisWallet.Stake storage pointer)"
															}
														},
														"id": 2686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"6817:6:17",
															"6846:9:17"
														],
														"names": [
															"amount",
															"startTime"
														],
														"nodeType": "FunctionCall",
														"src": "6797:86:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$2197_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
														}
													},
													"src": "6776:107:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$2197_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref"
													}
												},
												"id": 2688,
												"nodeType": "ExpressionStatement",
												"src": "6776:107:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2690,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6912:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6916:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6912:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2692,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2652,
															"src": "6924:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2693,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6933:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6939:9:17",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6933:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2689,
														"name": "TokensStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2232,
														"src": "6899:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6899:50:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2696,
												"nodeType": "EmitStatement",
												"src": "6894:55:17"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 2698,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2655,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2654,
												"name": "whenNotPaused",
												"nameLocations": [
													"6586:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "6586:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6586:13:17"
										}
									],
									"name": "stakeTokens",
									"nameLocation": "6550:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6570:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "6562:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6562:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6561:17:17"
									},
									"returnParameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6600:0:17"
									},
									"scope": 2810,
									"src": "6541:415:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2774,
										"nodeType": "Block",
										"src": "7008:528:17",
										"statements": [
											{
												"assignments": [
													2705
												],
												"declarations": [
													{
														"constant": false,
														"id": 2705,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "7031:5:17",
														"nodeType": "VariableDeclaration",
														"scope": 2774,
														"src": "7018:18:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$2197_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake"
														},
														"typeName": {
															"id": 2704,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2703,
																"name": "Stake",
																"nameLocations": [
																	"7018:5:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2197,
																"src": "7018:5:17"
															},
															"referencedDeclaration": 2197,
															"src": "7018:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$2197_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2710,
												"initialValue": {
													"baseExpression": {
														"id": 2706,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "7039:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2197_storage_$",
															"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref)"
														}
													},
													"id": 2709,
													"indexExpression": {
														"expression": {
															"id": 2707,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7046:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7050:6:17",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7046:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7039:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$2197_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:39:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2712,
																	"name": "stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2705,
																	"src": "7075:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$2197_memory_ptr",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
																	}
																},
																"id": 2713,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7081:6:17",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2194,
																"src": "7075:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7090:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7075:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73207374616b6564",
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7093:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																"typeString": "literal_string \"No tokens staked\""
															},
															"value": "No tokens staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																"typeString": "literal_string \"No tokens staked\""
															}
														],
														"id": 2711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7067:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7067:45:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2718,
												"nodeType": "ExpressionStatement",
												"src": "7067:45:17"
											},
											{
												"assignments": [
													2720
												],
												"declarations": [
													{
														"constant": false,
														"id": 2720,
														"mutability": "mutable",
														"name": "stakingDuration",
														"nameLocation": "7131:15:17",
														"nodeType": "VariableDeclaration",
														"scope": 2774,
														"src": "7123:23:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2719,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7123:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2726,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2721,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7149:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7155:9:17",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7149:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 2723,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "7167:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$2197_memory_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
															}
														},
														"id": 2724,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7173:9:17",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2196,
														"src": "7167:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7149:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7123:59:17"
											},
											{
												"assignments": [
													2728
												],
												"declarations": [
													{
														"constant": false,
														"id": 2728,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7200:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2774,
														"src": "7192:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2727,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7192:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2739,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2729,
																			"name": "stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "7210:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$2197_memory_ptr",
																				"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
																			}
																		},
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7216:6:17",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2194,
																		"src": "7210:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2731,
																		"name": "stakingRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7225:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7210:26:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2733,
																	"name": "stakingDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2720,
																	"src": "7239:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7210:44:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7209:46:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "333635",
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7259:8:17",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_31536000_by_1",
																	"typeString": "int_const 31536000"
																},
																"value": "365"
															}
														],
														"id": 2737,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7258:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														}
													},
													"src": "7209:59:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7192:76:17"
											},
											{
												"assignments": [
													2742
												],
												"declarations": [
													{
														"constant": false,
														"id": 2742,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "7297:5:17",
														"nodeType": "VariableDeclaration",
														"scope": 2774,
														"src": "7279:23:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
															"typeString": "contract IERC20Upgradeable"
														},
														"typeName": {
															"id": 2741,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2740,
																"name": "IERC20Upgradeable",
																"nameLocations": [
																	"7279:17:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "7279:17:17"
															},
															"referencedDeclaration": 1126,
															"src": "7279:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2746,
												"initialValue": {
													"arguments": [
														{
															"id": 2744,
															"name": "erc20Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "7323:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2743,
														"name": "IERC20Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "7305:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1126_$",
															"typeString": "type(contract IERC20Upgradeable)"
														}
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7305:31:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7279:57:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2750,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7369:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7373:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7369:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2752,
																			"name": "stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "7381:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$2197_memory_ptr",
																				"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
																			}
																		},
																		"id": 2753,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7387:6:17",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2194,
																		"src": "7381:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2754,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2728,
																		"src": "7396:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7381:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2748,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2742,
																	"src": "7354:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7360:8:17",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1093,
																"src": "7354:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7354:49:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7405:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 2747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7346:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:83:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2759,
												"nodeType": "ExpressionStatement",
												"src": "7346:83:17"
											},
											{
												"expression": {
													"id": 2764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7440:25:17",
													"subExpression": {
														"baseExpression": {
															"id": 2760,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "7447:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2197_storage_$",
																"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref)"
															}
														},
														"id": 2763,
														"indexExpression": {
															"expression": {
																"id": 2761,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7454:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7458:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7454:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7447:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$2197_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2765,
												"nodeType": "ExpressionStatement",
												"src": "7440:25:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2767,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7496:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7500:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7496:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2769,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2705,
																"src": "7508:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$2197_memory_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
																}
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7514:6:17",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2194,
															"src": "7508:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2771,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2728,
															"src": "7522:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2766,
														"name": "TokensUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "7481:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7481:48:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2773,
												"nodeType": "EmitStatement",
												"src": "7476:53:17"
											}
										]
									},
									"functionSelector": "a5ce413b",
									"id": 2775,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2701,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2700,
												"name": "whenNotPaused",
												"nameLocations": [
													"6994:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "6994:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6994:13:17"
										}
									],
									"name": "unstakeTokens",
									"nameLocation": "6971:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6984:2:17"
									},
									"returnParameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7008:0:17"
									},
									"scope": 2810,
									"src": "6962:574:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2784,
										"nodeType": "Block",
										"src": "7588:25:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2781,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "7598:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7598:8:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2783,
												"nodeType": "ExpressionStatement",
												"src": "7598:8:17"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2785,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2778,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2147,
													"src": "7575:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2779,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2777,
												"name": "onlyRole",
												"nameLocations": [
													"7566:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "7566:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "7566:21:17"
										}
									],
									"name": "pause",
									"nameLocation": "7551:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7556:2:17"
									},
									"returnParameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7588:0:17"
									},
									"scope": 2810,
									"src": "7542:71:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2794,
										"nodeType": "Block",
										"src": "7667:27:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2791,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "7677:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7677:10:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2793,
												"nodeType": "ExpressionStatement",
												"src": "7677:10:17"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2795,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2788,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2147,
													"src": "7654:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2789,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2787,
												"name": "onlyRole",
												"nameLocations": [
													"7645:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "7645:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "7645:21:17"
										}
									],
									"name": "unpause",
									"nameLocation": "7628:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7635:2:17"
									},
									"returnParameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7667:0:17"
									},
									"scope": 2810,
									"src": "7619:75:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 2804,
										"nodeType": "Block",
										"src": "7796:2:17",
										"statements": []
									},
									"id": 2805,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2801,
													"name": "UPGRADER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2157,
													"src": "7781:13:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2802,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2800,
												"name": "onlyRole",
												"nameLocations": [
													"7772:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "7772:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "7772:23:17"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "7709:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2799,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7763:8:17"
									},
									"parameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "7735:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 2805,
												"src": "7727:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7726:27:17"
									},
									"returnParameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7796:0:17"
									},
									"scope": 2810,
									"src": "7700:98:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2808,
										"nodeType": "Block",
										"src": "7831:2:17",
										"statements": []
									},
									"id": 2809,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7811:2:17"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7831:0:17"
									},
									"scope": 2810,
									"src": "7804:29:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2811,
							"src": "908:6927:17",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1350,
								1353,
								1468,
								1481,
								1759,
								1762
							],
							"usedEvents": [
								387,
								813,
								818,
								1362,
								1371,
								1380,
								1447,
								2208,
								2214,
								2218,
								2224,
								2232,
								2240
							]
						}
					],
					"src": "32:7805:17"
				},
				"id": 17
			}
		}
	}
}